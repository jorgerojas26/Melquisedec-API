{"version":3,"sources":["styles/theme.js","pages/Login/layout.styles.js","components/LoginForm/styles.js","components/shared/Banner/index.js","components/LabeledInput/styles.js","components/LabeledInput/index.js","components/Button/styles.js","components/Button/index.js","components/LoginForm/index.js","pages/Login/index.js","pages/Home/layout.styles.js","pages/Home/new-layout.styles.js","components/Navbar/styles.js","components/Navbar/NavItem/index.js","components/Navbar/index.js","components/Notification/styles.js","components/Notification/index.js","components/CommonLayout/main.layout.js","components/WidgetBox/styles.js","components/Widgets/ClientWidgets/styles.js","components/WidgetBox/index.js","components/Table/styles.js","components/Table/Table.js","components/TableFilterInput/styles.js","components/TableFilterInput/index.js","components/Pagination/index.js","components/Table/index.js","components/ModuleTables/TopClientsTable/columns.js","components/ModuleTables/TopClientsTable/index.js","components/Card/styles.js","components/Card/index.js","api/clients/index.js","components/Widgets/ClientWidgets/index.js","hooks/paginatedResource.js","utils/formatDate.js","components/ModuleTables/ClientsTable/columns.js","hooks/notification.js","components/ModuleTables/ClientsTable/index.js","components/Toolbar/styles.js","components/Toolbar/index.js","components/Modal/styles.js","components/Modal/index.js","components/CommonLayout/form.layout.js","hooks/formError.js","utils/validateSchema.js","hooks/useForm.js","validations/schemas/client.js","pages/Clients/CRUDForm/index.js","components/ConfirmAlert/styles.js","components/ConfirmAlert/index.js","pages/Clients/index.js","api/users/index.js","components/ModuleTables/UsersTable/columns.js","components/ModuleTables/UsersTable/index.js","validations/schemas/user.js","pages/Users/CRUDForm/index.js","pages/Users/index.js","api/suppliers/index.js","components/ModuleTables/SuppliersTable/columns.js","components/ModuleTables/SuppliersTable/index.js","validations/schemas/supplier.js","pages/Suppliers/CRUDForm/index.js","pages/Suppliers/index.js","api/categories/index.js","components/ModuleTables/CategoriesTable/columns.js","components/ModuleTables/CategoriesTable/index.js","validations/schemas/category.js","pages/Categories/CRUDForm/index.js","pages/Categories/index.js","api/product_variants/index.js","components/ModuleTables/ProductsTable/columns.js","components/ModuleTables/ProductsTable/index.js","pages/Products/CRUDForm/layout.styles.js","api/products/index.js","validations/schemas/product.js","pages/Products/CRUDForm/variantForm.js","pages/Products/CRUDForm/index.js","pages/Products/stockForm/styles.js","components/NumberInput/styles.js","hooks/useInterval.js","components/NumberInput/index.js","utils/stockManipulation.js","pages/Products/stockForm/index.js","api/inventory/index.js","components/ModuleTables/InventoryMovesTable/columns.js","components/ModuleTables/InventoryMovesTable/index.js","components/ModuleModals/InventoryMovesModal/index.js","api/reports/index.js","components/Widgets/ProductWidgets/CostFluctuation/index.js","components/Widgets/ProductWidgets/AverageSales/index.js","pages/Products/index.js","api/supplyings/index.js","components/ModuleTables/SupplyingsTable/columns.js","components/ModuleTables/SupplyingsTable/index.js","validations/schemas/supplying.js","components/SearchInput/styles.js","components/SearchInput/index.js","components/SupplierSearch/index.js","components/ProductSearch/index.js","components/ModuleTables/RecentSupplyingsTable/columns.js","components/ModuleTables/RecentSupplyingsTable/index.js","pages/Supplyings/CRUDForm/index.js","pages/Supplyings/index.js","pages/SalesControl/layout.styles.js","components/ClientSearch/index.js","components/ModuleTables/SalesControlTable/columns.js","components/ModuleTables/SalesControlTable/index.js","components/SaleProductForm/styles.js","context/dolar.js","api/currencyRate/index.js","hooks/useCurrencyRates.js","components/SaleProductForm/index.js","components/ModuleModals/DebtsModal/styles.js","components/ModuleTables/DebtSelectionTable/index.js","components/ModuleModals/SaleDetailsModal/styles.js","components/SaleDetails/ClientDetails/styles.js","components/SaleDetails/ClientDetails/index.js","components/PaymentMethod/Selector/index.js","components/PaymentMethod/styles.js","components/PaymentMethod/index.js","components/PaymentMethod/POS/index.js","components/PaymentMethod/Transfer/index.js","components/PaymentMethod/Cash/index.js","components/SaleDetails/PaymentDetails/styles.js","components/SaleDetails/PaymentDetails/index.js","components/PaymentsForm/styles.js","components/PaymentsForm/index.js","components/SaleDetails/TotalDetails/Payment/index.js","api/payments/index.js","hooks/useConfirm.js","api/payment_methods/index.js","utils/mapPaymentMethods.js","hooks/usePaymentMethod.js","hooks/useLocalStorage.js","utils/arrayGroup.js","hooks/usePayment.js","components/ModuleModals/PaymentFormModal/index.js","components/SaleDetails/TotalDetails/Invoice/index.js","hooks/useSaleProducts.js","api/sales/index.js","components/ModuleModals/SaleDetailsModal/index.js","components/ModuleModals/DebtsModal/index.js","pages/SalesControl/index.js","hooks/useSale.js","components/ModuleTables/CurrenciesTable/columns.js","api/currencies/index.js","components/ModuleTables/CurrenciesTable/index.js","validations/schemas/currency.js","pages/Currencies/CRUDForm/index.js","pages/Currencies/index.js","components/ModuleTables/SalesTable/columns.js","components/ModuleTables/SalesTable/index.js","components/Widgets/SaleWidgets/DailySales/index.js","pages/Sales/index.js","api/debts/index.js","components/ModuleTables/DebtsTable/index.js","pages/Debts/index.js","pages/Reports/layout.styles.js","components/ModuleTables/ReportTables/Sales/columns.js","components/ModuleTables/ReportTables/Sales/index.js","components/ModuleTables/ReportTables/Payments/columns.js","components/ModuleTables/ReportTables/Payments/index.js","components/ModuleTables/ReportTables/Debts/columns.js","components/ModuleTables/ReportTables/Debts/index.js","components/ModuleTables/ReportTables/DebtPayments/columns.js","components/ModuleTables/ReportTables/DebtPayments/index.js","pages/Reports/index.js","components/ModuleTables/MoneyTable/columns.js","api/money/index.js","components/ModuleTables/MoneyTable/index.js","validations/schemas/money.js","pages/Money/CRUDForm/update_amount/index.js","pages/Money/index.js","pages/Home/index.js","hooks/redirect.js","App.js","api/errorHandling.js","index.js"],"names":["breakpoints","colors","MainWrapper","styled","div","FormContainer","MainContainer","ContentContainer","Header","header","LogoContainer","Main","InputContainer","SubmitButtonContainer","SvgComponent","props","xmlns","viewBox","d","StyledMainWrapper","label","errorborder","file","StyledInput","input","capitalize","textTransform","StyledLabel","LabeledInput","children","placeholder","value","active","onChange","disabled","as","innerRef","rest","ref","onFocus","event","target","select","StyledButton","button","background","color","cursor","Button","loading","className","type","LoginForm","Banner","fill","onSubmit","preventDefault","autoFocus","LoginPage","HeaderTitleContainer","main","DolarValueContainer","Heading","span","Wrapper","MainHeader","NavWrapper","NavContainer","Nav","nav","NavLink","Link","hide","IconContainer","iconVariant","NavLinkTextContainer","NavLinkText","NavLinkContentWrapper","NavItem","to","Icon","title","dissapearonmobile","activeItem","localStorage","getItem","onClick","elementURL","setItem","size","weight","Navbar","height","ShoppingCart","ArchiveBox","ClipboardText","FileMinus","Bookmark","Users","Barcode","ShoppingCartSimple","Package","IdentificationCard","User","Swap","Money","Container","Notification","PortalNotification","ReactDOM","createPortal","document","getElementById","SeparatorWrapper","ToolbarContainer","TableContainer","width","ConfirmContainer","ReportTableContainer","show","display","CloseButtonWrapper","WidgetBox","onClose","StyledFilterContainer","filterHeight","maxHeight","StyledLoadingContainer","data","position","StyledNoDataContainer","StyledTable","table","TD","td","TH","th","TR","tr","theme","THead","thead","TFoot","tfoot","TBody","tbody","PaginationContainer","Table","Head","Body","Foot","LoadingContainer","FilterContainer","NoDataContainer","Input","TableFilterInput","Paginate","pageCount","onPaginate","useState","selectedPage","setSelectedPage","previousLabel","disableInitialCallback","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","containerClassName","activeClassName","onPageChange","currentPage","handlePageSelect","selected","forcePage","CustomTable","columns","filterPlaceholder","async","onFilter","onRowSelect","onDeleteRow","multiSelect","selectedRows","showFooter","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","setSelected","useEffect","length","onFilterDebounced","debounce","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","some","r","id","original","getRowProps","tagName","rowIsAlreadySelected","newSelectedRows","filter","handleClick","style","padding","borderRadius","cells","cell","index","includes","getCellProps","group","getFooterGroupProps","getFooterProps","Pagination","COLUMNS","accessor","Cell","Number","toLocaleString","toFixed","TopClientsTable","memoizedColumns","useMemo","Card","BASE_URL","getClients","a","page","pageParam","filterParams","axios","get","catch","error","response","getTopClients","createClient","clientData","post","updateClient","patch","deleteClient","delete","ClientWidgets","topClients","setTopClients","topSalesRange","setTopSalesRange","topDebtsRange","setTopDebtsRange","setLoading","fetchTopClients","gap","alignItems","sales","debts","usePaginatedResource","fetching","count","fetchOnMount","setData","setError","fetchResource","useCallback","path","message","formData","date","DateTime","fromISO","setZone","toFormat","timeout","displayType","format","formatDate","ClientsTable","onClientSelect","shouldRefresh","showNotification","setPage","setFilter","records","ButtonContainer","Toolbar","onCreate","onEdit","onDelete","deleteText","recordSelected","name","StyledModal","backdrop","zindex","Modal","handleClose","PortalModal","ReactDom","Form","form","HeaderContainer","CloseButtonContainer","TitleContainer","BodyContainer","overflow","FooterWrapper","FooterContainer","InlineContainer","ErrorAlert","ErrorContainer","url","LoadingDiv","useFormError","initialState","errors","setErrors","handleErrors","errorObject","errorList","Symbol","iterator","forEach","validateSchema","schema","validate","abortEarly","inner","err","push","useForm","action","createResource","editResource","deleteResource","onSubmitSuccess","submitSuccessMessage","onDeleteSuccess","setFormData","successMessage","create","edit","handleNestedChange","selector","key","JSON","stringify","parse","handleChange","targetName","files","handleNumericInput","handleSubmit","actual_data","createdAt","console","log","handleDelete","submitErrors","setSubmitErrors","printError","hasError","yup","shape","required","cedula","min","max","phoneNumber","test","ClientForm","client","clientSchema","onValueChange","values","thousandSeparator","decimalSeparator","decimalScale","NumberFormatInput","allowEmptyFormatting","mask","Title","Description","Footer","ConfirmAlert","additionalActions","callback","useNotification","notification","setNotification","text","expiration","clearTimeout","setTimeout","Clients","selectedClient","setSelectedClient","CRUDAction","setCRUDAction","showWidgets","setShowWidgets","handleCRUD","currentTarget","submitMessage","activeRecord","getUsers","createUser","userData","updateUser","deleteUser","UsersTable","onUserSelect","username","password","nullable","permissions","UserForm","user","userSchema","floatValue","isAllowed","inputObj","allowDecimalSeparators","NumericFormatInput","selectedUser","setSelectedUser","getSuppliers","createSupplier","supplierData","updateSupplier","deleteSupplier","SuppliersTable","onSupplierSelect","rif","address","SupplierForm","supplier","supplierSchema","Suppliers","selectedSupplier","setSelectedSupplier","getCategories","createCategory","categoryData","updateCategory","deleteCategory","CategoriesTable","onCategorySelect","CategoryForm","category","categorySchema","Categories","selectedCategory","setSelectedCategory","getProductVariants","getProductVariantById","getRecentSupplyings","product_variant_id","countParam","deleteProductVariantApi","ProductsTable","onProductSelect","GeneralInfoContainer","VariantsContainer","InputsWrapper","InputsContainer","FileInputContainer","VariantButtonContainer","ProductImageContainer","VariantNameContainer","PriceContainer","UnitValueContainer","createProduct","productData","FormData","variantsWithImage","product_variant","variant","imagePath","append","brand","method","updateProduct","reasons","trim","of","price","typeError","profitPercent","unitValue","VariantForm","deleteProductVariant","productVariantList","i","errormessage","defaultValue","URL","createObjectURL","justifyContent","ProductForm","product","productSchema","Variants","VariantContainer","Label","StockInfo","FreeStock","TotalStock","MinusButton","PlusButton","NumericInput","useInterval","delay","savedCallback","useRef","current","tick","setInterval","clearInterval","NumberInput","onCtrlClick","plus","minus","running","setRunning","handleCtrlClick","ctrlKey","buttonName","onMouseDown","onMouseUp","onMouseLeave","releaseOrAssign","freeStock","currentStock","releasingStock","newProductStock","newFreeStock","StockForm","setFreeStock","stockTotal","setStockTotal","total","reduce","old","stock","productVariant","parseFloat","isNaN","onChangeHandler","stockToAsign","Math","floor","ctrlClickHandler","minHeight","getInventory","InventoryMovesTable","onError","InventoryMovesModal","getSalesReport","from","getDailySales","getCostFluctuation","productId","getProductAverageSales","CostFluctuation","report","fetch_report","margin","top","right","bottom","left","xScale","yScale","stacked","reverse","axisTop","axisRight","pointSize","pointColor","pointBorderWidth","pointBorderColor","pointLabelYOffset","useMesh","AverageSales","chart_data","axisLeft","e","enablePointLabel","enableGridX","enableGridY","tooltip","point","gridTemplateColumns","borderColor","x","y","Products","selectedProduct","setSelectedProduct","getSupplyings","createSupplying","supplyingData","updateSupplying","deleteSupplying","SupplyingsTable","onSupplyingSelect","supplierId","buyPrice","quantity","shouldOpen","option","SearchInput","styles","isError","onSelect","isDisabled","loadOptions","onCreateOption","defaultOptions","cacheOptions","menu","provided","flexDirection","menuList","container","control","state","boxShadow","selectProps","isFocused","border","inputValue","loadingMessage","isClearable","SupplierSearch","loadSuppliers","suppliers","record","ProductSearch","hideOutOfStock","showPriceOnName","loadProductVariants","products","p","product_name","converted_price","RecentSupplyingsTable","supplyings","SupplyingForm","supplying","supplyingSchema","loadingRecentSupplyings","setLoadingRecentSupplyings","recentSupplyings","setRecentSupplyings","productSearchDisabled","setProductSearchDisabled","supplierRef","productRef","buyPriceRef","quantityRef","fetchRecentSupplyings","select_action","mostRecentSupplying","focus","prefix","Supplyings","selectedSupplying","setSelectedSupplying","refreshTable","crudAction","MetadataContainer","InvoiceFormContainer","ClientContainer","PaymentsContainer","InvoiceTotalContainer","ClientNameContainer","ClientPhoneNumberContainer","OrderDetailsContainer","ProductFormContainer","ActionsContainer","TotalContainer","fieldset","ClientSearch","loadClients","clients","sale","minWidth","maxWidth","suffix","PRICE_VES","SalesControlTable","QuantityInput","DolarContext","createContext","DolarContextProvider","currencyRates","setCurrencyRates","Provider","getCurrencyRates","updateCurrencyRateRequest","currency","useCurrencyRates","useContext","getCurrencyRatesFromLocalStorage","window","updateCurrencyRate","fetchCurrencyRates","SaleProductForm","productToEdit","productSearchRef","setQuantity","quantityInputRef","textAlign","fontSize","getInputRef","DebtSelectionTable","onDebtSelect","onShowDetailsClick","DebtInfoTotal","DebtLabel","DebtValue","ClientDetails","Selector","paymentList","payment","display_name","NameContainer","CodeContainer","SelectContainer","CurrencyContainer","ischange","PaymentMethods","POS","isChange","amount","fixedDecimalScale","isNumericString","Transfer","transaction_code","bankId","Cash","Paypal","PaymentDetails","paymentInfo","marginTop","React","createElement","payment_method_name","PaymentTitleContainer","AddPaymentContainer","PaymentsForm","onPaymentInfoChange","onPaymentAdd","onPaymentDelete","selectedPaymentMethod","onPaymentMethodSelect","paymentMethods","showTitle","PaymentMethod","find","PaymentTotal","paymentTotal","twoRowsOnly","borderLeft","Object","keys","green","Fragment","create_payment_for_sale","saleId","useConfirm","INITIAL_CONFIRM_STATE","actions","confirmState","setConfirmState","getPaymentMethods","mapPaymentMethods","paymentMethodsArray","paymentMethod","sort","usePaymentMethod","loadOnMount","paymentMethodsLoading","setPaymentMethodsLoading","setPaymentMethods","setSelectedPaymentMethod","loadPaymentMethods","useLocalStorage","initialValue","item","storedValue","setStoredValue","valueToStore","Function","groupBy","array","acc","obj","property","usePayment","defaultPayment","persistToLocalStorage","setPaymentTotal","persistedPaymentTotal","setPersistedPaymentTotal","persistedPaymentInfo","setPersistedPaymentInfo","setPaymentInfo","summarizePaymentInfo","paymentsGroupedByName","paymentsInfo","accumulator","totalPayment","addDefaultPayment","Date","getTime","payment_method_id","paymentTotals","info","actual_payment_info","set_actual_payment_info","newPaymentInfo","code","PaymentFormModal","submitPayment","paymentSubmitHandler","total_payment","debt_total","debt","current_amount","Payment","InvoiceTotal","subtotal","debtTotal","invoiceTotal","useSaleProducts","invoiceProducts","setInvoiceProducts","persistedInvoiceProducts","setPersistedInvoiceProducts","persistedSubtotal","setPersistedSubtotal","setSubtotal","persistedSaleTotal","setPersistedSaleTotal","saleTotal","setSaleTotal","getSales","getSaleById","createSale","saleData","deleteSale","SaleDetailsModal","details","onPayment","showPaymentModal","setShowPaymentModal","saleDetails","setSaleDetails","onPaymentSubmit","original_amount","converted_amount","paid","Invoice","DebtsModal","selectedDebts","showDebtDetails","setShowDebtDetails","debtDetails","setDebtDetails","SalesControl","setSelectedDebts","setDebtTotal","dt","validateSale","paymentValidation","confirmActions","submitSale","onSaleSubmit","saveAsDebt","fullDebt","clientId","status","resetFields","onProductSubmit","invoiceProduct","onProductDelete","onSaveDebtHandler","onConfirmClose","useSale","showDebts","setShowDebts","clientSearchInput","setClientSearchInput","showClientForm","setShowClientForm","clientSearchRef","clientCedulaRef","clientPhoneNumberRef","listener","keyCode","body","addEventListener","removeEventListener","newClient","getCurrencies","currency_array","entries","prev","rounding","createCurrency","currencyData","updateCurrency","deleteCurrency","CurrenciesTable","onCurrencySelect","CurrencyForm","currencySchema","Currencies","selectedCurrency","setSelectedCurrency","SalesTable","onSaleSelect","DailySales","placeItems","Sales","selectedSale","setSelectedSale","getDebts","DebtsTable","DebtsPage","showDetails","setShowDetails","debtDebtails","ContentWrapper","ControlsWrapper","ControlsContainer","LeftWrapper","RightWrapper","CardContainer","CardHeader","CardBody","SalesContainer","DebtsContainer","TopContainer","rawProfitUSD","netProfitUSD","rawProfitVES","netProfitVES","SalesReportTable","filteredData","setFilteredData","filtered","f","toLowerCase","PaymentsReportTable","DebtsReportTable","amount_VES","amount_USD","total_USD","total_VES","DebtPaymentsTable","ReportsPage","now","toISODate","dates","setDates","reportDetails","setReportDetails","chartData","setChartData","payment_chart_data","payment_report","usedCount","prevState","top_sell_chart_data","top_sell_products","totalSold","top_sell","hourly_sales_chart_data","hourly_sales_report","hour","hourly_sales","sale_report","Payments","debt_report","debt_payment_report","DebtPayments","layout","valueFormat","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","enableArcLinkLabels","modifiers","payment_method","getAllMoney","updateMoney","moneyId","MoneyTable","onMoneySelect","MoneyUpdateAmount","money","moneySchema","resize","MoneyPage","selectedMoney","setSelectedMoney","HomePage","activeLocation","history","useHistory","currentLocation","useLocation","pathname","useRedirectToActiveLocation","component","CategoriesPage","ClientsPage","ProductsPage","SalesPage","SupplyingsPage","SuppliersPage","UsersPage","CurrenciesPage","App","exact","interceptors","use","res"],"mappings":"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","file":"static/js/main.683561aa.chunk.js","sourcesContent":["export const breakpoints = {\n    mobile: '500px',\n    tablet: '768px',\n    laptop: '1024px',\n    desktop: '1440px',\n    bigScreen: '1920px',\n};\n\nexport const colors = {\n    primary: '#0A704F',\n    lightPrimary: '#6F9C81',\n    extraLightPrimary: 'rgba(111,156,129, 0.2)',\n    secondary: '#FA7612',\n    lightSecondary: '#FA8B00',\n    darkerSecondary: '#cd5700',\n    lightGray: '#AAB8C2',\n    extraLightGray: '#E1E8ED',\n    superLightGray: '#F5F8FA',\n    lightBlack: '#999',\n    smokyBlack: '#100C08',\n    black: '#211717',\n    shadow: 'rgb(101 119 134 / 20%)',\n    brown: '#A25708',\n};\n","import styled from \"styled-components\";\nimport { colors, breakpoints } from \"styles/theme\";\n\nexport const MainWrapper = styled.div`\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n    background: ${colors.black};\n`;\n\nexport const FormContainer = styled.div`\n    width: 80%;\n    height: 50%;\n    border-radius: 4px;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        width: 500px;\n        height: 450px;\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        width: 600px;\n        height: 500px;\n    }\n`;\n","import styled from 'styled-components';\n\nimport { colors } from 'styles/theme';\n\nexport const MainWrapper = styled.div`\n    justify-content: center;\n    align-items: center;\n\n    width: 100%;\n    height: 100%;\n`;\n\nexport const MainContainer = styled.div`\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    padding: 30px;\n`;\n\nexport const ContentContainer = styled.div`\n    width: 100%;\n    border: 2px solid white;\n    padding: 30px;\n`;\n\nexport const Header = styled.header`\n    max-height: 200px;\n    max-width: 100%;\n    margin-bottom: 20px;\n`;\n\nexport const LogoContainer = styled.div`\n    max-height: 100%;\n\n    > svg {\n        :hover {\n            fill: ${colors.secondary};\n        }\n    }\n`;\n\nexport const Main = styled.div``;\n\nexport const InputContainer = styled.div`\n    align-items: center;\n    width: 100%;\n    margin-bottom: 10px;\n\n    > small {\n        margin-top: 5px;\n        font-size: 14px;\n    }\n\n    label {\n        width: 100%;\n    }\n`;\n\nexport const SubmitButtonContainer = styled.div`\n    height: 50px;\n    background: ${colors.primary};\n    > button {\n        color: white;\n        font-weight: 700;\n\n        :hover {\n            background: ${colors.secondary};\n        }\n    }\n`;\n","import * as React from 'react';\n\nfunction SvgComponent(props) {\n    return (\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 333 115' {...props}>\n            <path d='M287 21.4c0 21.5-.4 24.2-3.5 21.6-1-.8-1.9-.8-3.4-.1-2.6 1.4-6.7 1.4-9.4 0-4.1-2.1-5.7-5.1-5.7-10.7 0-4.6.4-5.8 2.9-8.3 2.4-2.4 3.8-2.9 7.5-2.9h4.6V3H3v106h116V90.5h-5.4c-6.4 0-9-1.9-10.8-7.7-.8-2.9-.8-4.7 0-7.6 1.8-5.8 4.4-7.7 10.5-7.5 2.9.1 6.7.2 8.5.2l3.2.1v44l-62.7.3c-34.6.1 12.3.2 104.2.2s121.2-.1 65.2-.2c-80.8-.3-101.8-.6-101.4-1.6.3-.9 21.7-1.3 100.5-1.5L331 109V3h-19.5C294.8 3 292 2.8 292 1.5c0-.9-.9-1.5-2.5-1.5H287v21.4zM36.4 13.3c2.4 1.7 1.3 6-1.2 5.3-5.2-1.5-6.9-1.6-8.7-.3-2.5 1.9-1.3 3.5 6.5 8.2 6 3.6 7 5 7 9C40 41 36.1 44 29.1 44c-6 0-9.1-1.5-9.1-4.4 0-2.3.2-2.4 6.7-2.3 9.2.3 9.6-1.7 1.4-6.8-3.4-2-6.8-4.6-7.6-5.8-2.2-3.2-1.9-7.4 1-10.2 1.9-2 3.4-2.5 7.8-2.5 2.9 0 6.1.6 7.1 1.3zm118.8 8.1c2.3 1.2 3.3 1.2 6.7 0 4.7-1.6 8.4-.7 10.1 2.6.6 1.1 1 5.7.8 10.8-.3 8.7-.3 8.7-3 9l-2.8.3v-7.8c0-9.5-.8-11.1-4.7-9.7-2.7.9-2.8 1.2-3.1 9.2l-.3 8.2H153v-7.8c0-9.4-.8-11-4.7-9.6-2.7.9-2.8 1.2-3.1 9.2l-.3 8.2H139V32.5c0-10.7.1-11.5 1.9-11.5 1.1 0 2.1.4 2.3 1 .2.6 1.9.4 4.3-.5 5-1.8 4.5-1.8 7.7-.1zM50.4 22.6c.3.9.6 4.7.6 8.5 0 7.7 1.2 9.2 5.6 6.9 2.2-1.2 2.4-1.9 2.4-9.2V21h6v11.5c0 11.7-.7 13.4-3.8 10.3-.9-.9-1.8-.9-3.7 0-4 1.8-8.9 1.5-11-.8-1.3-1.5-2-4.2-2.3-10-.2-4.3-.2-8.6.1-9.5.8-2 5.3-2 6.1.1zm38.7 1.3c2.5 2.5 2.9 3.7 2.9 8.5 0 7.6-2.6 10.7-9.8 11.4l-5.2.5v4.3c0 4.2-.1 4.4-3 4.4h-3V37.7c0-8.5.2-15.6.5-15.9.3-.2 3.7-.5 7.6-.6 6.6-.2 7.2 0 10 2.7zm23.1-1.8c2.1 1.1 4.8 6.6 4.8 9.9 0 1.8-.6 2-7 2-5.6 0-7 .3-7 1.5 0 2.4 4.8 3.8 8.4 2.5 2.6-.9 3.3-.8 4.4.7 1.9 2.7-1.8 5.3-7.5 5.3-8.4 0-12.2-3.7-12.3-11.8 0-4.6.4-5.8 2.9-8.3 2.3-2.3 3.8-2.9 7.1-2.9 2.3 0 5 .5 6.2 1.1zm13.7.6c.9 1.7 1.1 1.7 4 0 3.5-2.1 5.1-1.6 5.1 1.6 0 1.5-1.1 2.7-3.3 3.7-3.1 1.4-3.2 1.8-3.7 8.5-.5 6.4-.7 7-2.9 7.3-1.3.2-2.8-.2-3.2-1-1-1.5-1.2-20.2-.2-21.1 1.2-1.2 3.2-.7 4.2 1zm69.5.9c1.9 2 2.6 3.7 2.6 6.5V34h-7.1c-5.2 0-7 .3-6.7 1.2.8 2.4 5.2 3.8 8.8 2.8 3.5-1 4.9-.2 5 2.7 0 3.7-13.1 4.4-16.9.8-4.9-4.3-5.1-13.3-.4-17.9 3.7-3.7 10.9-3.7 14.7 0zm11.8-.7c1.1 1.8 1.2 1.8 4.5-.2 3.7-2.1 3.8-2.1 4.7.9.5 1.8 0 2.5-3.1 4.1l-3.8 2-.3 7.2c-.3 7.2-.3 7.2-3 6.9l-2.7-.3-.3-11.3c-.2-9.5 0-11.2 1.3-11.2.8 0 2 .8 2.7 1.9zm29.9-.9c1.6.9 1.7 1.5.8 3.1-.9 1.7-1.7 1.9-4.8 1.4-2.9-.5-4.1-.2-5.5 1.4-4.1 4.6-.5 11.8 5.3 10.5 1.4-.4 3-.7 3.4-.8.5 0 1.3.9 1.8 2.2.7 1.9.5 2.4-1.7 3.2-5.1 2-10.3 1.2-13.4-1.9-7.9-7.8-3.2-20.1 7.6-20.1 2.5 0 5.4.5 6.5 1zm20.3 1.1c2.5 1.9 2.6 2.5 2.6 11.5 0 9.5-.8 11.2-3.8 8.2-.9-.9-1.5-.9-2.4 0-1.8 1.8-7.3 1.5-9.7-.6-2.8-2.2-3.1-7.5-.6-10.2.9-1 3.7-2.2 6.1-2.6 5.7-.8 4.6-2.8-1.2-2.1-3.9.4-4.3.2-4.9-2.1-.8-3.2.7-4.2 6.6-4.2 3.2 0 5.5.6 7.3 2.1zm52.5-.7c3.4 1.8 5.1 5.4 5.1 10.7 0 3.3-.7 4.8-3.4 7.5-2.8 2.8-4.1 3.4-7.7 3.4-2.6 0-5.7-.8-7.6-2-6.3-3.8-6.6-14.2-.6-19 3.1-2.4 10.1-2.7 14.2-.6zM93.8 73.8L94 90h-7V74.1c0-14.4.2-16 1.8-16.4 4.6-1.3 4.7-1.1 5 16.1zm163.2-.3V90h-3.2c-1.8 0-5.1.2-7.3.5-8.3 1.2-14.3-6.6-11.7-15.3 1.8-5.8 4.4-7.7 10.8-7.7h5.4v-4.7c0-3.6.4-4.8 1.8-5.1 4.3-1.1 4.2-1.4 4.2 15.8zM22.6 58.8c.7.4 3.3 3.5 5.8 6.9 2.5 3.5 4.8 6.3 5.1 6.3.3 0 2.6-3.2 5.2-7 7-10.7 7.7-9.9 8.1 9.3l.3 15.7H41v-8c0-4.4-.3-8-.7-8-.5 0-1.8 1.6-3.1 3.5-1.2 1.9-2.8 3.5-3.5 3.5-.8 0-2.9-2.1-4.8-4.8l-3.4-4.7-.3 9.2-.3 9.3H19V74c0-16.2.3-17.4 3.6-15.2zm150 1.4c.7 2.2-1.9 5.2-4 4.5-1.7-.6-2.9-3.4-2.3-5.1 1-2.4 5.4-2.1 6.3.6zM74.3 69c2.8 2.2 5.2 8.2 4.3 10.5-.4 1.1-2.3 1.5-7.6 1.5-3.8 0-7 .4-7 .9 0 2.1 3.2 3.3 8.2 2.9 4.8-.3 5.3-.1 5.6 1.8.4 2.9-4.4 4.8-10.4 4.1-6.8-.7-10.8-5-10.8-11.5 0-7.6 4.3-12.1 11.5-12.2 2.2 0 4.7.8 6.2 2zm120.2-1c4.3 1.6 2.9 4.5-2.2 4.5-2.4 0-4.3.4-4.4 1-.1.5 2.1 2.1 4.7 3.5 5.1 2.6 6.2 4.7 5 9.5-.8 3-5.6 4.9-10.7 4.2-4.8-.6-6.4-1.9-5.5-4.3.5-1.3 1.4-1.5 4.4-1.1 3.8.6 7.3-.6 5.9-2-.4-.4-2.9-1.9-5.5-3.3-4.8-2.5-5.8-4.4-4.8-8.4s7.5-5.7 13.1-3.6zm26.9 0c3 1.1 5.6 5.7 5.6 10v3h-7.5c-7.4 0-7.5 0-6.4 2.1 1 1.9 1.7 2.1 6.9 1.6 5.1-.4 5.9-.3 6.3 1.4.7 2.5-1.5 4.1-6.6 4.6-9.2 1.1-15.4-4.7-14.4-13.4.9-8.2 8.1-12.4 16.1-9.3zm61.5.6c2.5 1.8 5.1 7.1 5.1 10.4 0 1.8-.6 2-7.5 2-4.1 0-7.5.4-7.5.9 0 2.1 3.2 3.3 8.2 2.9 4.8-.3 5.3-.1 5.6 1.8.4 2.9-4.4 4.8-10.5 4.1-6.6-.7-10.3-4.9-10.3-11.5.1-5.4 1.7-8.9 5.1-10.8 3.3-1.8 9-1.7 11.8.2zm31.3.2c.7.7.6 1.6-.1 3-1 1.8-1.5 2-4.1 1-5.7-1.9-10.3 3.9-7.6 9.4 1 1.9 2 2.3 6 2.4 3.5.1 5.1.6 5.8 1.8 1.4 2.6-.3 3.8-5.9 4.3-8.8.8-14-4.6-13-13.5.5-4.4 2.7-7.8 6.2-9.3 2.5-1.1 11.3-.5 12.7.9zM141 75.9c0 9.3 1.2 11.1 6 9.1 3-1.2 3-1.3 3-9.1V68h6v22l-3.7-.1c-2.1-.1-5.9.2-8.4.6-4 .6-5 .4-6.8-1.4-1.8-1.8-2.1-3.3-2.1-11.6V68h6v7.9zm32 3.1v11h-7V68h7v11z' />\n            <path d='M78.2 27.2c-.7.7-1.2 3.1-1.2 5.5 0 3.3.5 4.5 2.1 5.3 3.2 1.8 6.9-1.1 6.9-5.4 0-5.1-4.8-8.4-7.8-5.4zM104 27.5c-1.8 2.1-.9 2.7 3.6 2.3 3.6-.3 3.7-.4 2-2.1-2.1-2.1-4-2.2-5.6-.2zM185.8 27.1c-3 1.7-2 2.9 2.2 2.9 4.1 0 4.9-.7 2.8-2.8-1.4-1.4-2.7-1.5-5-.1zM247.4 35.5c-.8 1.9.3 3.5 2.5 3.5 2 0 4.1-1.9 4.1-3.7 0-1.8-5.9-1.7-6.6.2zM299.7 27.8c-4.2 4.6.1 13 5.2 10.2 5.9-3.1 4.3-12-2.2-12-.8 0-2.1.8-3 1.8zM243 74c-3.6 3.6-2 11 2.5 11 4.7 0 5.5-.9 5.5-6.1 0-4.4-.3-5.1-2.6-5.9-3.3-1.3-3.1-1.3-5.4 1zM65.8 73.1C62.5 75 63.7 77 68 77c4.4 0 5.5-2.1 2.1-4-2.3-1.2-2.2-1.2-4.3.1zM214.2 73.6c-2.9 2-2 3.4 2.2 3.4s5-.9 2.9-3.2c-2-2.2-2.3-2.2-5.1-.2zM274.8 73.1c-3.3 1.9-2.1 3.9 2.2 3.9 4.4 0 5.5-2.1 2.1-4-2.3-1.2-2.2-1.2-4.3.1zM272.6 28.2c-3.7 5.3.3 12.5 5.5 9.8 2.5-1.4 2.8-10.4.3-11.4-2.8-1.1-4.2-.7-5.8 1.6zM111.2 73.6c-1.6 1.1-2.2 2.5-2.2 5.3 0 4.4 1.4 6.1 5 6.1 3.7 0 5-1.8 5-6.7 0-3.7-.4-4.5-2.6-5.3-3.1-1.2-2.5-1.3-5.2.6z' />\n        </svg>\n    );\n}\n\nexport default SvgComponent;\n","import styled from 'styled-components';\nimport { colors } from 'styles/theme';\n\nexport const StyledMainWrapper = styled.label`\n    display: flex;\n    flex-direction: column;\n    position: relative;\n\n    justify-content: flex-end;\n\n    border: 1px solid #999;\n    border-radius: 4px;\n    max-height: 100%;\n    padding: 20px 0 5px 0;\n\n    background: white;\n\n    :focus-within {\n        box-shadow: 0 0 0 2px ${colors.secondary};\n        border-color: transparent;\n        > label {\n            color: ${colors.secondary};\n        }\n    }\n\n    ${(props) =>\n        props.errorborder &&\n        `\n        border: none;\n        box-shadow: 0 0 0 2px red;\n\n    `}\n\n    ${(props) => {\n        if (props.file) {\n            return `\n            background: ${colors.shadow};\n            cursor: pointer;\n            label {\n            font-size: 12px;\n            top: 2px;\n            left: 2px;\n            }\n            `;\n        }\n    }}\n`;\n\nexport const StyledInput = styled.input`\n    margin: 0;\n    min-width: 0px;\n    min-height: 0px;\n\n    height: 100%;\n    width: 100%;\n    border: 0;\n    outline: 0;\n\n    font-size: 14px;\n    padding: 0 5px 0 5px;\n\n    ${(props) => props.capitalize && { textTransform: 'capitalize' }}\n`;\n\nexport const StyledLabel = styled.label`\n    min-width: 0px;\n    min-height: 0px;\n\n    color: rgb(91, 112, 131);\n    position: absolute;\n    pointer-events: none;\n    top: 3px;\n    left: 5px;\n\n    font-size: 14px;\n    font-weight: 500;\n    transition: all 0.2s;\n`;\n\nexport const StyledErrorBadge = styled.div`\n    position: absolute;\n    right: 3px;\n    color: red;\n`;\n","import { StyledMainWrapper, StyledInput, StyledLabel } from './styles';\n\nconst LabeledInput = ({\n    children,\n    placeholder,\n    file,\n    value,\n    active,\n    capitalize,\n    errorborder,\n    onChange,\n    disabled,\n    as,\n    innerRef,\n    ...rest\n}) => {\n    return (\n        <StyledMainWrapper ref={innerRef} file={file} errorborder={errorborder}>\n            <StyledInput\n                onFocus={(event) => event.target.select()}\n                onChange={onChange}\n                capitalize={capitalize}\n                value={value}\n                disabled={disabled}\n                {...rest}\n                as={as}\n            />\n            <StyledLabel disabled={disabled}>{placeholder}</StyledLabel>\n        </StyledMainWrapper>\n    );\n};\n\nexport default LabeledInput;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1;\n\n    cursor: pointer;\n    background: none;\n    border: none;\n\n    box-shadow: rgb(101 119 134 / 20%) 0px 0px 15px, rgb(101 119 134 / 15%) 0px 0px 3px 1px;\n\n    min-width: 0px;\n    min-height: 0px;\n    height: 100%;\n\n    :hover {\n        opacity: 0.8;\n    }\n\n    span {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    svg {\n        margin-right: 3px;\n    }\n\n    ${(props) => props.background && { background: props.background }}\n    ${(props) => props.color && { color: props.color }}\n\n    ${(props) => props.disabled && { background: 'lightGrey', color: 'black !important', cursor: 'not-allowed' }}\n`;\n","import { StyledButton } from './styles';\n\nconst Button = ({ children, disabled, loading, ...rest }) => {\n    return (\n        <StyledButton className={loading ? 'button--loading' : ''} type='button' disabled={disabled} {...rest}>\n            <span className='button_text'>{children}</span>\n        </StyledButton>\n    );\n};\n\nexport default Button;\n","import { MainWrapper, MainContainer, ContentContainer, Main, Header, InputContainer, SubmitButtonContainer, LogoContainer } from './styles';\n\nimport Banner from 'components/shared/Banner';\n\nimport { colors } from 'styles/theme';\n\nimport LabeledInput from 'components/LabeledInput';\nimport SubmitButton from 'components/Button';\n\nconst LoginForm = () => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <MainWrapper>\n            <MainContainer>\n                <ContentContainer>\n                    <Header>\n                        <LogoContainer>\n                            <Banner fill={colors.primary} />\n                        </LogoContainer>\n                    </Header>\n                    <Main>\n                        <form onSubmit={handleSubmit}>\n                            <InputContainer>\n                                <LabeledInput placeholder='Usuario' autoFocus />\n                            </InputContainer>\n                            <InputContainer>\n                                <LabeledInput type='password' placeholder='Contraseña' />\n                            </InputContainer>\n                            <SubmitButtonContainer>\n                                <SubmitButton>Enviar</SubmitButton>\n                            </SubmitButtonContainer>\n                        </form>\n                    </Main>\n                </ContentContainer>\n            </MainContainer>\n        </MainWrapper>\n    );\n};\n\nexport default LoginForm;\n","import { FormContainer, MainWrapper } from './layout.styles';\n\nimport LoginForm from 'components/LoginForm';\n\nconst LoginPage = () => {\n    return (\n        <MainWrapper>\n            <FormContainer>\n                <LoginForm />\n            </FormContainer>\n        </MainWrapper>\n    );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\n\nimport { breakpoints, colors } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 50px 1fr 50px;\n    height: 100vh;\n    width: 100vw;\n\n    background: pink;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        grid-template-columns: minmax(70px, 240px) 1fr;\n    }\n`;\n\nexport const Header = styled.header`\n    position: sticky;\n    top: 0;\n    height: 50px;\n\n    background: ${colors.primary};\n\n    z-index: 1;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        display: flex;\n        height: 100vh;\n    }\n`;\n\nexport const Main = styled.main`\n    display: flex;\n    background: blue;\n\n    flex-direction: column-reverse;\n\n    background-image: url('../../assets/patterns/leaves-pattern.png');\n\n    @media (min-width: ${breakpoints.mobile}) {\n        flex-direction: column;\n    }\n`;\n\nexport const MainHeader = styled.div`\n    justify-content: center;\n    align-items: center;\n\n    position: sticky;\n    bottom: 0;\n    height: 50px;\n\n    background: ${colors.primary};\n    z-index: 1;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        flex-direction: row;\n        border-bottom: 2px solid ${colors.lightPrimary};\n        top: 0;\n        bottom: auto;\n    }\n\n    @media (min-width: ${breakpoints.tablet}) {\n        justify-content: space-between;\n    }\n`;\n\nexport const HeaderTitleContainer = styled.div`\n    display: none;\n    color: white;\n    margin-left: 10px;\n    justify-content: center;\n\n    @media (min-width: ${breakpoints.tablet}) {\n        display: block;\n    }\n`;\n\nexport const DolarValueContainer = styled.div`\n    flex-direction: row;\n    margin-right: 15px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n\n    span {\n        color: white;\n        font-size: 20px;\n        font-weight: 700;\n    }\n\n    h3 {\n        color: ${colors.smokyBlack};\n        margin: 0;\n    }\n`;\n\nexport const Heading = styled.span`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 24px;\n    font-weight: 800;\n`;\n\nexport const MainBody = styled.div`\n    @media (min-width: ${breakpoints.mobile}) {\n    }\n`;\n","import styled from 'styled-components';\n\nimport { breakpoints, colors } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-rows: 50px 1fr;\n    width: 100%;\n    height: 100%;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        grid-template-rows: 1fr;\n        grid-template-columns: 50px 1fr;\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        grid-template-columns: 240px 1fr;\n    }\n`;\n\nexport const Header = styled.header``;\n\nexport const TitleContainer = styled.div``;\n\nexport const MainWrapper = styled.div`\n    display: grid;\n    grid-template-rows: 1fr 50px;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        grid-template-rows: 30px 1fr;\n    }\n\n    @media (min-width: ${breakpoints.bigScreen}) {\n        grid-template-rows: 50px 1fr;\n    }\n`;\n\nexport const MainHeader = styled.div`\n    align-items: center;\n    justify-content: center;\n    background: ${colors.primary};\n\n    border-top: 2px solid ${colors.lightPrimary};\n\n    @media (min-width: ${breakpoints.mobile}) {\n        grid-row: 1;\n        border-bottom: 2px solid ${colors.lightPrimary};\n        border-top: none;\n    }\n\n    @media (min-width: ${breakpoints.tablet}) {\n        flex-direction: row;\n        justify-content: space-between;\n    }\n`;\n\nexport const Main = styled.main`\n    min-height: 100%;\n    overflow: auto;\n    background-image: url('../../assets/patterns/leaves-pattern.png');\n`;\n","import styled from 'styled-components';\n\nimport { colors, breakpoints } from 'styles/theme';\n\nimport { NavLink as Link } from 'react-router-dom';\n\nexport const MainWrapper = styled.div`\n    border-bottom: 2px solid ${colors.lightPrimary};\n    height: 100%;\n    background: ${colors.primary};\n\n    @media (min-width: ${breakpoints.mobile}) {\n        border-right: 2px solid ${colors.lightPrimary};\n    }\n`;\n\nexport const NavWrapper = styled.div`\n    align-items: center;\n`;\n\nexport const LogoContainer = styled.div`\n    display: none;\n\n    @media (min-width: ${breakpoints.laptop}) {\n        display: flex;\n        align-items: flex-start;\n        margin-top: 10px;\n    }\n`;\n\nexport const NavContainer = styled.div`\n    width: 100%;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        margin-top: 2px;\n        margin-bottom: 4px;\n        align-items: center;\n    }\n`;\n\nexport const Nav = styled.nav`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        flex-direction: column;\n        align-items: center;\n        height: 100%;\n        max-height: 100%;\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        align-items: flex-start;\n    }\n`;\n\nexport const NavLink = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    width: 100%;\n\n    user-select: none;\n    pointer-events: auto;\n    outline-style: none;\n    text-decoration: none;\n    cursor: pointer;\n\n    justify-content: center;\n    align-items: center;\n\n    border-bottom: 2px solid rgba(0, 0, 0, 0);\n\n    cursor: pointer;\n    outline-style: none;\n\n    :hover {\n        background: ${colors.extraLightPrimary};\n        color: white;\n    }\n\n    ${(props) =>\n        props.hide &&\n        `\n        @media (max-width: ${breakpoints.mobile}){\n        display: none;\n}\n    `}\n`;\n\nexport const IconContainer = styled.div`\n    display: inline-block;\n\n    ${(props) => {\n        if (props.iconVariant) {\n            return `\n\n            > :nth-child(2){\n                display: none;\n            }\n\n            @media (min-width: 988px){\n                > :nth-child(1){\n                display: none;\n            }\n\n            > :nth-child(2){\n                display: flex;\n            }\n\n            }\n            `;\n        }\n    }}\n`;\n\nexport const NavLinkTextContainer = styled.div`\n    line-height: 23px;\n    font-size: 19px;\n    font-weight: 700;\n\n    min-width: 0px;\n    max-width: 100%;\n\n    overflow-wrap: break-word;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    color: white;\n\n    margin: 0 15px 0 19px;\n\n    display: none;\n\n    @media (min-width: ${breakpoints.laptop}) {\n        display: inline-block;\n    }\n\n    @media (max-height: ${breakpoints.tablet}) {\n        font-size: 16px;\n    }\n`;\n\nexport const NavLinkText = styled.span`\n    overflow-wrap: break-word;\n    min-width: 0px;\n`;\n\nexport const NavLinkContentWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    place-items: center;\n    place-content: center;\n    width: 100%;\n    transition-property: background-color, box-shadow;\n    transition-duration: 0.2s;\n\n    &.active {\n        > ${IconContainer} svg {\n            fill: ${colors.secondary};\n        }\n\n        > ${NavLinkTextContainer} {\n            color: ${colors.secondary};\n        }\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        place-items: start;\n        place-content: start;\n        padding: 2px;\n    }\n\n    @media (min-width: ${breakpoints.desktop}) {\n        padding: 5px;\n    }\n\n    @media (min-width: ${breakpoints.bigScreen}) {\n        padding: 10px;\n    }\n`;\n","import { NavLink, NavLinkContentWrapper, IconContainer, NavLinkTextContainer, NavLinkText } from '../styles';\n\nimport { colors } from 'styles/theme';\n\nconst NavItem = ({ to, Icon, title, active, dissapearonmobile, ...rest }) => {\n    const activeItem = localStorage.getItem('activeLocation');\n\n    const handleClick = (elementURL) => {\n        localStorage.setItem('activeLocation', elementURL);\n    };\n\n    return (\n        <NavLink to={to} onClick={() => handleClick(to)} hide={dissapearonmobile ? 1 : 0} {...rest}>\n            <NavLinkContentWrapper className={activeItem === to ? 'active' : ''}>\n                <IconContainer>\n                    <Icon\n                        size='28px'\n                        weight={activeItem === to ? 'fill' : 'regular'}\n                        color={activeItem === to ? colors.secondary : 'white'}\n                    />\n                </IconContainer>\n                <NavLinkTextContainer>\n                    <NavLinkText>{title}</NavLinkText>\n                </NavLinkTextContainer>\n            </NavLinkContentWrapper>\n        </NavLink>\n    );\n};\n\nexport default NavItem;\n","import { colors } from 'styles/theme';\n\nimport { MainWrapper, NavWrapper, LogoContainer, NavContainer, Nav } from './styles';\n\nimport {\n    Package,\n    Barcode,\n    IdentificationCard,\n    Users,\n    User,\n    Bookmark,\n    FileMinus,\n    ArchiveBox,\n    ClipboardText,\n    ShoppingCart,\n    ShoppingCartSimple,\n    Swap,\n    Money,\n} from 'phosphor-react';\n\nimport Banner from 'components/shared/Banner';\nimport NavItem from 'components/Navbar/NavItem';\n\nconst Navbar = () => {\n    return (\n        <MainWrapper>\n            <NavWrapper>\n                <LogoContainer>\n                    <Banner height='80px' fill={colors.secondary} />\n                </LogoContainer>\n                <NavContainer>\n                    <Nav>\n                        <NavItem Icon={ShoppingCart} title='Control De Ventas' to='/control-de-ventas' />\n                        <NavItem Icon={ArchiveBox} title='Inventario' to='/inventario' />\n                        <NavItem Icon={ClipboardText} title='Reportes' to='/reportes' />\n                        <NavItem Icon={FileMinus} title='Deudas' to='/deudas' />\n                        <NavItem Icon={Bookmark} title='Categorias' to='/categorias' dissapearonmobile />\n                        <NavItem Icon={Users} title='Clientes' to='/clientes' />\n                        <NavItem Icon={Barcode} title='Productos' to='/productos' />\n                        <NavItem Icon={ShoppingCartSimple} title='Ventas' to='/ventas' dissapearonmobile />\n                        <NavItem Icon={Package} title='Abastecimientos' to='/abastecimientos' dissapearonmobile />\n                        <NavItem Icon={IdentificationCard} title='Proveedores' to='/proveedores' dissapearonmobile />\n                        <NavItem Icon={User} title='Usuarios' to='/usuarios' dissapearonmobile />\n                        <NavItem Icon={Swap} title='Tasas de cambio' to='/tasas-de-cambio' />\n                        <NavItem Icon={Money} title='Dinero' to='/dinero' />\n                    </Nav>\n                </NavContainer>\n            </NavWrapper>\n        </MainWrapper>\n    );\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\n\nimport { colors, breakpoints } from 'styles/theme';\n\nexport const Container = styled.div`\n    justify-content: center;\n\n    position: fixed;\n    top: 0;\n\n    height: 60px;\n    width: 100%;\n\n    box-shadow: rgba(101 119 134 / 20%) 0px 0px 15px, rgba(101 119 134 / 25%) 0px 0px 3px 1px;\n\n    font-size: 24px;\n    font-weight: 700;\n    text-align: center;\n    color: white;\n    z-index: 3;\n\n    ${(props) => {\n        if (props.type === 'success') {\n            return { background: colors.primary };\n        } else if (props.type === 'error') {\n            return { background: 'red' };\n        }\n    }}\n\n    @media (min-width: ${breakpoints.mobile}) {\n        top: auto;\n        bottom: 0;\n        height: 50px;\n    }\n`;\n","import ReactDOM from 'react-dom';\n\nimport { Container } from './styles';\n\nconst Notification = ({ type, children }) => {\n    return <Container type={type}>{children}</Container>;\n};\n\nconst PortalNotification = ({ type, children }) => {\n    return ReactDOM.createPortal(<Notification type={type}>{children}</Notification>, document.getElementById('modal-root'));\n};\n\nexport default PortalNotification;\n","import styled from 'styled-components';\n\nimport { colors, breakpoints } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n    height: 100%;\n`;\n\nexport const SeparatorWrapper = styled.div`\n    flex-direction: row;\n    height: 100%;\n`;\n\nexport const ContentContainer = styled.div`\n    flex: 1;\n    height: 100%;\n    overflow: auto;\n`;\n\nexport const ToolbarContainer = styled.div`\n    background: ${colors.extraLightPrimary};\n\n    div {\n        height: 50px;\n    }\n`;\n\nexport const TableContainer = styled.div`\n    @media (min-width: ${breakpoints.mobile}) {\n        max-height: 500px;\n    }\n`;\n\nexport const FormContainer = styled.div`\n    position: absolute;\n\n    left: 0;\n    right: 0;\n    top: 120px;\n    margin: auto;\n\n    height: max-content;\n    max-width: ${(props) => props.width || '400px'};\n\n    background: white;\n\n    border-radius: 4px;\n\n    z-index: 4;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        left: 50px;\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        left: 240px;\n    }\n`;\n\nexport const ConfirmContainer = styled.div`\n    position: absolute;\n    margin: auto;\n    top: 100px;\n    left: 0;\n    right: 0;\n\n    max-width: 350px;\n\n    background: white;\n\n    z-index: 4;\n\n    border-radius: 4px;\n`;\n\nexport const ReportTableContainer = styled.div`\n    table {\n        th {\n            background: ${colors.superLightGray};\n            color: black;\n            border: none;\n            font-size: 16px;\n        }\n        td {\n            color: #95a0a1;\n            font-weight: 500;\n            border-right: 1px solid ${colors.extraLightGray};\n\n            :last-child {\n                border-right: none;\n            }\n\n            :first-child {\n                padding: 0;\n            }\n\n            strong {\n                color: #556769;\n                font-weight: 500;\n            }\n\n            > svg {\n                display: inline-block;\n            }\n        }\n\n        tr {\n            background: none !important;\n            border-bottom: 1px solid rgb(147, 185, 177, 0.2);\n\n            :last-child {\n                border-bottom: none;\n            }\n        }\n    }\n`;\n","import styled from 'styled-components';\n\nimport { colors, breakpoints } from 'styles/theme';\n\nexport const Container = styled.div`\n    border-left: 1px solid ${colors.lightGray};\n\n    display: none;\n    position: fixed;\n    top: 50%;\n    bottom: 50px;\n    width: 100%;\n    background: ${colors.extraLightGray};\n    z-index: 2;\n    padding: 5px;\n    box-shadow: ${colors.shadow} 0px 0px 15px, ${colors.shadow} 0px 0px 3px 1px;\n    gap: 10px;\n\n    ${(props) =>\n        props.show && {\n            display: 'flex',\n        }}\n\n    @media (min-width: ${breakpoints.mobile}) {\n        top: 152px;\n        right: 0px;\n        bottom: 0px;\n        max-width: 50%;\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        top: 180px;\n        max-width: 30%;\n    }\n\n    @media (min-width: ${breakpoints.desktop}) {\n        display: flex;\n        position: static;\n    }\n`;\n\nexport const CloseButtonWrapper = styled.div`\n    flex-direction: row;\n    justify-content: flex-start;\n    height: 30px;\n    padding: 5px;\n\n    @media (min-width: ${breakpoints.desktop}) {\n        display: none;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import { Container, CloseButtonWrapper } from './styles';\n\nimport Button from 'components/Button';\nimport { X } from 'phosphor-react';\n\nconst WidgetBox = ({ children, show, onClose }) => {\n    return (\n        <Container show={show}>\n            <CloseButtonWrapper>\n                <Button onClick={onClose}>\n                    <X size='16px' />\n                </Button>\n            </CloseButtonWrapper>\n            {children}\n        </Container>\n    );\n};\n\nexport default WidgetBox;\n","import styled from 'styled-components';\n\nimport { colors, breakpoints } from 'styles/theme';\n\nexport const StyledFilterContainer = styled.div`\n    flex: 1 0 ${(props) => (props.filterHeight ? props.filterHeight : '50px')};\n`;\n\nexport const TableContainer = styled.div`\n    max-height: ${(props) => props.maxHeight || '500px'};\n    overflow: auto;\n`;\n\nexport const StyledLoadingContainer = styled.div`\n    align-items: center;\n    position: absolute;\n    top: 50%;\n    left: 0px;\n    right: 0px;\n\n    font-size: 22px;\n\n    border: 1px solid black;\n\n    background: ${colors.primary};\n    color: white;\n    z-index: 1;\n\n    ${(props) =>\n        !props.data && {\n            position: 'static',\n        }}\n`;\n\nexport const StyledNoDataContainer = styled.div`\n    align-items: center;\n    font-size: 22px;\n    border: 1px solid black;\n    color: red;\n`;\nexport const StyledTable = styled.table`\n    text-align: center;\n    border-collapse: collapse;\n    padding-bottom: 5px;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        border-bottom: 1px solid ${colors.shadow};\n    }\n`;\n\nexport const TD = styled.td`\n    font-size: 17px;\n\n    ${(props) =>\n        props.capitalize && {\n            textTransform: 'capitalize',\n        }}\n\n    @media (min-width: ${breakpoints.laptop}) {\n        padding: 10px;\n    }\n`;\n\nexport const TH = styled.th`\n    padding: 5px;\n    font-weight: 700;\n    font-size: 19px;\n    border-bottom: 1px solid black;\n\n    position: sticky;\n    top: 0px;\n\n    background: ${colors.smokyBlack};\n    color: white;\n`;\n\nexport const TR = styled.tr`\n    cursor: pointer;\n\n    ${(props) =>\n        props.active && {\n            background: colors.primary + '!important',\n            color: 'white',\n        }}\n\n    ${(props) =>\n        props.theme === 'dark' && {\n            background: colors.black,\n            color: 'white',\n        }}\n\n    :nth-child(2n + 0) {\n        background: ${(props) => (props.theme === 'light' ? 'rgba(0, 0, 0, 0.05)' : colors.smokyBlack)};\n    }\n\n    :hover {\n        background: ${colors.lightPrimary};\n        color: white;\n    }\n`;\n\nexport const THead = styled.thead``;\n\nexport const TFoot = styled.tfoot`\n    position: sticky;\n    bottom: 0;\n    background: lightGrey;\n\n    td {\n        color: black !important;\n        font-weight: 800 !important;\n        padding: 5px 0;\n    }\n`;\n\nexport const TBody = styled.tbody``;\n\nexport const PaginationContainer = styled.div`\n    align-items: center;\n    margin-top: 10px;\n    flex: 1 0 50px;\n\n    > ul,\n    li {\n        display: flex !important;\n        flex-direction: row;\n        padding: 0;\n        margin: 0;\n        height: 50px;\n    }\n\n    > ul li {\n        background: ${colors.lightGray};\n        font-weight: 700;\n        cursor: pointer;\n\n        :hover {\n            background: ${colors.lightPrimary};\n        }\n\n        &.active {\n            background: ${colors.primary};\n        }\n    }\n\n    > ul a {\n        display: flex;\n        padding: 0px 20px;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        border: 1px solid black;\n        border-radius: 4px;\n    }\n\n    @media (min-width: ${breakpoints.mobile}) {\n        align-items: flex-end;\n    }\n`;\n","import {\n    StyledTable,\n    THead,\n    TBody,\n    TFoot,\n    TH,\n    TR,\n    TD,\n    StyledLoadingContainer,\n    StyledFilterContainer,\n    StyledNoDataContainer,\n    TableContainer,\n    PaginationContainer,\n} from './styles.js';\n\nconst Table = ({ children, ...props }) => {\n    return <StyledTable {...props}>{children}</StyledTable>;\n};\n\nTable.TableContainer = ({ children, maxHeight }) => {\n    return <TableContainer maxHeight={maxHeight}>{children}</TableContainer>;\n};\n\nTable.Head = ({ children, ...props }) => {\n    return <THead {...props}>{children}</THead>;\n};\n\nTable.Body = ({ children, ...props }) => {\n    return <TBody {...props}>{children}</TBody>;\n};\n\nTable.Foot = ({ children, ...props }) => {\n    return <TFoot {...props}>{children}</TFoot>;\n};\n\nTable.TH = ({ children, ...props }) => {\n    return <TH {...props}>{children}</TH>;\n};\n\nTable.TR = ({ children, ...props }) => {\n    return <TR {...props}>{children}</TR>;\n};\n\nTable.TD = ({ children, ...props }) => {\n    return <TD {...props}>{children}</TD>;\n};\n\nTable.LoadingContainer = ({ children, data }) => {\n    return <StyledLoadingContainer data={data}>{children}</StyledLoadingContainer>;\n};\n\nTable.FilterContainer = ({ children, filterHeight }) => {\n    return <StyledFilterContainer filterHeight={filterHeight}>{children}</StyledFilterContainer>;\n};\n\nTable.NoDataContainer = ({ children }) => {\n    return <StyledNoDataContainer>{children}</StyledNoDataContainer>;\n};\n\nTable.PaginationContainer = ({ children }) => {\n    return <PaginationContainer>{children}</PaginationContainer>;\n};\n\nexport default Table;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n    display: flex;\n    flex: 1;\n    outline: none;\n`;\n","import { Input } from './styles';\n\nconst TableFilterInput = ({ placeholder, value, onChange, ...rest }) => {\n    return <Input type=\"search\" placeholder={placeholder} value={value} onChange={onChange} {...rest} />;\n};\n\nexport default TableFilterInput;\n","import { useState } from 'react';\n\nimport Pagination from 'react-paginate';\n\nimport { ArrowFatLeft, ArrowFatRight } from 'phosphor-react';\n\nconst Paginate = ({ children, pageCount, onPaginate, ...props }) => {\n    const [selectedPage, setSelectedPage] = useState(0);\n\n    const handlePageSelect = (selectedPage) => {\n        setSelectedPage(selectedPage);\n        onPaginate(selectedPage + 1);\n    };\n\n    return (\n        <Pagination\n            previousLabel={<ArrowFatLeft size='20px' />}\n            disableInitialCallback\n            nextLabel={<ArrowFatRight size='20px' />}\n            breakLabel={'...'}\n            breakClassName={'break-me'}\n            pageCount={pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            containerClassName={'pagination'}\n            activeClassName={'active'}\n            onPageChange={(currentPage) => handlePageSelect(currentPage.selected)}\n            forcePage={pageCount === 1 ? 0 : selectedPage}\n            {...props}\n        />\n    );\n};\n\nexport default Paginate;\n","import { useState, useEffect } from 'react';\nimport { useTable } from 'react-table';\n\nimport Table from './Table';\nimport TableFilterInput from 'components/TableFilterInput';\nimport Pagination from 'components/Pagination';\nimport { MinusCircle } from 'phosphor-react';\n\nimport debounce from 'lodash.debounce';\n\nconst CustomTable = ({\n    data = [],\n    loading,\n    columns = [],\n    filterPlaceholder,\n    pageCount,\n    capitalize,\n    async = true,\n    theme = 'light',\n    onFilter,\n    onRowSelect,\n    onPaginate,\n    onDeleteRow,\n    multiSelect,\n    selectedRows = [],\n    maxHeight = '500px',\n    filterHeight,\n    showFooter = false,\n}) => {\n    const { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow } = useTable({ columns, data });\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        if (selectedRows && selectedRows.length > 0) {\n            setSelected(selectedRows);\n        } else if (selectedRows === null) {\n            setSelected([]);\n        }\n    }, [selectedRows]);\n\n    const handleClick = (event, row) => {\n        if (event.target.tagName !== 'BUTTON' && event.target.tagName !== 'svg') {\n            const rowIsAlreadySelected = selected.some((r) => r.id === row.id);\n\n            if (multiSelect) {\n                let newSelectedRows = [];\n\n                if (!rowIsAlreadySelected) {\n                    newSelectedRows = [...selected, row];\n                } else {\n                    newSelectedRows = selected.filter((r) => r.id !== row.id);\n                }\n                setSelected(newSelectedRows);\n                onRowSelect(newSelectedRows);\n            } else {\n                if (!rowIsAlreadySelected) {\n                    setSelected([row]);\n                    onRowSelect(row);\n                } else {\n                    setSelected([]);\n                    onRowSelect(null);\n                }\n            }\n        }\n    };\n\n    const onFilterDebounced = debounce((value) => {\n        onFilter(value);\n    }, 500);\n\n    return (\n        <>\n            {onFilter && (\n                <Table.FilterContainer filterHeight={filterHeight}>\n                    <TableFilterInput\n                        onChange={(event) => onFilterDebounced(event.target.value)}\n                        placeholder={filterPlaceholder}\n                        autoFocus\n                    />\n                </Table.FilterContainer>\n            )}\n            <Table.TableContainer maxHeight={maxHeight}>\n                <Table {...getTableProps()}>\n                    <Table.Head>\n                        {headerGroups.map((headerGroup) => (\n                            <Table.TR {...headerGroup.getHeaderGroupProps()}>\n                                {onDeleteRow && <Table.TH></Table.TH>}\n                                {headerGroup.headers.map((column) => (\n                                    <Table.TH {...column.getHeaderProps()}>{column.render('Header')}</Table.TH>\n                                ))}\n                            </Table.TR>\n                        ))}\n                    </Table.Head>\n                    <Table.Body {...getTableBodyProps()}>\n                        {rows.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <Table.TR\n                                    theme={theme}\n                                    active={selected.some((r) => r.id === row.original.id)}\n                                    {...row.getRowProps({\n                                        onClick: onRowSelect\n                                            ? (event) => {\n                                                  handleClick(event, row.original);\n                                              }\n                                            : null,\n                                    })}\n                                >\n                                    {onDeleteRow && (\n                                        <Table.TD>\n                                            <button\n                                                onClick={() => onDeleteRow(row.original)}\n                                                style={{ padding: '5px 10px', background: 'red', cursor: 'pointer', borderRadius: '5px' }}\n                                            >\n                                                <MinusCircle color='white' />\n                                            </button>\n                                        </Table.TD>\n                                    )}\n                                    {row.cells.map((cell, index) => {\n                                        return (\n                                            <Table.TD\n                                                title={cell.value}\n                                                capitalize={capitalize && capitalize.includes(index)}\n                                                {...cell.getCellProps()}\n                                            >\n                                                {cell.render('Cell')}\n                                            </Table.TD>\n                                        );\n                                    })}\n                                </Table.TR>\n                            );\n                        })}\n                    </Table.Body>\n                    {showFooter && (\n                        <Table.Foot>\n                            {footerGroups.map((group) => (\n                                <tr {...group.getFooterGroupProps()}>\n                                    {group.headers.map((column) => (\n                                        <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </Table.Foot>\n                    )}\n                </Table>\n            </Table.TableContainer>\n            {onPaginate && data.length > 0 && (\n                <Table.PaginationContainer>\n                    <Pagination pageCount={pageCount} onPaginate={onPaginate} />\n                </Table.PaginationContainer>\n            )}\n            {loading && <Table.LoadingContainer data={data.length ? 1 : 0}>Cargando...</Table.LoadingContainer>}\n            {async && !data.length && !loading && <Table.NoDataContainer>No hay recursos en la base de datos</Table.NoDataContainer>}\n        </>\n    );\n};\n\nexport default CustomTable;\n","export const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Nombre',\n        accessor: 'name',\n    },\n    {\n        Header: 'Cédula',\n        accessor: 'cedula',\n        Cell: ({ value }) => {\n            return Number(value).toLocaleString();\n        },\n    },\n    {\n        Header: 'Total $',\n        accessor: 'total',\n        Cell: ({ value }) => {\n            return value.toFixed(2);\n        },\n    },\n];\n","import { useMemo } from 'react';\nimport Table from 'components/Table';\nimport { COLUMNS } from './columns';\nimport { ReportTableContainer } from 'components/CommonLayout/main.layout';\n\nconst TopClientsTable = ({ data, loading, maxHeight }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    return (\n        <ReportTableContainer>\n            <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} loading={loading} />\n        </ReportTableContainer>\n    );\n};\n\nexport default TopClientsTable;\n","import styled from 'styled-components';\nimport { colors } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n    background: white;\n    box-shadow: rgb(101 119 134 / 20%) 0px 0px 15px, rgb(101 119 134 / 15%) 0px 0px 3px 1px;\n    border-radius: 16px;\n`;\n\nexport const Header = styled.div`\n    flex: 0 0 50px;\n    flex-direction: row;\n    justify-content: space-between;\n    place-items: center;\n    background: ${colors.superLightGray};\n\n    padding: 0 10px;\n\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-bottom: 1px solid ${colors.lightGray};\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        margin: 0;\n    }\n`;\n\nexport const Body = styled.div`\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n`;\n\nexport const Footer = styled.div``;\n","import { Wrapper, Header, Body, Footer } from './styles';\n\nconst Card = ({ children }) => {\n    return <Wrapper>{children}</Wrapper>;\n};\n\nCard.Header = ({ children }) => {\n    return <Header>{children}</Header>;\n};\n\nCard.Body = ({ children }) => {\n    return <Body>{children}</Body>;\n};\n\nexport default Card;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/clients';\nconst REPORT_BASE_URL = '/api/reports/client';\n\nexport const getClients = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const getTopClients = async () => {\n    const response = await axios.get(`${REPORT_BASE_URL}/top`).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createClient = async (clientData) => {\n    const response = await axios.post(BASE_URL, clientData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updateClient = async (id, clientData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, clientData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteClient = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport {} from './styles';\nimport WidgetBox from 'components/WidgetBox';\nimport TopClientsTable from 'components/ModuleTables/TopClientsTable';\nimport Card from 'components/Card';\nimport DateRangeSelector from 'components/DateRangeSelector';\n\nimport { getTopClients } from 'api/clients';\n\nconst ClientWidgets = ({ show, onClose }) => {\n    const [topClients, setTopClients] = useState([]);\n    const [topSalesRange, setTopSalesRange] = useState('last_week');\n    const [topDebtsRange, setTopDebtsRange] = useState('last_week');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchTopClients = async () => {\n            setLoading(true);\n            const response = await getTopClients();\n            setLoading(false);\n            if (!response.error) {\n                setTopClients(response);\n            }\n        };\n\n        fetchTopClients();\n    }, []);\n\n    return (\n        <WidgetBox onClose={onClose} show={show}>\n            <div style={{ gap: '10px' }}>\n                <Card>\n                    <Card.Header>\n                        <h3>Top 5 mejores clientes</h3>\n                    </Card.Header>\n                    <div style={{ alignItems: 'flex-end' }}>\n                        <select onChange={(event) => setTopSalesRange(event.target.value)} value={topSalesRange}>\n                            <option value='lifetime'>De por vida</option>\n                            <option value='last_month'>Último més</option>\n                            <option value='last_week'>Última semana</option>\n                            <option value='today'>Hoy</option>\n                        </select>\n                    </div>\n                    <Card.Body>\n                        {topClients.sales && <TopClientsTable data={topClients.sales[topSalesRange]} maxHeight='200px' loading={loading} />}\n                    </Card.Body>\n                </Card>\n\n                <Card>\n                    <Card.Header>\n                        <h3>Top 5 clientes deudores</h3>\n                    </Card.Header>\n                    <div style={{ alignItems: 'flex-end' }}>\n                        <select onChange={(event) => setTopDebtsRange(event.target.value)} value={topDebtsRange}>\n                            <option value='lifetime'>De por vida</option>\n                            <option value='last_month'>Último més</option>\n                            <option value='last_week'>Última semana</option>\n                            <option value='today'>Hoy</option>\n                        </select>\n                    </div>\n                    <Card.Body>\n                        {topClients.debts && <TopClientsTable data={topClients.debts[topDebtsRange]} maxHeight='200px' loading={loading} />}\n                    </Card.Body>\n                </Card>\n            </div>\n        </WidgetBox>\n    );\n};\n\nexport default ClientWidgets;\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const usePaginatedResource = ({ page = 1, filter = '', fetching, count, fetchOnMount = true }) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchResource = useCallback(async () => {\n        setLoading(true);\n        const data = await fetching({ page, filter, count });\n        if (data.error) {\n            setError({ path: null, message: data.error.message });\n            setLoading(false);\n            return;\n        }\n        setData(data);\n        setLoading(false);\n    }, [page, filter, fetching, count]);\n\n    useEffect(() => {\n        if (fetchOnMount) fetchResource();\n    }, [page, filter, fetchResource, count, fetchOnMount]);\n\n    return { data, setData, loading, error, fetchResource };\n};\n","import { DateTime } from 'luxon';\n\nexport default function formData(date) {\n    return DateTime.fromISO(date, { setZone: true }).toFormat('F');\n}\n","import NumericInput from 'react-number-format';\nimport formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Nombre',\n        accessor: 'name',\n    },\n    {\n        Header: 'Cédula',\n        accessor: 'cedula',\n        Cell: (props) => {\n            return props.value.toLocaleString('es-VE');\n        },\n    },\n    {\n        Header: 'Teléfono',\n        accessor: 'phoneNumber',\n        Cell: (props) => {\n            if (props.value !== '') {\n                return <NumericInput displayType='text' value={props.value} format='(####) ###-####' />;\n            } else {\n                return 'No registrado';\n            }\n        },\n    },\n    {\n        Header: 'Creado',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n];\n","import { useState, useCallback } from 'react';\nlet timeout;\n\nexport const useNotification = (initialState) => {\n    const [notification, setNotification] = useState(initialState);\n\n    const showNotification = useCallback((type, text, expiration = 2000) => {\n        if (timeout) clearTimeout(timeout);\n        setNotification({ type, text });\n        timeout = setTimeout(() => {\n            setNotification(null);\n        }, expiration);\n    }, []);\n\n    return { notification, showNotification };\n};\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getClients } from 'api/clients';\n\nimport Table from 'components/Table';\n\nimport { COLUMNS } from './columns.js';\n\nconst ClientsTable = ({ onClientSelect, selectedRows, shouldRefresh, showNotification }) => {\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getClients });\n\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <Table\n            selectedRows={selectedRows}\n            onRowSelect={onClientSelect}\n            loading={loading}\n            data={data.records}\n            columns={memoizedColumns}\n            onFilter={setFilter}\n            filterPlaceholder='Buscar por id, nombre, cédula o teléfono'\n            onPaginate={setPage}\n            pageCount={data.pageCount}\n            capitalize={[1, 3]}\n        />\n    );\n};\n\nexport default ClientsTable;\n","import styled from 'styled-components';\n\nimport { colors } from 'styles/theme';\n\nexport const Container = styled.div`\n    flex-direction: row;\n    justify-content: center;\n\n    width: 100%;\n    height: 100%;\n\n    background: none;\n\n    box-shadow: ${colors.shadow} 0px 0px 15px, ${colors.shadow} 0px 0px 3px 1px;\n`;\n\nexport const ButtonContainer = styled.div`\n    height: 100%;\n    margin: 0px 5px;\n\n    > button {\n        color: white;\n    }\n\n    :hover {\n        opacity: 0.8;\n    }\n\n    background: ${(props) => props.color};\n`;\n","import { Container, ButtonContainer } from './styles';\n\nimport { colors } from 'styles/theme';\n\nimport { UserCirclePlus, UserCircleGear, UserCircleMinus } from 'phosphor-react';\n\nimport Button from 'components/Button';\n\nconst Toolbar = ({ children, onCreate, onEdit, onDelete, deleteText, recordSelected }) => {\n    return (\n        <Container>\n            {children}\n            {onCreate && (\n                <ButtonContainer color={colors.primary}>\n                    <Button name='ToolbarCreate' onClick={onCreate}>\n                        <UserCirclePlus size='24px' />\n                        Nuevo\n                    </Button>\n                </ButtonContainer>\n            )}\n            {onEdit && (\n                <ButtonContainer color={colors.secondary}>\n                    <Button name='ToolbarEdit' onClick={onEdit} disabled={!recordSelected}>\n                        <UserCircleGear size='24px' />\n                        Editar\n                    </Button>\n                </ButtonContainer>\n            )}\n            {onDelete && (\n                <ButtonContainer color='red'>\n                    <Button name='ToolbarDelete' onClick={onDelete} disabled={!recordSelected}>\n                        <UserCircleMinus size='24px' />\n                        {deleteText || 'Eliminar'}\n                    </Button>\n                </ButtonContainer>\n            )}\n        </Container>\n    );\n};\n\nexport default Toolbar;\n","import styled from 'styled-components';\n\nexport const StyledModal = styled.div`\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    ${(props) =>\n        props.backdrop &&\n        `\n        background: rgba(0, 0, 0, .6);\n    `}\n\n    z-index: ${(props) => (props.zindex ? props.zindex : '3')};\n`;\n","import ReactDom from 'react-dom';\n\nimport { StyledModal } from './styles';\n\nconst Modal = ({ children, backdrop, show = false, handleClose, zindex }) => {\n    return (\n        show && (\n            <>\n                <StyledModal zindex={zindex} onClick={handleClose} backdrop={backdrop}></StyledModal>\n                {children}\n            </>\n        )\n    );\n};\n\nconst PortalModal = ({ children, backdrop = true, show = false, handleClose, zindex }) => {\n    return ReactDom.createPortal(\n        <Modal backdrop={backdrop} show={show} handleClose={handleClose} zindex={zindex}>\n            {children}\n        </Modal>,\n        document.getElementById('modal-root')\n    );\n};\n\nexport default PortalModal;\n","import styled from 'styled-components';\n\nimport { colors } from 'styles/theme';\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n`;\n\nexport const HeaderContainer = styled.div`\n    min-height: 50px;\n    border-bottom: 1px solid ${colors.shadow};\n`;\n\nexport const CloseButtonContainer = styled.div`\n    flex: 0 1 20px;\n    align-items: flex-end;\n`;\n\nexport const TitleContainer = styled.div`\n    flex: 1;\n    align-items: flex-start;\n    margin-left: 20px;\n    margin-bottom: 10px;\n\n    font-size: 20px;\n    font-weight: 700;\n`;\n\nexport const BodyContainer = styled.div`\n    padding: 10px;\n    gap: 10px;\n    max-height: 550px;\n    overflow-y: ${(props) => (props.overflow ? 'auto' : 'none')};\n\n    h4,\n    h2 {\n        margin: 0 0 5px 0;\n    }\n`;\n\nexport const FooterWrapper = styled.div`\n    border-top: 1px solid ${colors.shadow};\n`;\n\nexport const FooterContainer = styled.div`\n    flex-direction: row;\n    justify-content: flex-end;\n    flex: 0 1 50px;\n\n    padding: 5px 0;\n`;\n\nexport const InlineContainer = styled.div`\n    flex-direction: row;\n    flex: 0 1 auto;\n    gap: 10px;\n\n    div {\n        max-width: 100%;\n    }\n`;\nexport const InputContainer = styled.div`\n    flex: 0 1 100%;\n`;\n\nexport const ButtonContainer = styled.div`\n    background: ${(props) => (props.color ? props.color : 'transparent')};\n    margin: 0 5px;\n\n    > button {\n        color: white;\n    }\n\n    svg {\n        margin: 0;\n    }\n\n    :hover {\n        opacity: 0.8;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    font-weight: 500;\n    color: red;\n    padding-top: 5px;\n    width: 100%;\n`;\n\nexport const ErrorContainer = styled.span`\n    display: flex;\n    flex: 0 0 20px;\n    margin: 0 20px;\n    color: white;\n    font-size: 18px;\n`;\n\nexport const ImageContainer = styled.div`\n    min-width: 48px;\n    max-width: 48px;\n    background-image: url(${(props) => props.url});\n    background-repeat: no-repeat;\n    background-size: contain;\n`;\n\nexport const TableContainer = styled.div`\n    * {\n        font-size: 16px;\n        padding: 0;\n        margin: 0;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    td {\n        max-width: 80px;\n    }\n\n    h4 {\n        margin-top: 10px;\n        text-align: center;\n    }\n`;\n\nexport const LoadingDiv = styled.div`\n    align-items: center;\n    color: green;\n    font-size: 19px;\n    font-weight: 600;\n`;\n","import { useState } from 'react';\n\nexport const useFormError = (initialState) => {\n    const [errors, setErrors] = useState(initialState);\n\n    const handleErrors = (errorObject) => {\n        let errorList = {};\n        if (typeof errorObject[Symbol.iterator] === 'function') {\n            errorObject.forEach((error) => {\n                errorList['' + error.path] = error.message;\n            });\n        } else {\n            errorList[errorObject.path] = errorObject.message;\n        }\n        setErrors({ ...errorList });\n    };\n\n    return { errors, handleErrors, setErrors };\n};\n","const validateSchema = async (data, schema) => {\n    let errors = [];\n\n    try {\n        await schema.validate(data, { abortEarly: false });\n    } catch (error) {\n        error.inner.forEach((err) => {\n            errors.push({\n                path: err.path,\n                message: err.message,\n            });\n        });\n    }\n\n    return errors;\n};\n\nexport default validateSchema;\n","import { useState } from 'react';\nimport { useFormError } from 'hooks/formError';\nimport { ErrorAlert } from 'components/CommonLayout/form.layout';\nimport validateSchema from 'utils/validateSchema';\n\nexport const useForm = ({\n    initialState,\n    action,\n    createResource,\n    editResource,\n    deleteResource,\n    schema,\n    onSubmitSuccess,\n    submitSuccessMessage,\n    onDeleteSuccess,\n}) => {\n    const [loading, setLoading] = useState(false);\n    const [formData, setFormData] = useState(initialState);\n    const { errors, handleErrors, setErrors } = useFormError([]);\n\n    let successMessage = submitSuccessMessage || {\n        create: 'El recurso fue creado con éxito',\n        edit: 'El recurso fue actualizado con éxito',\n    };\n\n    const handleChange = (event) => {\n        let targetName = event.target.name;\n\n        if (event.target.type === 'file') {\n            setFormData({ ...formData, [targetName]: event.target.files[0] });\n        } else {\n            setFormData({ ...formData, [targetName]: event.target.value });\n        }\n    };\n\n    const handleNestedChange = (selector, index, key, value) => {\n        let data = JSON.stringify(formData);\n        data = JSON.parse(data);\n        data[selector][index][key] = value;\n\n        setFormData({ ...data });\n    };\n\n    const handleNumericInput = (value, selector) => {\n        let data = JSON.stringify(formData);\n        data = JSON.parse(data);\n        data[selector] = value;\n        setFormData({ ...data });\n    };\n\n    const printError = (path) => {\n        if (errors[path]) {\n            return <ErrorAlert>{errors[path]}</ErrorAlert>;\n        }\n        return '';\n    };\n\n    const hasError = (path) => {\n        return errors[path];\n    };\n\n    const handleSubmit = async (event, data) => {\n        const actual_data = data ? data : formData;\n        event.preventDefault();\n        const errors = await validateSchema(actual_data, schema);\n        handleErrors(errors);\n\n        if (!errors.length) {\n            let response = {};\n\n            if (!loading) {\n                setLoading(true);\n                delete actual_data.createdAt;\n                try {\n                    if (action === 'create') {\n                        response = await createResource(actual_data);\n                    } else if (action === 'edit') {\n                        response = await editResource(actual_data.id, actual_data);\n                    }\n                } catch (error) {\n                    console.log(error);\n                }\n\n                if (response.error) {\n                    handleErrors(response.error);\n                } else {\n                    onSubmitSuccess && onSubmitSuccess(successMessage[action], actual_data);\n                }\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    };\n\n    const handleDelete = async (id) => {\n        if (deleteResource) {\n            const response = await deleteResource(id);\n\n            if (response.error) {\n                handleErrors(response.error);\n            } else {\n                onDeleteSuccess();\n            }\n        }\n    };\n\n    return {\n        loading,\n        handleNestedChange,\n        handleChange,\n        handleNumericInput,\n        handleSubmit,\n        handleDelete,\n        formData,\n        setFormData,\n        submitErrors: errors,\n        setSubmitErrors: setErrors,\n        printError,\n        hasError,\n        onDeleteSuccess,\n    };\n};\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    name: yup.string().required('El campo nombre es requerido'),\n    cedula: yup.string().min(7, 'Cédula inválida').max(8, 'Cédula inválida').required('El campo cédula es requerido'),\n    phoneNumber: yup.string().test('is-invalid', 'El teléfono debe contener 11 caracteres', async (value) => {\n        return value.length === 0 || value.length === 11;\n    }),\n});\n\nexport default schema;\n","import {\n    Form,\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    InputContainer,\n    ButtonContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    ErrorContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport LabeledInput from 'components/LabeledInput';\nimport Button from 'components/Button';\nimport NumberFormatInput from 'react-number-format';\nimport { colors } from 'styles/theme';\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\nimport { useForm } from 'hooks/useForm';\nimport { createClient, updateClient } from 'api/clients';\nimport clientSchema from 'validations/schemas/client';\n\nconst ClientForm = ({ client, action, handleClose, onSubmit, autoFocus = 'name' }) => {\n    const { handleChange, handleNumericInput, handleSubmit, formData, printError, hasError } = useForm({\n        initialState: {\n            name: '',\n            cedula: '',\n            phoneNumber: '',\n            ...client,\n        },\n        action,\n        createResource: createClient,\n        editResource: updateClient,\n        schema: clientSchema,\n        onSubmitSuccess: onSubmit,\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>{action === 'create' ? 'Crear cliente' : 'Editar cliente'}</TitleContainer>\n            </HeaderContainer>\n            <BodyContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onChange={handleChange}\n                        placeholder='Nombre'\n                        name='name'\n                        value={formData.name}\n                        autoFocus={autoFocus === 'name'}\n                        capitalize\n                        required\n                        errorborder={hasError('name')}\n                    />\n                    {printError('name')}\n                </InputContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onValueChange={(values) => handleNumericInput(values.value, 'cedula')}\n                        placeholder='Cédula'\n                        name='cedula'\n                        value={formData.cedula}\n                        autoFocus={autoFocus === 'cedula'}\n                        thousandSeparator='.'\n                        decimalSeparator=','\n                        decimalScale={0}\n                        as={NumberFormatInput}\n                        required\n                        errorborder={hasError('cedula')}\n                    />\n                    {printError('cedula')}\n                </InputContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onValueChange={(values) => handleNumericInput(values.value, 'phoneNumber')}\n                        placeholder='Teléfono'\n                        name='phoneNumber'\n                        value={formData.phoneNumber}\n                        autoFocus={autoFocus === 'phoneNumber'}\n                        format='( #### ) - ### - ####'\n                        allowEmptyFormatting\n                        mask='_'\n                        type='tel'\n                        as={NumberFormatInput}\n                        errorborder={hasError('phoneNumber')}\n                    />\n                    {printError('phoneNumber')}\n                </InputContainer>\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\nexport default ClientForm;\n","import styled from 'styled-components';\nimport { colors } from 'styles/theme';\n\nexport const Container = styled.div`\n    flex: 1;\n`;\n\nexport const Header = styled.div`\n    flex: 0 1 auto;\n    border-bottom: 1px solid ${colors.shadow};\n`;\n\nexport const Title = styled.span`\n    margin-left: 10px;\n    font-size: 24px;\n    font-weight: 600;\n    padding: 5px 0;\n`;\n\nexport const Body = styled.div`\n    flex: 1 1 auto;\n    padding: 20px 0;\n`;\n\nexport const Description = styled.span`\n    margin-left: 10px;\n    font-size: 19px;\n    font-weight: 400;\n`;\nexport const Footer = styled.div`\n    flex-direction: row;\n    justify-content: flex-end;\n    flex: 0 1 auto;\n    height: 50px;\n    border-top: 1px solid ${colors.shadow};\n    padding: 5px 0;\n`;\n\nexport const ButtonContainer = styled.div`\n    background: ${(props) => props.color};\n    margin-right: 10px;\n\n    > button {\n        color: white;\n    }\n`;\n\nexport const CloseButtonContainer = styled.div`\n    align-items: flex-end;\n    margin: 0;\n    padding: 0;\n`;\n","import { Container, Header, Title, Body, Description, Footer, ButtonContainer, CloseButtonContainer } from './styles';\n\nimport Button from 'components/Button';\n\nimport { colors } from 'styles/theme';\n\nimport { X } from 'phosphor-react';\n\nconst ConfirmAlert = ({ size = 'sm', message, additionalActions = [], handleClose, callback }) => {\n    return (\n        <Container>\n            <Header>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <Title>Confirmación</Title>\n            </Header>\n            <Body>\n                <Description>{message || '¿Está seguro que desea realizar esta acción?'}</Description>\n            </Body>\n            <Footer>\n                {additionalActions.length > 0 &&\n                    additionalActions.map((action, index) => {\n                        return (\n                            <ButtonContainer key={index} color={action.color}>\n                                <Button onClick={action.callback}>{action.name}</Button>\n                            </ButtonContainer>\n                        );\n                    })}\n                <ButtonContainer color={colors.primary}>\n                    <Button onClick={callback} autoFocus>\n                        Aceptar\n                    </Button>\n                </ButtonContainer>\n                <ButtonContainer color='red'>\n                    <Button onClick={handleClose}>Cancelar</Button>\n                </ButtonContainer>\n            </Footer>\n        </Container>\n    );\n};\n\nexport default ConfirmAlert;\n","import { useState, useEffect } from 'react';\n\nimport {\n    Wrapper,\n    SeparatorWrapper,\n    ContentContainer,\n    ToolbarContainer,\n    TableContainer,\n    FormContainer,\n    ConfirmContainer,\n} from 'components/CommonLayout/main.layout';\n\nimport ClientWidgets from 'components/Widgets/ClientWidgets';\nimport ClientsTable from 'components/ModuleTables/ClientsTable';\nimport Toolbar from 'components/Toolbar';\nimport Modal from 'components/Modal';\nimport ClientForm from './CRUDForm';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport { deleteClient } from 'api/clients';\nimport Notification from 'components/Notification';\nimport { useNotification } from 'hooks/notification';\n\nconst Clients = () => {\n    const [selectedClient, setSelectedClient] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const [showWidgets, setShowWidgets] = useState(false);\n    const { notification, showNotification } = useNotification(null);\n\n    useEffect(() => {\n        setShowWidgets(selectedClient ? true : false);\n    }, [selectedClient]);\n\n    useEffect(() => {\n        if (CRUDAction === 'refresh') setSelectedClient(null);\n    }, [CRUDAction]);\n\n    const handleCRUD = (event) => {\n        if (event.currentTarget.name === 'ToolbarCreate') {\n            setCRUDAction('create');\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\n            setCRUDAction('edit');\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\n            setCRUDAction('delete');\n        }\n        setShowWidgets(false);\n    };\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        setCRUDAction('refresh');\n    };\n\n    const handleDelete = async () => {\n        const response = await deleteClient(selectedClient.id);\n        setCRUDAction('refresh');\n        setSelectedClient(null);\n        return response;\n    };\n\n    return (\n        <Wrapper>\n            <SeparatorWrapper>\n                <ContentContainer>\n                    <ToolbarContainer>\n                        <Toolbar recordSelected={selectedClient} onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} />\n                    </ToolbarContainer>\n                    <TableContainer>\n                        <ClientsTable\n                            shouldRefresh={CRUDAction === 'refresh'}\n                            selectedRows={selectedClient}\n                            onClientSelect={setSelectedClient}\n                            showNotification={showNotification}\n                        />\n                    </TableContainer>\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\n                            <FormContainer>\n                                <ClientForm\n                                    onSubmit={handleSubmit}\n                                    action={CRUDAction}\n                                    client={CRUDAction === 'edit' && selectedClient}\n                                    handleClose={() => setCRUDAction(null)}\n                                />\n                            </FormContainer>\n                        )}\n                        {CRUDAction === 'delete' && (\n                            <ConfirmContainer>\n                                <ConfirmAlert\n                                    showNotification={showNotification}\n                                    handleClose={() => setCRUDAction(null)}\n                                    callback={handleDelete}\n                                />\n                            </ConfirmContainer>\n                        )}\n                    </Modal>\n                </ContentContainer>\n                <ClientWidgets\n                    activeRecord={selectedClient}\n                    show={showWidgets}\n                    onClose={() => {\n                        setShowWidgets(false);\n                        setSelectedClient(null);\n                    }}\n                />\n            </SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default Clients;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/users';\n\nexport const getUsers = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createUser = async (userData) => {\n    const response = await axios.post(BASE_URL, userData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updateUser = async (id, userData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, userData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteUser = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Nombre de usuario',\n        accessor: 'username',\n    },\n    {\n        Header: 'Nivel de permiso',\n        accessor: 'permissions',\n    },\n    {\n        Header: 'Creado',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n];\n","import { useState, useMemo, useEffect } from 'react';\n\nimport Table from 'components/Table';\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getUsers } from 'api/users';\n\nimport { COLUMNS } from './columns';\n\nconst UsersTable = ({ onUserSelect, selectedRows, shouldRefresh, showNotification }) => {\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getUsers });\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <Table\n            selectedRows={selectedRows}\n            onRowSelect={onUserSelect}\n            loading={loading}\n            data={data.records}\n            columns={memoizedColumns}\n            onFilter={setFilter}\n            filterPlaceholder='Buscar...'\n            onPaginate={setPage}\n            pageCount={data.pageCount}\n        />\n    );\n};\n\nexport default UsersTable;\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    username: yup.string().required('El campo nombre de usuario es requerido'),\n    password: yup.string().nullable(true),\n    permissions: yup\n        .number()\n        .required('El campo Nivel de permiso es requerido')\n        .min(0, 'El nivel de permiso debe tener un valor entre 0 y 2')\n        .max(2, 'El nivel de permiso debe tener un valor entre 0 y 2'),\n});\n\nexport default schema;\n","import {\n    Form,\n    HeaderContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    ButtonContainer,\n    ErrorContainer,\n    InputContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport Button from 'components/Button';\nimport LabeledInput from 'components/LabeledInput';\nimport NumericFormatInput from 'react-number-format';\nimport { X } from 'phosphor-react';\nimport { colors } from 'styles/theme';\nimport { useForm } from 'hooks/useForm';\nimport { createUser, updateUser } from 'api/users';\nimport userSchema from 'validations/schemas/user';\n\nconst UserForm = ({ user, action, handleClose, onSubmit }) => {\n    const { handleChange, handleNumericInput, handleSubmit, formData, printError, hasError } = useForm({\n        initialState: {\n            username: '',\n            permissions: '',\n            ...user,\n            password: '',\n        },\n        action,\n        createResource: createUser,\n        editResource: updateUser,\n        schema: userSchema,\n        onSubmitSuccess: onSubmit,\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button>\n                        <X onClick={handleClose} />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>\n                    {action === 'create' && 'Crear usuario'}\n                    {action === 'edit' && 'Editar usuario'}\n                </TitleContainer>\n            </HeaderContainer>\n            <BodyContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onChange={handleChange}\n                        value={formData.username}\n                        name='username'\n                        placeholder='Nombre de usuario'\n                        autoFocus\n                        errorborder={hasError('username')}\n                        required\n                    />\n                    {printError('username')}\n                </InputContainer>\n                {action !== 'edit' && (\n                    <InputContainer>\n                        <LabeledInput\n                            onChange={handleChange}\n                            value={formData.password}\n                            name='password'\n                            placeholder='Contraseña'\n                            type='password'\n                            errorborder={hasError('password')}\n                            required\n                        />\n                        {printError('password')}\n                    </InputContainer>\n                )}\n                <InputContainer>\n                    <LabeledInput\n                        onValueChange={(value) => handleNumericInput(value.floatValue, 'permissions')}\n                        value={formData.permissions}\n                        placeholder='Nivel de permiso'\n                        isAllowed={(inputObj) => {\n                            if (inputObj.value < 3) return inputObj;\n                        }}\n                        allowDecimalSeparators={false}\n                        format='#'\n                        errorborder={hasError('permissions')}\n                        as={NumericFormatInput}\n                        required\n                    />\n                    <small>0: Empleado 1: Administrador 2: Master</small>\n                    {printError('permissions')}\n                </InputContainer>\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button type='submit'>Enviar</Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button>Cancelar</Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\n\nexport default UserForm;\n","import { useState, useEffect } from 'react';\nimport {\n    Wrapper,\n    SeparatorWrapper,\n    ContentContainer,\n    ToolbarContainer,\n    TableContainer,\n    FormContainer,\n    ConfirmContainer,\n} from 'components/CommonLayout/main.layout';\n\nimport Modal from 'components/Modal';\nimport Toolbar from 'components/Toolbar';\nimport UsersTable from 'components/ModuleTables/UsersTable';\nimport { useNotification } from 'hooks/notification';\nimport Notification from 'components/Notification';\nimport UserForm from './CRUDForm';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport { deleteUser } from 'api/users';\n\nconst Users = () => {\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const { notification, showNotification } = useNotification(null);\n\n    useEffect(() => {\n        if (CRUDAction === 'refresh') setSelectedUser(null);\n    }, [CRUDAction]);\n\n    const handleCRUD = (event) => {\n        if (event.currentTarget.name === 'ToolbarCreate') {\n            setCRUDAction('create');\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\n            setCRUDAction('edit');\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\n            setCRUDAction('delete');\n        }\n    };\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        setCRUDAction('refresh');\n    };\n\n    const handleDelete = async () => {\n        const response = await deleteUser(selectedUser.id);\n        setCRUDAction('refresh');\n        setSelectedUser(null);\n        return response;\n    };\n\n    return (\n        <Wrapper>\n            <SeparatorWrapper>\n                <ContentContainer>\n                    <ToolbarContainer>\n                        <Toolbar onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} recordSelected={selectedUser} />\n                    </ToolbarContainer>\n                    <TableContainer>\n                        <UsersTable\n                            onUserSelect={setSelectedUser}\n                            selectedRows={selectedUser }\n                            showNotification={showNotification}\n                            shouldRefresh={CRUDAction === 'refresh'}\n                        />\n                    </TableContainer>\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\n                            <FormContainer>\n                                <UserForm\n                                    onSubmit={handleSubmit}\n                                    action={CRUDAction}\n                                    user={CRUDAction === 'edit' && selectedUser}\n                                    handleClose={() => setCRUDAction(null)}\n                                />\n                            </FormContainer>\n                        )}\n                        {CRUDAction === 'delete' && (\n                            <ConfirmContainer>\n                                <ConfirmAlert\n                                    showNotification={showNotification}\n                                    handleClose={() => setCRUDAction(null)}\n                                    callback={handleDelete}\n                                />\n                            </ConfirmContainer>\n                        )}\n                    </Modal>\n                </ContentContainer>\n            </SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default Users;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/suppliers';\n\nexport const getSuppliers = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createSupplier = async (supplierData) => {\n    const response = await axios.post(BASE_URL, supplierData).catch((error) => error.response);\n    console.log(response);\n    return response.data;\n};\n\nexport const updateSupplier = async (id, supplierData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, supplierData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteSupplier = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import NumericInput from 'react-number-format';\nimport formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Nombre',\n        accessor: 'name',\n    },\n    {\n        Header: 'RIF',\n        accessor: 'rif',\n    },\n    {\n        Header: 'Teléfono',\n        accessor: 'phoneNumber',\n        Cell: (props) => {\n            if (props.value !== '') {\n                return <NumericInput displayType='text' value={props.value} format='(####) ###-####' />;\n            } else {\n                return 'No registrado';\n            }\n        },\n    },\n    {\n        Header: 'Dirección',\n        accessor: 'address',\n    },\n    {\n        Header: 'Creado',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n];\n","import { useState, useMemo, useEffect } from 'react';\n\nimport Table from 'components/Table';\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getSuppliers } from 'api/suppliers';\n\nimport { COLUMNS } from './columns';\n\nconst SuppliersTable = ({ onSupplierSelect, selectedRows, shouldRefresh, showNotification }) => {\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getSuppliers });\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <>\n            <Table\n                selectedRows={selectedRows}\n                onRowSelect={onSupplierSelect}\n                loading={loading}\n                data={data.records}\n                columns={memoizedColumns}\n                onFilter={setFilter}\n                filterPlaceholder='Buscar...'\n                onPaginate={setPage}\n                pageCount={data.pageCount}\n                capitalize={[1, 3]}\n            />\n        </>\n    );\n};\n\nexport default SuppliersTable;\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    name: yup.string().required('El campo nombre es requerido'),\n    rif: yup.string().required('El campo RIF es requerido'),\n    address: yup.string().required('El campo dirección es requerido'),\n    phoneNumber: yup.string().test('is-invalid', 'El teléfono debe contener 11 caracteres', async (value) => {\n        return value.length === 0 || value.length === 11;\n    }),\n});\n\nexport default schema;\n","import {\n    Form,\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    InputContainer,\n    ButtonContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    ErrorContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport LabeledInput from 'components/LabeledInput';\nimport Button from 'components/Button';\nimport NumberFormatInput from 'react-number-format';\nimport { colors } from 'styles/theme';\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\nimport { useForm } from 'hooks/useForm';\nimport { createSupplier, updateSupplier } from 'api/suppliers';\nimport supplierSchema from 'validations/schemas/supplier';\n\nconst SupplierForm = ({ supplier, action, handleClose, onSubmit }) => {\n    const { handleChange, loading, handleNumericInput, handleSubmit, formData, printError, hasError } = useForm({\n        initialState: {\n            name: '',\n            rif: '',\n            address: '',\n            phoneNumber: '',\n            ...supplier,\n        },\n        action,\n        createResource: createSupplier,\n        editResource: updateSupplier,\n        schema: supplierSchema,\n        onSubmitSuccess: onSubmit,\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>{action === 'create' ? 'Crear proveedor' : 'Editar proveedor'}</TitleContainer>\n            </HeaderContainer>\n            <BodyContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onChange={handleChange}\n                        placeholder='Nombre'\n                        name='name'\n                        value={formData.name}\n                        autoFocus\n                        capitalize\n                        required\n                        errorborder={hasError('name')}\n                    />\n                    {printError('name')}\n                </InputContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onChange={handleChange}\n                        placeholder='RIF'\n                        name='rif'\n                        value={formData.rif}\n                        thousandSeparator='.'\n                        decimalSeparator=','\n                        decimalScale={0}\n                        errorborder={hasError('rif')}\n                        capitalize\n                        required\n                    />\n                    {printError('rif')}\n                </InputContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onChange={handleChange}\n                        placeholder='Dirección'\n                        name='address'\n                        value={formData.address}\n                        errorborder={hasError('address')}\n                        required\n                    />\n                    {printError('address')}\n                </InputContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onValueChange={(values) => handleNumericInput(values.value, 'phoneNumber')}\n                        placeholder='Teléfono'\n                        name='phoneNumber'\n                        value={formData.phoneNumber}\n                        format='( #### ) - ### - ####'\n                        allowEmptyFormatting\n                        mask='_'\n                        type='tel'\n                        as={NumberFormatInput}\n                        errorborder={hasError('phoneNumber')}\n                        required\n                    />\n                    {printError('phoneNumber')}\n                </InputContainer>\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button loading={loading} type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\nexport default SupplierForm;\n","import { useState, useEffect } from 'react';\nimport {\n    Wrapper,\n    SeparatorWrapper,\n    ContentContainer,\n    ToolbarContainer,\n    TableContainer,\n    FormContainer,\n    ConfirmContainer,\n} from 'components/CommonLayout/main.layout';\n\nimport Modal from 'components/Modal';\nimport Toolbar from 'components/Toolbar';\nimport SuppliersTable from 'components/ModuleTables/SuppliersTable';\nimport { useNotification } from 'hooks/notification';\nimport Notification from 'components/Notification';\nimport SupplierForm from './CRUDForm';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport { deleteSupplier } from 'api/suppliers';\n\nconst Suppliers = () => {\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const { notification, showNotification } = useNotification(null);\n\n    useEffect(() => {\n        if (CRUDAction === 'refresh') setSelectedSupplier(null);\n    }, [CRUDAction]);\n\n    const handleCRUD = (event) => {\n        if (event.currentTarget.name === 'ToolbarCreate') {\n            setCRUDAction('create');\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\n            setCRUDAction('edit');\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\n            setCRUDAction('delete');\n        }\n    };\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        setCRUDAction('refresh');\n    };\n\n    const handleDelete = async () => {\n        const response = await deleteSupplier(selectedSupplier.id);\n        setCRUDAction('refresh');\n        setSelectedSupplier(null);\n        return response;\n    };\n\n    return (\n        <Wrapper>\n            <SeparatorWrapper>\n                <ContentContainer>\n                    <ToolbarContainer>\n                        <Toolbar onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} recordSelected={selectedSupplier} />\n                    </ToolbarContainer>\n                    <TableContainer>\n                        <SuppliersTable\n                            onSupplierSelect={setSelectedSupplier}\n                            selectedRows={selectedSupplier}\n                            showNotification={showNotification}\n                            shouldRefresh={CRUDAction === 'refresh'}\n                        />\n                    </TableContainer>\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\n                            <FormContainer>\n                                <SupplierForm\n                                    onSubmit={handleSubmit}\n                                    action={CRUDAction}\n                                    supplier={CRUDAction === 'edit' && selectedSupplier}\n                                    handleClose={() => setCRUDAction(null)}\n                                />\n                            </FormContainer>\n                        )}\n                        {CRUDAction === 'delete' && (\n                            <ConfirmContainer>\n                                <ConfirmAlert\n                                    showNotification={showNotification}\n                                    handleClose={() => setCRUDAction(null)}\n                                    callback={handleDelete}\n                                />\n                            </ConfirmContainer>\n                        )}\n                    </Modal>\n                </ContentContainer>\n            </SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default Suppliers;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/categories';\n\nexport const getCategories = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createCategory = async (categoryData) => {\n    const response = await axios.post(BASE_URL, categoryData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updateCategory = async (id, categoryData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, categoryData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteCategory = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Nombre',\n        accessor: 'name',\n    },\n    {\n        Header: 'Creado',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n];\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getCategories } from 'api/categories';\n\nimport Table from 'components/Table';\n\nimport { COLUMNS } from './columns.js';\n\nconst CategoriesTable = ({ onCategorySelect, selectedRows, shouldRefresh, showNotification }) => {\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getCategories });\n\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <Table\n            selectedRows={selectedRows}\n            onRowSelect={onCategorySelect}\n            loading={loading}\n            data={data.records}\n            columns={memoizedColumns}\n            onFilter={setFilter}\n            filterPlaceholder='Buscar por id o nombre'\n            onPaginate={setPage}\n            pageCount={data.pageCount}\n            capitalize={[1]}\n        />\n    );\n};\n\nexport default CategoriesTable;\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    name: yup.string().required('El campo nombre es requerido'),\n});\n\nexport default schema;\n","import {\n    Form,\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    InputContainer,\n    ButtonContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    ErrorContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport LabeledInput from 'components/LabeledInput';\nimport Button from 'components/Button';\nimport { colors } from 'styles/theme';\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\nimport { useForm } from 'hooks/useForm';\nimport { createCategory, updateCategory } from 'api/categories';\nimport categorySchema from 'validations/schemas/category';\n\nconst CategoryForm = ({ category, action, handleClose, onSubmit }) => {\n    const { handleChange, handleSubmit, formData, printError, hasError } = useForm({\n        initialState: {\n            name: '',\n            ...category,\n        },\n        action,\n        createResource: createCategory,\n        editResource: updateCategory,\n        schema: categorySchema,\n        onSubmitSuccess: onSubmit,\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>{action === 'create' ? 'Crear categoría' : 'Editar categoría'}</TitleContainer>\n            </HeaderContainer>\n            <BodyContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onChange={handleChange}\n                        placeholder='Nombre'\n                        name='name'\n                        value={formData.name}\n                        autoFocus\n                        capitalize\n                        required\n                        errorborder={hasError('name')}\n                    />\n                    {printError('name')}\n                </InputContainer>\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\nexport default CategoryForm;\n","import { useState } from 'react';\n\nimport {\n    Wrapper,\n    SeparatorWrapper,\n    ContentContainer,\n    ToolbarContainer,\n    TableContainer,\n    FormContainer,\n    ConfirmContainer,\n} from 'components/CommonLayout/main.layout';\n\nimport CategoriesTable from 'components/ModuleTables/CategoriesTable';\nimport Toolbar from 'components/Toolbar';\nimport Modal from 'components/Modal';\nimport CategoryForm from './CRUDForm';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport { useEffect } from 'react';\nimport { deleteCategory } from 'api/categories';\nimport Notification from 'components/Notification';\nimport { useNotification } from 'hooks/notification';\n\nconst Categories = () => {\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const { notification, showNotification } = useNotification(null);\n\n    useEffect(() => {\n        if (CRUDAction === 'refresh') setSelectedCategory(null);\n    }, [CRUDAction]);\n\n    const handleCRUD = (event) => {\n        if (event.currentTarget.name === 'ToolbarCreate') {\n            setCRUDAction('create');\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\n            setCRUDAction('edit');\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\n            setCRUDAction('delete');\n        }\n    };\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        setCRUDAction('refresh');\n    };\n\n    const handleDelete = async () => {\n        const response = await deleteCategory(selectedCategory.id);\n        setCRUDAction('refresh');\n        setSelectedCategory(null);\n        return response;\n    };\n\n    return (\n        <Wrapper>\n            <SeparatorWrapper>\n                <ContentContainer>\n                    <ToolbarContainer>\n                        <Toolbar\n                            recordSelected={selectedCategory ? true : false}\n                            onCreate={handleCRUD}\n                            onEdit={handleCRUD}\n                            onDelete={handleCRUD}\n                        />\n                    </ToolbarContainer>\n                    <TableContainer>\n                        <CategoriesTable\n                            shouldRefresh={CRUDAction === 'refresh'}\n                            selectedRows={selectedCategory}\n                            onCategorySelect={setSelectedCategory}\n                            showNotification={showNotification}\n                        />\n                    </TableContainer>\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\n                            <FormContainer>\n                                <CategoryForm\n                                    onSubmit={handleSubmit}\n                                    action={CRUDAction}\n                                    category={CRUDAction === 'edit' && selectedCategory}\n                                    handleClose={() => setCRUDAction(null)}\n                                />\n                            </FormContainer>\n                        )}\n                        {CRUDAction === 'delete' && (\n                            <ConfirmContainer>\n                                <ConfirmAlert\n                                    showNotification={showNotification}\n                                    handleClose={() => setCRUDAction(null)}\n                                    callback={handleDelete}\n                                />\n                            </ConfirmContainer>\n                        )}\n                    </Modal>\n                </ContentContainer>\n            </SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default Categories;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/product_variants';\n\nexport const getProductVariants = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n\n    return response.data;\n};\n\nexport const getProductVariantById = async (id) => {\n    const response = await axios.get(`${BASE_URL}/${id}`).catch((error) => error.response);\n    return response.data;\n};\n\nexport const getRecentSupplyings = async ({ page, filter, count, product_variant_id }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n    let countParam = count ? `&count=${count}` : '';\n    const response = await axios\n        .get(`${BASE_URL}/${product_variant_id}/supplyings${pageParam}${countParam}${filterParams}`)\n        .catch((error) => error.response);\n\n    return response.data;\n};\n\nexport const createProductVariant = async (productData) => {\n    const response = await axios.post(BASE_URL, productData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updateProductVariant = async (id, productData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, productData).catch((error) => error.response);\n\n    return response.data;\n};\n\nexport const deleteProductVariantApi = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n\n    return response.data;\n};\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Nombre',\n        accessor: 'name',\n    },\n    {\n        Header: 'Precio $',\n        accessor: 'price',\n        id: 'price',\n    },\n    {\n        Header: 'Precio VES',\n        accessor: 'converted_price.PRICE_VES',\n        id: 'converted_price.PRICE_VES',\n        Cell: (props) => {\n            return props.value ? props.value.toLocaleString('es-VE') : '0';\n        },\n    },\n    {\n        Header: '% Ganancia',\n        accessor: 'profitPercent',\n    },\n    {\n        Header: 'Valor Unidad',\n        accessor: 'unitValue',\n    },\n    {\n        Header: 'Stock',\n        accessor: 'stock',\n    },\n    /*\n    {\n        Header: 'Creado',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n    */\n];\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getProductVariants } from 'api/product_variants';\n\nimport Table from 'components/Table';\n\nimport { COLUMNS } from './columns.js';\n\nconst ProductsTable = ({ onProductSelect, selectedRows, shouldRefresh, showNotification }) => {\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getProductVariants });\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <Table\n            selectedRows={selectedRows}\n            onRowSelect={onProductSelect}\n            loading={loading}\n            data={data.records}\n            columns={memoizedColumns}\n            onFilter={setFilter}\n            filterPlaceholder='Buscar por id, nombre, precio'\n            onPaginate={setPage}\n            pageCount={data.pageCount}\n            capitalize={[1, 3]}\n        />\n    );\n};\n\nexport default ProductsTable;\n","import styled from 'styled-components';\n\nexport const GeneralInfoContainer = styled.div`\n    flex-direction: row;\n    gap: 10px;\n    margin-bottom: 15px;\n`;\n\nexport const VariantsContainer = styled.div`\n    flex: 1;\n    gap: 10px;\n`;\n\nexport const InputsWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 3fr 3fr 0.5fr;\n    grid-auto-columns: auto;\n    gap: 10px;\n`;\n\nexport const InputsContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 1fr 1fr;\n    gap: 8px;\n\n    div {\n        margin: 0;\n    }\n`;\n\nexport const FileInputContainer = styled.div`\n    label {\n        height: 100%;\n        > label {\n            overflow: hidden;\n            white-space: pre-wrap;\n            text-overflow: ellipsis;\n        }\n    }\n    input {\n        display: none;\n    }\n`;\nexport const InputContainer = styled.div`\n    flex: 1;\n`;\n\nexport const VariantButtonContainer = styled.div`\n    align-items: center;\n    justify-content: flex-end;\n    gap: 10px;\n\n    button {\n        background: ${(props) => (props.color ? props.color : 'transparent')};\n        flex: 0 1 40px;\n        border-radius: 4px;\n        color: white;\n\n        svg {\n            margin: 0;\n        }\n    }\n`;\n\nexport const ProductImageContainer = styled.div`\n    flex: 0 1 100%;\n    background-image: url(${(props) => props.url});\n    background-repeat: no-repeat;\n    background-position-x: center;\n    background-position-y: center;\n    background-size: 48px;\n`;\n\nexport const VariantNameContainer = styled.div`\n    grid-column: 1/3;\n`;\n\nexport const PriceContainer = styled.div`\n    grid-row: 2;\n    grid-column: 1/1;\n    input {\n        text-align: right;\n    }\n`;\n\nexport const UnitValueContainer = styled.div`\n    grid-row: 2;\n    grid-column: 2/2;\n    input {\n        text-align: right;\n    }\n`;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/products';\n\nexport const getProducts = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const getProductById = async (id) => {\n    const response = await axios.get(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createProduct = async (productData) => {\n    let formData = new FormData();\n    let variantsWithImage = [];\n\n    productData.product_variant.forEach((variant, index) => {\n        if (variant.imagePath != null && typeof variant.imagePath === 'object') {\n            formData.append('images', variant.imagePath);\n            variantsWithImage.push(index);\n        } else {\n            variantsWithImage.push(-1);\n        }\n    });\n\n    formData.append('variantsWithImage', JSON.stringify(variantsWithImage));\n    formData.append('name', productData.name);\n    formData.append('brand', productData.brand);\n    formData.append('product_variant', JSON.stringify(productData.product_variant));\n\n    const response = await axios({\n        method: 'post',\n        url: BASE_URL,\n        data: formData,\n        headers: { 'Content-Type': 'multipart/form-data' },\n    }).catch((error) => error.response);\n    console.log(response);\n    return response.data;\n};\n\nexport const updateProduct = async (id, productData) => {\n    let formData = new FormData();\n    let variantsWithImage = [];\n    console.log('from updateProduct API', productData);\n\n    productData.product_variant.forEach((variant, index) => {\n        if (variant.imagePath != null && typeof variant.imagePath === 'object') {\n            formData.append('images', variant.imagePath);\n            variantsWithImage.push(index);\n        } else if (typeof variant.imagePath === 'string') {\n            variantsWithImage.push(variant.imagePath);\n        } else {\n            variantsWithImage.push(-1);\n        }\n    });\n\n    formData.append('variantsWithImage', JSON.stringify(variantsWithImage));\n    formData.append('name', productData.name);\n    formData.append('brand', productData.brand);\n    formData.append('product_variant', JSON.stringify(productData.product_variant));\n\n    if (productData.reasons && productData.reasons.trim().length > 0) {\n        formData.append('reasons', productData.reasons.trim());\n    }\n\n    const response = await axios({\n        method: 'patch',\n        url: BASE_URL + `/${id}`,\n        data: formData,\n        headers: { 'Content-Type': 'multipart/form-data' },\n    }).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteProduct = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    name: yup.string().required('El campo nombre es requerido'),\n    brand: yup.string(),\n    product_variant: yup.array().of(\n        yup.object().shape({\n            name: yup.string().required('El nombre de la variante es requerido'),\n            price: yup.number().required('El precio de la variante es requerido').typeError('El precio de la variante debe ser un número'),\n            profitPercent: yup\n                .number()\n                .required('El % de ganancia de la variante es requerido')\n                .typeError('El % de ganancia de la variante debe ser un número'),\n            unitValue: yup\n                .number()\n                .required('El valor unidad de la variante es requerido')\n                .typeError('El valor unidad de la variante debe ser un número'),\n            imagePath: yup.object().nullable(true),\n        })\n    ),\n});\n\nexport default schema;\n","import NumberFormatInput from 'react-number-format';\n\nimport { MinusCircle, PlusCircle } from 'phosphor-react';\n\nimport LabeledInput from 'components/LabeledInput';\n\nimport { InputContainer } from 'components/CommonLayout/form.layout';\n\nimport Button from 'components/Button';\nimport {\n    InputsWrapper,\n    InputsContainer,\n    FileInputContainer,\n    VariantButtonContainer,\n    ProductImageContainer,\n    VariantNameContainer,\n    PriceContainer,\n    UnitValueContainer,\n} from './layout.styles';\n\nconst VariantForm = ({ CRUDAction, formData, setFormData, product_variant, index, handleNestedChange, printError, hasError }) => {\n    const addProductVariant = () => {\n        let productVariantList = [\n            ...formData['product_variant'],\n            {\n                name: '',\n                price: 0,\n                profitPercent: 30,\n                unitValue: '',\n                imagePath: null,\n            },\n        ];\n\n        setFormData({\n            ...formData,\n            product_variant: productVariantList,\n        });\n    };\n\n    const deleteProductVariant = async (index) => {\n        let productVariantList = formData['product_variant'].filter((variant, i) => i !== index);\n\n        if (productVariantList.length !== 0) {\n            setFormData({\n                ...formData,\n                product_variant: productVariantList,\n            });\n        }\n    };\n\n    return (\n        <InputsWrapper>\n            <InputsContainer>\n                <VariantNameContainer>\n                    <LabeledInput\n                        onChange={(event) => handleNestedChange('product_variant', index, 'name', event.target.value)}\n                        placeholder='* Nombre'\n                        value={product_variant.name}\n                        allowDecimalSeparators\n                        capitalize\n                        errorborder={hasError(`product_variant[${index}].name`)}\n                        errormessage={printError(`product_variant[${index}].name`)}\n                        active\n                    />\n                    {printError(`product_variant[${index}].name`)}\n                </VariantNameContainer>\n                <PriceContainer>\n                    <LabeledInput\n                        onValueChange={(values) => handleNestedChange('product_variant', index, 'price', values.floatValue)}\n                        placeholder='* Precio $'\n                        value={product_variant.price}\n                        defaultValue={product_variant.price}\n                        allowDecimalSeparators\n                        as={NumberFormatInput}\n                        errorborder={hasError(`product_variant[${index}].price`)}\n                        active\n                    />\n                    {printError(`product_variant[${index}].price`)}\n                </PriceContainer>\n                <InputContainer>\n                    {/*\n                    <LabeledInput\n                    placeholder='% Ganancia'\n                    //onValueChange={(values) => handleNestedChange('product_variant', index, 'profitPercent', values.floatValue)}\n                    value={product_variant.profitPercent}\n                    allowDecimalSeparators\n                    as={NumberFormatInput}\n                    errorborder={hasError(`product_variant[${index}].profitPercent`)}\n                    active\n                    disabled\n                    title='No se puede editar'\n                    />\n                    {printError(`product_variant[${index}].profitPercent`)}\n\n                    */}\n                </InputContainer>\n                <UnitValueContainer>\n                    <LabeledInput\n                        placeholder='* Valor Unidad'\n                        onValueChange={(values) => handleNestedChange('product_variant', index, 'unitValue', values.floatValue)}\n                        value={product_variant.unitValue}\n                        allowDecimalSeparators\n                        as={NumberFormatInput}\n                        errorborder={hasError(`product_variant[${index}].unitValue`)}\n                        active\n                    />\n                    {printError(`product_variant[${index}].unitValue`)}\n                </UnitValueContainer>\n            </InputsContainer>\n            <FileInputContainer>\n                <LabeledInput\n                    file\n                    type='file'\n                    onChange={(event) => handleNestedChange('product_variant', index, 'imagePath', event.target.files[0])}\n                    placeholder={product_variant.imagePath ? product_variant.imagePath.name : 'Seleccione Imagen'}\n                >\n                    {product_variant.imagePath && CRUDAction === 'edit' && <ProductImageContainer url={product_variant.imagePath} />}\n                    {product_variant.imagePath && CRUDAction === 'create' && (\n                        <ProductImageContainer url={product_variant.imagePath && URL.createObjectURL(product_variant.imagePath)} />\n                    )}\n                </LabeledInput>\n            </FileInputContainer>\n            {printError(`product_variant[${index}].imagePath`)}\n            {index !== formData.product_variant.length - 1 && (\n                <VariantButtonContainer color='red'>\n                    <Button onClick={() => deleteProductVariant(index)}>\n                        <MinusCircle size={24} />\n                    </Button>\n                </VariantButtonContainer>\n            )}\n            {index === formData.product_variant.length - 1 && (\n                <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '5px' }}>\n                    <VariantButtonContainer color='red'>\n                        <Button onClick={() => deleteProductVariant(index)}>\n                            <MinusCircle size={24} />\n                        </Button>\n                    </VariantButtonContainer>\n                    <VariantButtonContainer color='green'>\n                        <Button onClick={addProductVariant}>\n                            <PlusCircle size={24} />\n                        </Button>\n                    </VariantButtonContainer>\n                </div>\n            )}\n        </InputsWrapper>\n    );\n};\nexport default VariantForm;\n","import {\n    Form,\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    ButtonContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    ErrorContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport { GeneralInfoContainer, VariantsContainer, InputContainer } from './layout.styles';\n\nimport LabeledInput from 'components/LabeledInput';\nimport Button from 'components/Button';\nimport { colors } from 'styles/theme';\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\nimport { useForm } from 'hooks/useForm';\nimport { createProduct, updateProduct } from 'api/products';\nimport productSchema from 'validations/schemas/product';\nimport VariantForm from './variantForm';\n\nconst ProductForm = ({ product, action, handleClose, onSubmit }) => {\n    const { handleChange, handleNestedChange, handleSubmit, formData, setFormData, submitErrors, printError, hasError } = useForm({\n        initialState: {\n            name: '',\n            brand: '',\n            product_variant: [\n                {\n                    name: '',\n                    price: 0,\n                    profitPercent: 30,\n                    unitValue: 1,\n                    imagePath: null,\n                },\n            ],\n            ...product,\n        },\n        action,\n        createResource: createProduct,\n        editResource: updateProduct,\n        schema: productSchema,\n        onSubmitSuccess: onSubmit,\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>{action === 'create' ? 'Crear producto' : 'Editar producto'}</TitleContainer>\n            </HeaderContainer>\n            <BodyContainer overflow={1}>\n                <h4>Información General</h4>\n                <GeneralInfoContainer>\n                    <InputContainer>\n                        <LabeledInput\n                            placeholder='* Tipo'\n                            onChange={handleChange}\n                            name='name'\n                            value={formData.name}\n                            autoFocus\n                            capitalize\n                            errorborder={hasError('name')}\n                        />\n                        {printError('name')}\n                    </InputContainer>\n                    <InputContainer>\n                        <LabeledInput\n                            placeholder='Marca'\n                            onChange={handleChange}\n                            name='brand'\n                            value={formData.brand}\n                            capitalize\n                            errorborder={hasError('brand')}\n                        />\n                        {printError('brand')}\n                    </InputContainer>\n                </GeneralInfoContainer>\n                <h4>Variantes</h4>\n                <VariantsContainer>\n                    {formData.product_variant.length > 0 &&\n                        formData.product_variant.map((variant, index) => {\n                            return (\n                                <VariantForm\n                                    key={index}\n                                    CRUDAction={action}\n                                    formData={formData}\n                                    setFormData={setFormData}\n                                    product_variant={variant}\n                                    index={index}\n                                    handleNestedChange={handleNestedChange}\n                                    submitErrors={submitErrors}\n                                    printError={printError}\n                                    hasError={hasError}\n                                />\n                            );\n                        })}\n                </VariantsContainer>\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\nexport default ProductForm;\n","import styled from 'styled-components';\n\nexport const Variants = styled.div`\n    font-size: 19px;\n`;\n\nexport const Header = styled.header`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    text-align: center;\n\n    strong:first-child {\n        grid-column: 1/3;\n    }\n\n    > * {\n        border: 1px solid grey;\n        padding: 5px 0;\n    }\n`;\nexport const VariantContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n\n    text-align: center;\n    label:first-child {\n        grid-column: 1/3;\n    }\n\n    > * {\n        border: 1px solid grey;\n        padding: 5px 0;\n    }\n    input {\n        text-align: center;\n        font-size: 14px;\n    }\n`;\nexport const Label = styled.label`\n    text-transform: capitalize;\n`;\n\nexport const StockInfo = styled.div`\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nexport const FreeStock = styled.label`\n    padding: 5px 0;\n    span {\n        color: green;\n    }\n`;\n\nexport const TotalStock = styled.label`\n    padding: 5px 0;\n`;\n","import styled from 'styled-components';\nimport Button from 'components/Button';\nimport NumericInput from 'react-number-format';\n\nimport { colors } from 'styles/theme';\n\nexport const Wrapper = styled.div`\n    flex-direction: row;\n    justify-content: center;\n`;\nexport const MinusButton = styled(Button)`\n    max-width: 50px;\n    min-width: 0;\n    background: red;\n`;\nexport const PlusButton = styled(Button)`\n    max-width: 50px;\n    min-width: 0;\n    background: ${colors.primary};\n`;\nexport const Input = styled(NumericInput)`\n    max-width: 50px;\n    min-width: 0;\n`;\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback, delay = null) => {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            tick();\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n\nexport default useInterval;\n","import { useState } from 'react';\nimport { Wrapper, MinusButton, PlusButton, Input } from './styles';\nimport useInterval from 'hooks/useInterval';\n\nconst NumberInput = ({ value, onChange, onCtrlClick }) => {\n    const [running, setRunning] = useState({\n        plus: false,\n        minus: false,\n    });\n\n    useInterval(\n        () => {\n            handleClick();\n        },\n        running.plus || running.minus ? 100 : null\n    );\n\n    const handleClick = () => {\n        if (running.minus) {\n            if (value >= 1) {\n                onChange(value - 1);\n                setRunning({ ...running, minus: true });\n            }\n        } else if (running.plus) {\n            onChange(Number(value) + 1);\n            setRunning({ ...running, plus: true });\n        }\n    };\n\n    const handleCtrlClick = (event) => {\n        if (event.ctrlKey) {\n            const buttonName = event.target.name;\n            onCtrlClick(buttonName);\n        }\n    };\n\n    return (\n        <Wrapper>\n            <MinusButton\n                name='minus'\n                title='Ctrl + Click para restar todo'\n                onClick={handleCtrlClick}\n                onMouseDown={(event) => {\n                    if (!event.ctrlKey) setRunning({ ...running, minus: true });\n                }}\n                onMouseUp={(event) => {\n                    if (!event.ctrlKey) setRunning({ ...running, minus: false });\n                }}\n                onMouseLeave={(event) => {\n                    if (!event.ctrlKey) setRunning({ ...running, minus: false });\n                }}\n            >\n                -\n            </MinusButton>\n            <Input value={value} min={0} onValueChange={({ floatValue }) => onChange(floatValue)} />\n            <PlusButton\n                name='plus'\n                title='Ctrl + Click para sumar todo'\n                onClick={handleCtrlClick}\n                onMouseDown={(event) => {\n                    if (!event.ctrlKey) setRunning({ ...running, plus: true });\n                }}\n                onMouseUp={(event) => {\n                    if (!event.ctrlKey) setRunning({ ...running, plus: false });\n                }}\n                onMouseLeave={(event) => {\n                    if (!event.ctrlKey) setRunning({ ...running, plus: false });\n                }}\n            >\n                +\n            </PlusButton>\n        </Wrapper>\n    );\n};\n\nexport default NumberInput;\n","export const releaseOrAssign = ({ freeStock = 0, currentStock = 0, unitValue = 0, value = 0 }) => {\n    let releasingStock = (value - currentStock) * unitValue;\n    if (releasingStock < 0) releasingStock = releasingStock * -1;\n\n    let currentStockValue = currentStock * unitValue;\n\n    let newProductStock = value;\n    let newFreeStock = freeStock;\n\n    if (value === 0) {\n        newFreeStock = freeStock + currentStockValue;\n    } else if (value < currentStock) {\n        newFreeStock = freeStock + releasingStock;\n    } else if (value > currentStock && freeStock - releasingStock >= 0) {\n        newFreeStock = freeStock - releasingStock;\n    } else {\n        newProductStock = currentStock;\n    }\n    return { newFreeStock, newProductStock };\n};\n","import { useState, useEffect } from 'react';\n\nimport { StockInfo, TotalStock, FreeStock, Header, Variants, VariantContainer, Label } from './styles';\n\nimport {\n    Form,\n    CloseButtonContainer,\n    TitleContainer,\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    ButtonContainer,\n    ErrorContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport Button from 'components/Button';\nimport { X, BookBookmark, XCircle } from 'phosphor-react';\nimport { colors } from 'styles/theme';\nimport { useForm } from 'hooks/useForm';\nimport { updateProduct } from 'api/products';\nimport productSchema from 'validations/schemas/product';\nimport NumberInput from 'components/NumberInput';\nimport { releaseOrAssign } from 'utils/stockManipulation';\n\nconst StockForm = ({ product, handleClose, onSubmit }) => {\n    const [freeStock, setFreeStock] = useState(0);\n    const [stockTotal, setStockTotal] = useState(0);\n\n    const { formData, handleChange, handleNestedChange, handleSubmit, submitErrors, setSubmitErrors, printError } = useForm({\n        initialState: {\n            product_variant: [],\n            reasons: 'Ajuste de inventario por falta de existencia física',\n            ...product,\n        },\n        action: 'edit',\n        editResource: updateProduct,\n        schema: productSchema,\n        onSubmitSuccess: onSubmit,\n    });\n\n    useEffect(() => {\n        if (product) {\n            console.log(product);\n            const total = product.product_variant.reduce((old, current) => old + current.stock * current.unitValue, 0);\n            setStockTotal(total);\n        }\n    }, [product]);\n\n    const onChangeHandler = (selector, index, key, value) => {\n        value = parseFloat(value);\n\n        if (isNaN(value)) {\n            value = 0;\n        }\n        const product = formData.product_variant[index];\n        const currentStock = product.stock;\n        const unitValue = product.unitValue;\n\n        const { newFreeStock, newProductStock } = releaseOrAssign({ freeStock, currentStock, unitValue, value });\n        setFreeStock(newFreeStock);\n        handleNestedChange(selector, index, key, newProductStock);\n    };\n\n    const ctrlClickHandler = (selector, index, key, action) => {\n        const product = formData.product_variant[index];\n        const currentStock = product.stock;\n        const unitValue = product.unitValue;\n        let stockToAsign = 0;\n\n        if (action === 'plus') {\n            stockToAsign = Math.floor(freeStock / Number(product.unitValue)) + Number(product.stock);\n        }\n        const { newFreeStock, newProductStock } = releaseOrAssign({\n            freeStock,\n            currentStock,\n            unitValue,\n            value: stockToAsign,\n        });\n\n        handleNestedChange(selector, index, key, newProductStock);\n        setFreeStock(newFreeStock);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        if (freeStock > 0 && formData.reasons.trim().length === 0) {\n            setSubmitErrors({\n                ...submitErrors,\n                reasons: 'Debe proveer las razones del cambio arbitrario del stock',\n            });\n        } else {\n            handleSubmit(event);\n        }\n    };\n\n    return (\n        <Form onSubmit={submitHandler}>\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>Reasignar stock</TitleContainer>\n            </HeaderContainer>\n            <BodyContainer>\n                <Variants>\n                    <StockInfo>\n                        <TotalStock>{`Stock total: ${stockTotal} unidades`}</TotalStock>\n                        <FreeStock>\n                            {'Stock liberado: '}\n                            <span>{`${freeStock.toFixed(4)} `}</span>\n                            unidades\n                        </FreeStock>\n                    </StockInfo>\n                    <Header>\n                        <strong>Nombre</strong>\n                        <strong>Stock</strong>\n                    </Header>\n                    {formData &&\n                        formData.product_variant.map((productVariant, index) => {\n                            return (\n                                <VariantContainer key={productVariant.id}>\n                                    <Label>{product.name + ' ' + productVariant.name}</Label>\n                                    <NumberInput\n                                        value={formData['product_variant'][index].stock}\n                                        onChange={(value) => onChangeHandler('product_variant', index, 'stock', value)}\n                                        onCtrlClick={(action) => ctrlClickHandler('product_variant', index, 'stock', action)}\n                                    />\n                                </VariantContainer>\n                            );\n                        })}\n                </Variants>\n                {freeStock > 0 && (\n                    <div>\n                        <textarea\n                            style={{ minHeight: '50px' }}\n                            value={formData.reasons}\n                            placeholder='Escriba las razones del cambio arbitrario del stock...'\n                            name='reasons'\n                            onChange={handleChange}\n                        ></textarea>\n                    </div>\n                )}\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>\n                    {printError('freeStock')}\n                    {printError('stockLimit')}\n                    {printError('reasons')}\n                </ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\n\nexport default StockForm;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/inventory';\n\nexport const getInventory = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n","import formatDate from 'utils/formatDate';\n\nconst columns = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Producto',\n        accessor: 'product_variant.name',\n    },\n    {\n        Header: 'Estaba en',\n        accessor: 'old_stock',\n    },\n    {\n        Header: 'Quedó en',\n        accessor: 'new_stock',\n    },\n    {\n        Header: 'Razón',\n        accessor: 'reasons',\n    },\n    {\n        Header: 'Fecha',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n];\n\nexport default columns;\n","import { useState, useEffect, useMemo } from 'react';\n\nimport Table from 'components/Table';\n\nimport { getInventory } from 'api/inventory';\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport columns from './columns';\n\nconst InventoryMovesTable = ({ onError = () => {} }) => {\n    const memoizedColumns = useMemo(() => columns, []);\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getInventory });\n\n    useEffect(() => {\n        if (error) onError(error);\n    }, [error, onError]);\n\n    return (\n        <Table\n            loading={loading}\n            data={data.records}\n            columns={memoizedColumns}\n            onPaginate={setPage}\n            onFilter={setFilter}\n            filterPlaceholder='Buscar por nombre de producto...'\n            pageCount={data.pageCount}\n            capitalize={[1]}\n            filterHeight='30px'\n        />\n    );\n};\n\nexport default InventoryMovesTable;\n","import { useState } from 'react';\nimport { FormContainer } from 'components/CommonLayout/main.layout';\nimport { HeaderContainer, BodyContainer, CloseButtonContainer, TitleContainer, TableContainer } from 'components/CommonLayout/form.layout';\nimport Modal from 'components/Modal';\nimport InventoryMovesTable from 'components/ModuleTables/InventoryMovesTable';\nimport Button from 'components/Button';\nimport { X } from 'phosphor-react';\n\nexport const InventoryMovesModal = ({ show, onClose }) => {\n    const [debtDetails, setDebtDetails] = useState({});\n\n    return (\n        <Modal backdrop show={show} handleClose={onClose}>\n            <FormContainer width='900px'>\n                <HeaderContainer>\n                    <CloseButtonContainer>\n                        <Button onClick={onClose}>\n                            <X />\n                        </Button>\n                    </CloseButtonContainer>\n                    <TitleContainer>Movimientos arbitrarios</TitleContainer>\n                </HeaderContainer>\n                <BodyContainer>\n                    <InventoryMovesTable />\n                </BodyContainer>\n            </FormContainer>\n        </Modal>\n    );\n};\n\nexport default InventoryMovesModal;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/reports';\n\nexport const getSalesReport = async ({ from, to }) => {\n    let filterParams = from && to ? `?from=${from}&to=${to}` : '';\n\n    const response = await axios.get(BASE_URL + '/sale' + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const getDailySales = async () => {\n    const response = await axios.get(BASE_URL + '/sale/daily-sales/').catch((error) => error.response);\n    return response.data;\n};\n\nexport const getCostFluctuation = async (productId) => {\n    const response = await axios.get(BASE_URL + '/product/cost-fluctuation/' + productId).catch((error) => error.response);\n    return response.data;\n};\n\nexport const getProductAverageSales = async (productId) => {\n    const response = await axios.get(BASE_URL + '/product/average-sales/' + productId).catch((error) => error.response);\n    return response.data;\n};\n","import { useState, useEffect } from 'react';\nimport Card from 'components/Card';\n\nimport { ResponsiveLine } from '@nivo/line';\nimport { getCostFluctuation } from 'api/reports';\n\nconst CostFluctuation = ({ productId }) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetch_report = async () => {\n            setLoading(true);\n            const report = await getCostFluctuation(productId);\n            setLoading(false);\n            if (report.id) {\n                setData([report]);\n            } else {\n                setData([]);\n            }\n        };\n\n        if (productId) {\n            fetch_report();\n        }\n    }, [productId]);\n\n    return (\n        <Card>\n            <Card.Header>\n                <h3>Promedio costo mensual</h3>\n            </Card.Header>\n            <Card.Body>\n                {loading && 'Cargando...'}\n                {data.length > 0 && !loading && (\n                    <div style={{ height: '200px' }}>\n                        <ResponsiveLine\n                            data={data}\n                            margin={{ top: 10, right: 20, bottom: 30, left: 40 }}\n                            xScale={{ type: 'point' }}\n                            yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                            axisTop={null}\n                            axisRight={null}\n                            pointSize={10}\n                            pointColor={{ theme: 'background' }}\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabelYOffset={-12}\n                            useMesh={true}\n                        />\n                    </div>\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CostFluctuation;\n","import { useState, useEffect } from 'react';\nimport Card from 'components/Card';\n\nimport { ResponsiveLine } from '@nivo/line';\nimport { getProductAverageSales } from 'api/reports';\n\nconst AverageSales = ({ productId }) => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetch_report = async () => {\n            setLoading(true);\n            const report = await getProductAverageSales(productId);\n            setLoading(false);\n            if (report.chart_data && report.chart_data.id) {\n                setData([report.chart_data]);\n            } else {\n                setData([]);\n            }\n        };\n\n        if (productId) {\n            fetch_report();\n        }\n    }, [productId]);\n\n    return (\n        <Card>\n            <Card.Header>\n                <h3>Promedio ventas semanal</h3>\n                <small>Últimos 3 meses</small>\n            </Card.Header>\n            <Card.Body>\n                {loading && 'Cargando...'}\n                {data.length > 0 && !loading && (\n                    <div style={{ height: '200px' }}>\n                        <ResponsiveLine\n                            data={data}\n                            margin={{ top: 10, right: 40, bottom: 30, left: 40 }}\n                            xScale={{ type: 'point' }}\n                            yScale={{ type: 'linear', min: 0, stacked: false }}\n                            axisLeft={{\n                                format: (e) => Math.floor(e) === e && e,\n                            }}\n                            pointSize={10}\n                            pointColor={{ theme: 'background' }}\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            enablePointLabel\n                            enableGridX\n                            enableGridY\n                            useMesh\n                            tooltip={({ point }) => {\n                                return (\n                                    <div\n                                        style={{\n                                            display: 'grid',\n                                            gridTemplateColumns: 'auto auto',\n                                            gap: '2px',\n                                            background: point.borderColor,\n                                            padding: '5px',\n                                        }}\n                                    >\n                                        <label>Semana: </label>\n                                        <span>{point.data.x}</span>\n                                        <label>Vendidos: </label>\n                                        <span>{point.data.y}</span>\n                                    </div>\n                                );\n                            }}\n                        />\n                    </div>\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default AverageSales;\n","import { useState, useEffect } from 'react';\n\nimport {\n    Wrapper,\n    ContentContainer,\n    ToolbarContainer,\n    TableContainer,\n    FormContainer,\n    ConfirmContainer,\n    SeparatorWrapper,\n} from 'components/CommonLayout/main.layout';\n\nimport Modal from 'components/Modal';\nimport Toolbar from 'components/Toolbar';\nimport { ButtonContainer } from 'components/Toolbar/styles';\nimport Button from 'components/Button';\nimport { Package } from 'phosphor-react';\nimport ProductsTable from 'components/ModuleTables/ProductsTable';\nimport Notification from 'components/Notification';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport ProductForm from './CRUDForm';\nimport StockForm from './stockForm';\nimport InventoryMovesModal from 'components/ModuleModals/InventoryMovesModal';\nimport WidgetBox from 'components/WidgetBox';\n\nimport { deleteProductVariantApi } from 'api/product_variants';\nimport { useNotification } from 'hooks/notification';\nimport { colors } from 'styles/theme';\nimport CostFluctuation from 'components/Widgets/ProductWidgets/CostFluctuation';\nimport AverageSales from 'components/Widgets/ProductWidgets/AverageSales';\n\nconst Products = () => {\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const { notification, showNotification } = useNotification(null);\n\n    useEffect(() => {\n        if (CRUDAction === 'refresh') setSelectedProduct(null);\n    }, [CRUDAction]);\n\n    const handleCRUD = (event) => {\n        if (event.currentTarget.name === 'ToolbarCreate') {\n            setCRUDAction('create');\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\n            setCRUDAction('edit');\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\n            setCRUDAction('delete');\n        } else if (event.currentTarget.name === 'reassignStock') {\n            setCRUDAction('reassignStock');\n        } else if (event.currentTarget.name === 'arbitraryMoves') {\n            setCRUDAction('arbitraryMoves');\n        }\n    };\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        setCRUDAction('refresh');\n    };\n\n    const handleDelete = async () => {\n        const response = await deleteProductVariantApi(selectedProduct.id);\n        setCRUDAction('refresh');\n        setSelectedProduct(null);\n        return response;\n    };\n    return (\n        <Wrapper>\n            <SeparatorWrapper>\n                <ContentContainer>\n                    <ToolbarContainer>\n                        <Toolbar\n                            recordSelected={selectedProduct ? true : false}\n                            onCreate={handleCRUD}\n                            onEdit={handleCRUD}\n                            onDelete={handleCRUD}\n                        >\n                            <ButtonContainer color={colors.secondary}>\n                                <Button name='arbitraryMoves' onClick={handleCRUD}>\n                                    <Package size='24' />\n                                    Movimientos Arbitrarios\n                                </Button>\n                            </ButtonContainer>\n                            <ButtonContainer color={colors.brown}>\n                                <Button name='reassignStock' onClick={handleCRUD} disabled={!selectedProduct}>\n                                    <Package size='24' />\n                                    Reasignar Stock\n                                </Button>\n                            </ButtonContainer>\n                        </Toolbar>\n                    </ToolbarContainer>\n                    <TableContainer>\n                        <ProductsTable\n                            shouldRefresh={CRUDAction === 'refresh'}\n                            selectedRows={selectedProduct}\n                            onProductSelect={setSelectedProduct}\n                            showNotification={showNotification}\n                        />\n                    </TableContainer>\n                    <Modal\n                        show={CRUDAction && CRUDAction !== 'refresh'}\n                        handleClose={() => {\n                            setCRUDAction(null);\n                        }}\n                    >\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\n                            <FormContainer width='650px'>\n                                <ProductForm\n                                    product={CRUDAction === 'edit' && selectedProduct && selectedProduct.product}\n                                    action={CRUDAction}\n                                    handleClose={() => setCRUDAction(null)}\n                                    onSubmit={handleSubmit}\n                                />\n                            </FormContainer>\n                        )}\n                        {CRUDAction === 'reassignStock' && (\n                            <FormContainer width='500px' top='100px'>\n                                <StockForm\n                                    product={selectedProduct && selectedProduct.product}\n                                    handleClose={() => setCRUDAction(null)}\n                                    onSubmit={handleSubmit}\n                                />\n                            </FormContainer>\n                        )}\n                        {CRUDAction === 'delete' && (\n                            <ConfirmContainer>\n                                <ConfirmAlert\n                                    showNotification={showNotification}\n                                    handleClose={() => setCRUDAction(null)}\n                                    callback={handleDelete}\n                                />\n                            </ConfirmContainer>\n                        )}\n                    </Modal>\n                    {CRUDAction === 'arbitraryMoves' && <InventoryMovesModal show={true} onClose={() => setCRUDAction(null)} />}\n                </ContentContainer>\n                <WidgetBox show={selectedProduct} handleClose={() => setSelectedProduct(null)}>\n                    <CostFluctuation productId={selectedProduct && selectedProduct.id} />\n                    <AverageSales productId={selectedProduct && selectedProduct.id} />\n                </WidgetBox>\n            </SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default Products;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/supplyings';\n\nexport const getSupplyings = async ({ page, filter, count }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n    let countParam = count ? `&count=${count}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + countParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createSupplying = async (supplyingData) => {\n    const response = await axios.post(BASE_URL, supplyingData).catch((error) => error.response);\n    console.log(response);\n    return response.data;\n};\n\nexport const updateSupplying = async (id, supplyingData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, supplyingData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteSupplying = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Proveedor',\n        accessor: 'supplier.name',\n    },\n    {\n        Header: 'Producto',\n        accessor: 'product_variant.name',\n    },\n    {\n        Header: 'Precio',\n        accessor: 'buyPrice',\n        Cell: ({ value }) => {\n            return `$${value}`;\n        },\n    },\n    {\n        Header: 'Cantidad',\n        accessor: 'quantity',\n    },\n    {\n        Header: 'Creado',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n];\n","import { useState, useMemo, useEffect } from 'react';\n\nimport Table from 'components/Table';\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getSupplyings } from 'api/supplyings';\n\nimport { COLUMNS } from './columns';\n\nconst SupplyingsTable = ({ onSupplyingSelect, selectedRows, shouldRefresh, showNotification }) => {\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n    const memoizedColumns = useMemo(() => COLUMNS || [], []);\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getSupplyings });\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <Table\n            selectedRows={selectedRows}\n            onRowSelect={onSupplyingSelect}\n            loading={loading}\n            data={data.records}\n            columns={memoizedColumns}\n            onFilter={setFilter}\n            filterPlaceholder='Buscar por id, proveedor, producto.'\n            onPaginate={setPage}\n            pageCount={data.pageCount}\n            capitalize={[1, 2]}\n        />\n    );\n};\n\nexport default SupplyingsTable;\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    product_variant_id: yup.number().required('El campo producto es requerido').typeError('Debe elegir un producto'),\n    supplierId: yup.number().required('El campo proveedor es requerido').typeError('Debe elegir un proveedor'),\n    buyPrice: yup.number().required('El campo precio de compra es requerido').typeError('El precio de compra debe tener un valor numérico'),\n    quantity: yup.number().required('El campo cantidad es requerido').typeError('La cantidad debe tener un valor numérico'),\n});\n\nexport default schema;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    div {\n        flex-direction: row;\n    }\n    input,\n    div {\n        text-transform: capitalize;\n    }\n`;\n\nexport const SuggestionBox = styled.div`\n    display: ${(props) => (props.shouldOpen ? 'flex' : 'none')};\n    position: absolute;\n    padding: 5px;\n    top: 100%;\n    max-height: 100px;\n    width: 100%;\n    overflow-y: auto;\n    border-radius: 4px;\n    box-shadow: rgba(101 119 134 / 20%) 0px 0px 15px, rgba(101 119 134 / 25%) 0px 0px 3px 1px;\n    background: white;\n`;\n\nexport const OptionLabel = styled.option`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding: 5px 0;\n\n    :focus {\n        background: blue;\n        color: white;\n    }\n`;\n","import { Wrapper } from './styles';\nimport AsyncSelect from 'react-select/async-creatable';\nimport { colors } from 'styles/theme';\nimport debounce from 'debounce-promise';\n\nconst SearchInput = ({\n    innerRef,\n    size,\n    styles,\n    isError,\n    value,\n    autoFocus,\n    onSelect,\n    placeholder,\n    isDisabled,\n    loadOptions,\n    onCreateOption,\n    defaultOptions = true,\n    cacheOptions = true,\n}) => {\n    return (\n        <Wrapper>\n            <AsyncSelect\n                styles={{\n                    menu: (provided) => ({\n                        ...provided,\n                        flexDirection: 'column !important',\n                    }),\n                    menuList: (provided) => ({\n                        ...provided,\n                        flexDirection: 'column !important',\n                    }),\n                    container: (provided) => ({\n                        ...provided,\n                    }),\n                    control: (provided, state) => {\n                        return {\n                            ...provided,\n                            width: '100%',\n                            boxShadow: state.selectProps.isError\n                                ? '0 0 0 2px red'\n                                : state.isFocused\n                                ? '0 0 0 2px ' + colors.secondary\n                                : '0 0 0 1px ' + colors.lightBlack,\n                            color: colors.secondary + ' !important',\n                            border: 'none',\n                            padding: size === 'medium' ? '5px 0px' : size === 'large' ? '10px 0px' : 'auto',\n                        };\n                    },\n                    option: (provided) => ({\n                        ...provided,\n                    }),\n                    ...styles,\n                }}\n                loadOptions={debounce((inputValue, callback) => loadOptions(inputValue, callback), 150)}\n                defaultOptions={defaultOptions}\n                cacheOptions={cacheOptions}\n                value={value}\n                autoFocus={autoFocus}\n                placeholder={placeholder}\n                isDisabled={isDisabled}\n                onChange={onSelect}\n                ref={innerRef}\n                loadingMessage={() => {\n                    return 'Cargando...';\n                }}\n                onCreateOption={onCreateOption}\n                isClearable\n                isError={isError}\n            />\n        </Wrapper>\n    );\n};\n\nexport default SearchInput;\n","import { useState, useEffect } from 'react';\nimport SearchInput from 'components/SearchInput';\nimport { getSuppliers } from 'api/suppliers';\n\nconst SupplierSearch = ({ value, autoFocus, onSelect }) => {\n    const [selectedSupplier, setSelectedSupplier] = useState();\n\n    useEffect(() => {\n        if (value) setSelectedSupplier({ label: value.name, value });\n    }, [value]);\n\n    const loadSuppliers = async (inputValue) => {\n        const suppliers = await getSuppliers({ page: 0, filter: inputValue });\n        if (suppliers && suppliers.records.length > 0) {\n            const records = suppliers.records.map((record) => {\n                const supplier = {\n                    label: record.name,\n                    value: record,\n                };\n                return supplier;\n            });\n\n            return records;\n        }\n    };\n\n    const handleSelect = (option, { action }) => {\n        if (action === 'select-option') {\n            setSelectedSupplier({ label: option.label, value: option.value });\n            onSelect(option.value, action);\n        } else {\n            setSelectedSupplier(null);\n            onSelect(null, action);\n        }\n    };\n\n    return (\n        <SearchInput\n            loadOptions={loadSuppliers}\n            placeholder='Proveedor'\n            value={selectedSupplier}\n            onSelect={handleSelect}\n            autoFocus={autoFocus}\n        />\n    );\n};\n\nexport default SupplierSearch;\n","import { useState, useEffect } from 'react';\nimport SearchInput from 'components/SearchInput';\nimport { getProductVariants } from 'api/product_variants';\n\nconst ProductSearch = ({ hideOutOfStock, innerRef, value, autoFocus = false, isDisabled, showPriceOnName = false, onSelect }) => {\n    const [selectedProduct, setSelectedProduct] = useState();\n\n    useEffect(() => {\n        if (value) {\n            setSelectedProduct({ label: value.name, value });\n        } else {\n            setSelectedProduct(null);\n        }\n    }, [value]);\n\n    const loadProductVariants = async (inputValue) => {\n        let products = await getProductVariants({ page: 0, filter: inputValue });\n\n        if (products && products.records.length > 0) {\n            if (hideOutOfStock) products.records = products.records.filter((p) => p.stock > 0);\n\n            const records = products.records.map((record) => {\n                let product_name = record.name;\n                if (showPriceOnName) {\n                    product_name = `${record.name} - ${record.converted_price['PRICE_VES']} Bs`;\n                }\n                const product = {\n                    key: record.id,\n                    label: product_name,\n                    value: record,\n                };\n                return product;\n            });\n\n            return records;\n        }\n    };\n\n    const handleSelect = (option, { action }) => {\n        if (action === 'select-option') {\n            setSelectedProduct({ label: option.value.name, value: option.value });\n            onSelect(option.value, action);\n        } else if (action === 'clear') {\n            setSelectedProduct(null);\n            onSelect(null, action);\n        }\n    };\n\n    return (\n        <SearchInput\n            loadOptions={loadProductVariants}\n            placeholder='Buscar...'\n            value={selectedProduct}\n            onSelect={handleSelect}\n            autoFocus={autoFocus}\n            innerRef={innerRef}\n            isDisabled={isDisabled}\n            styles={{\n                option: (provided, state) => {\n                    const stock = state.data.value.stock;\n                    const color = stock > 0 ? 'green' : 'red';\n\n                    return {\n                        ...provided,\n                        color,\n                    };\n                },\n            }}\n        />\n    );\n};\n\nexport default ProductSearch;\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'Nombre',\n        accessor: 'product_variant.name',\n    },\n    {\n        Header: '$',\n        accessor: 'buyPrice',\n    },\n    {\n        Header: 'Cantidad',\n        accessor: 'quantity',\n    },\n    {\n        Header: 'Fecha',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return <span title={formatDate(value)}>{formatDate(value)}</span>;\n        },\n    },\n];\n","import { useMemo } from 'react';\n\nimport Table from 'components/Table';\n\nimport { COLUMNS } from './columns.js';\n\nconst RecentSupplyingsTable = ({ supplyings, loading }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    return <Table loading={loading} data={supplyings} columns={memoizedColumns} capitalize={[0]} />;\n};\n\nexport default RecentSupplyingsTable;\n","import { useEffect, useState, useRef } from 'react';\n\nimport * as L from 'components/CommonLayout/form.layout';\n\nimport Button from 'components/Button';\nimport { colors } from 'styles/theme';\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\nimport { useForm } from 'hooks/useForm';\nimport { createSupplying, updateSupplying } from 'api/supplyings';\nimport { getRecentSupplyings } from 'api/product_variants';\nimport NumericInput from 'react-number-format';\n\nimport supplyingSchema from 'validations/schemas/supplying';\n\nimport SupplierSearch from 'components/SupplierSearch';\nimport ProductSearch from 'components/ProductSearch';\nimport LabeledInput from 'components/LabeledInput';\nimport RecentSupplyingsTable from 'components/ModuleTables/RecentSupplyingsTable';\n\nconst SupplyingForm = ({ supplying, action, handleClose, onSubmit }) => {\n    const { handleNumericInput, loading, handleSubmit, formData, setFormData, printError, hasError } = useForm({\n        initialState: {\n            supplierId: null,\n            product_variant_id: null,\n            buyPrice: null,\n            quantity: null,\n        },\n        action,\n        createResource: createSupplying,\n        editResource: updateSupplying,\n        schema: supplyingSchema,\n        onSubmitSuccess: onSubmit,\n    });\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n\n    const [loadingRecentSupplyings, setLoadingRecentSupplyings] = useState(false);\n    const [recentSupplyings, setRecentSupplyings] = useState(null);\n    const [productSearchDisabled, setProductSearchDisabled] = useState(false);\n\n    const supplierRef = useRef(null);\n    const productRef = useRef(null);\n    const buyPriceRef = useRef(null);\n    const quantityRef = useRef(null);\n\n    useEffect(() => {\n        if (supplying) {\n            //fetchRecentSupplyings(supplying.product_variant.id);\n            setFormData({\n                id: supplying.id,\n                supplierId: supplying.supplier.id,\n                product_variant_id: supplying.product_variant.id,\n                buyPrice: supplying.buyPrice,\n                quantity: supplying.quantity,\n            });\n            setSelectedProduct(supplying.product_variant);\n            setSelectedSupplier(supplying.supplier);\n        }\n    }, [supplying, setFormData]);\n\n    const fetchRecentSupplyings = async (product_variant_id) => {\n        setLoadingRecentSupplyings(true);\n        setProductSearchDisabled(true);\n        const response = await getRecentSupplyings({ page: 1, count: 5, product_variant_id });\n        setRecentSupplyings(response.records);\n        setLoadingRecentSupplyings(false);\n        setProductSearchDisabled(false);\n        return response;\n    };\n\n    const onProductSelect = async (product, select_action) => {\n        if (!loadingRecentSupplyings && action === 'create' && select_action === 'select-option') {\n            const response = await fetchRecentSupplyings(product.id);\n\n            if (response && response.records.length > 0) {\n                const mostRecentSupplying = response.records[0];\n                setFormData({\n                    ...formData,\n                    product_variant_id: product.id,\n                    buyPrice: mostRecentSupplying.buyPrice,\n                    quantity: mostRecentSupplying.quantity,\n                });\n                setTimeout(() => quantityRef.current.focus());\n            } else {\n                setFormData({\n                    ...formData,\n                    product_variant_id: product.id,\n                    buyPrice: '',\n                    quantity: '',\n                });\n                setTimeout(() => buyPriceRef.current.focus());\n            }\n            setSelectedProduct(product);\n        } else {\n            setFormData({ ...formData, product_variant_id: product ? product.id : null });\n        }\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        setTimeout(() => productRef.current.focus());\n        handleSubmit(event);\n    };\n\n    return (\n        <L.Form onSubmit={submitHandler}>\n            <L.HeaderContainer>\n                <L.CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </L.CloseButtonContainer>\n                <L.TitleContainer>{action === 'create' ? 'Crear abastecimiento' : 'Editar abastecimiento'}</L.TitleContainer>\n            </L.HeaderContainer>\n            <L.BodyContainer>\n                <L.InputContainer>\n                    <SupplierSearch\n                        innerRef={supplierRef}\n                        onSelect={(supplier, action) => {\n                            setSelectedSupplier(supplier);\n                            setFormData({ ...formData, supplierId: supplier ? supplier.id : null });\n                            productRef.current.focus();\n                        }}\n                        value={selectedSupplier}\n                        autoFocus\n                    />\n                    {printError('supplierId')}\n                </L.InputContainer>\n                <L.InputContainer>\n                    <ProductSearch\n                        onSelect={onProductSelect}\n                        isDisabled={productSearchDisabled}\n                        innerRef={productRef}\n                        value={selectedProduct}\n                    />\n                    {printError('product_variant_id')}\n                </L.InputContainer>\n                <L.InlineContainer>\n                    <L.InputContainer>\n                        <LabeledInput\n                            innerRef={buyPriceRef}\n                            onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'buyPrice')}\n                            value={formData.buyPrice}\n                            placeholder='Precio/Unidad'\n                            prefix='$ '\n                            as={NumericInput}\n                            errorborder={hasError('buyPrice')}\n                            required\n                        />\n                        {printError('buyPrice')}\n                    </L.InputContainer>\n                    <L.InputContainer>\n                        <LabeledInput\n                            innerRef={quantityRef}\n                            onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'quantity')}\n                            value={formData.quantity}\n                            placeholder='Cantidad'\n                            as={NumericInput}\n                            errorborder={hasError('quantity')}\n                            required\n                        />\n                        {printError('quantity')}\n                    </L.InputContainer>\n                </L.InlineContainer>\n                {selectedProduct && (\n                    <L.TableContainer>\n                        <h4>Abastecimientos recientes</h4>\n                        <RecentSupplyingsTable supplyings={recentSupplyings || []} loading={loadingRecentSupplyings} />\n                    </L.TableContainer>\n                )}\n            </L.BodyContainer>\n            <L.FooterWrapper>\n                <L.ErrorContainer>{printError('undefined')}</L.ErrorContainer>\n                <L.FooterContainer>\n                    <L.ButtonContainer color={colors.primary}>\n                        <Button loading={loading} type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </L.ButtonContainer>\n                    <L.ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </L.ButtonContainer>\n                </L.FooterContainer>\n            </L.FooterWrapper>\n        </L.Form>\n    );\n};\nexport default SupplyingForm;\n","import { useState } from 'react';\nimport * as L from 'components/CommonLayout/main.layout';\nimport Toolbar from 'components/Toolbar';\nimport SupplyingsTable from 'components/ModuleTables/SupplyingsTable';\nimport { useNotification } from 'hooks/notification';\nimport SupplyingForm from './CRUDForm';\nimport Modal from 'components/Modal';\nimport { deleteSupplying } from 'api/supplyings';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport Notification from 'components/Notification';\n\nconst Supplyings = () => {\n    const [selectedSupplying, setSelectedSupplying] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const { notification, showNotification } = useNotification();\n\n    function handleCRUD(event) {\n        if (event.currentTarget.name === 'ToolbarCreate') {\n            setCRUDAction('create');\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\n            setCRUDAction('edit');\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\n            setCRUDAction('delete');\n        }\n    }\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        const crudAction = CRUDAction;\n        setCRUDAction('refresh');\n        setCRUDAction(crudAction);\n    };\n\n    const handleDelete = async () => {\n        const response = await deleteSupplying(selectedSupplying.id);\n        if (response.error) {\n            showNotification('error', response.error.message);\n            setCRUDAction(null);\n        } else {\n            refreshTable();\n        }\n    };\n\n    const refreshTable = () => {\n        setCRUDAction('refresh');\n        setCRUDAction(null);\n    };\n\n    return (\n        <L.Wrapper>\n            <L.ToolbarContainer>\n                <Toolbar onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} recordSelected={selectedSupplying} />\n            </L.ToolbarContainer>\n            <L.ContentContainer>\n                <L.TableContainer>\n                    <SupplyingsTable\n                        onSupplyingSelect={setSelectedSupplying}\n                        selectedRows={selectedSupplying}\n                        shouldRefresh={CRUDAction === 'refresh'}\n                        showNotification={showNotification}\n                    />\n                </L.TableContainer>\n                <Modal backdrop show={CRUDAction ? true : false} handleClose={() => setCRUDAction(null)}>\n                    {(CRUDAction === 'create' || CRUDAction === 'edit' || CRUDAction === 'refresh') && (\n                        <L.FormContainer>\n                            <SupplyingForm\n                                onSubmit={handleSubmit}\n                                action={CRUDAction}\n                                supplying={CRUDAction === 'edit' && selectedSupplying}\n                                handleClose={() => setCRUDAction(null)}\n                            />\n                        </L.FormContainer>\n                    )}\n                    {CRUDAction === 'delete' && (\n                        <L.ConfirmContainer>\n                            <ConfirmAlert\n                                showNotification={showNotification}\n                                handleClose={() => setCRUDAction(null)}\n                                callback={handleDelete}\n                            />\n                        </L.ConfirmContainer>\n                    )}\n                </Modal>\n            </L.ContentContainer>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </L.Wrapper>\n    );\n};\nexport default Supplyings;\n","import styled from 'styled-components';\nimport { colors, breakpoints } from 'styles/theme';\n\nexport const MainContainer = styled.div`\n    height: 100%;\n    border: 1px solid black;\n    overflow-y: auto;\n`;\n\nexport const MetadataContainer = styled.div`\n    flex: 0 0 40%;\n    border-top: 1px solid black;\n\n    @media (min-width: ${breakpoints.laptop}) {\n        flex-direction: row;\n        flex: 0 0 auto;\n        max-height: 25%;\n    }\n`;\n\nexport const InvoiceFormContainer = styled.div`\n    flex: 1 0 60%;\n    overflow: auto;\n    max-height: 100%;\n`;\n\nexport const ClientContainer = styled.div`\n    flex: 0 0 auto;\n    border-bottom: 1px solid black;\n    gap: 5px;\n    padding-bottom: 10px;\n\n    h3 {\n        margin: 5px 0 0 0;\n    }\n\n    @media (min-width: ${breakpoints.mobile}) {\n        padding: 10px;\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        flex: 1 0 50%;\n        border-bottom: none;\n        border-right: 1px solid black;\n    }\n`;\n\nexport const PaymentsContainer = styled.div`\n    flex: 1 1 50%;\n\n    border-top: 1px solid black;\n    gap: 5px;\n    overflow: auto;\n    padding-bottom: 10px;\n\n    h3 {\n        margin: 5px 0 0 0;\n    }\n\n    @media (min-width: ${breakpoints.mobile}) {\n        padding: 10px;\n    }\n\n    @media (min-width: ${breakpoints.laptop}) {\n        border-top: none;\n    }\n`;\n\nexport const InvoiceTotalContainer = styled.div`\n    flex: 0 1 auto;\n    flex-direction: row;\n    align-items: flex-end;\n    justify-content: center;\n    margin-bottom: 5px;\n    width: 100%;\n\n    font-size: 16px;\n    font-weight: 800;\n`;\n\nexport const ClientNameContainer = styled.div`\n    flex: 1;\n    display: none;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        display: flex;\n    }\n`;\n\nexport const ClientPhoneNumberContainer = styled.div`\n    flex: 1;\n    display: none;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        display: flex;\n    }\n`;\n\nexport const OrderDetailsContainer = styled.div`\n    flex: 1;\n\n    overflow-y: auto;\n\n    border-top: 1px solid black;\n\n    @media (min-width: ${breakpoints.mobile}) {\n        flex-direction: row;\n    }\n`;\n\nexport const ProductFormContainer = styled.div``;\n\nexport const TableContainer = styled.div`\n    flex: 1 1 100%;\n    overflow: auto;\n\n    margin-bottom: 10px;\n\n    td {\n        padding: 5px;\n    }\n`;\n\nexport const FooterContainer = styled.div`\n    flex-direction: row-reverse;\n    justify-content: space-between;\n\n    button {\n        padding: 5px 10px;\n        color: white;\n        font-size: 16px;\n        background: ${(props) => props.color || 'transparent'};\n    }\n`;\n\nexport const ActionsContainer = styled.div`\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin: 5px 0;\n\n    button {\n        padding: 10px;\n    }\n`;\n\nexport const TotalContainer = styled.fieldset`\n    display: grid;\n    grid-template-columns: 1fr auto;\n\n    place-items: end;\n\n    padding: 2px;\n    min-height: 100%;\n    width: 100%;\n\n    legend {\n        color: ${colors.primary};\n    }\n\n    label {\n        padding: 5px;\n    }\n\n    @media (min-width: ${breakpoints.tablet}) {\n        font-size: 22px;\n    }\n`;\n","import { useState, useEffect } from 'react';\nimport SearchInput from 'components/SearchInput';\nimport { getClients } from 'api/clients';\n\nconst ClientSearch = ({ size, innerRef, value, autoFocus, onSelect, onCreate }) => {\n    const [selectedClient, setSelectedClient] = useState();\n\n    useEffect(() => {\n        if (value) setSelectedClient({ label: value.name, value });\n    }, [value]);\n\n    const loadClients = async (inputValue) => {\n        const clients = await getClients({ page: 1, filter: inputValue });\n\n        if (clients && clients.records.length > 0) {\n            const records = clients.records.map((client) => {\n                const formattedClient = {\n                    key: client.id,\n                    label: `${client.name} - ${Number(client.cedula).toLocaleString()}`,\n                    value: client,\n                };\n                return formattedClient;\n            });\n\n            return records;\n        }\n    };\n\n    const handleSelect = (option, { action }) => {\n        if (action === 'select-option') {\n            setSelectedClient({ label: option.value.name, value });\n            onSelect(option.value, action);\n        } else if (action === 'clear') {\n            setSelectedClient(null);\n            onSelect(null, action);\n        }\n    };\n\n    return (\n        <SearchInput\n            onCreateOption={onCreate}\n            innerRef={innerRef}\n            loadOptions={loadClients}\n            defaultOptions={false}\n            cacheOptions={false}\n            placeholder='Cliente'\n            value={selectedClient}\n            onSelect={handleSelect}\n            autoFocus={autoFocus}\n            isError={selectedClient && selectedClient.value.sale && selectedClient.value.sale.length > 0}\n            size={size}\n        />\n    );\n};\n\nexport default ClientSearch;\n","import NumberFormat from 'react-number-format';\n\nexport const COLUMNS = [\n    {\n        Header: 'Producto',\n        accessor: (row) => {\n            return row.name || row.product_variant.name;\n        },\n        minWidth: 10,\n        maxWidth: 20,\n        width: 15,\n    },\n    {\n        Header: 'Precio',\n        accessor: (row) => {\n            return (\n                <NumberFormat\n                    decimalSeparator=','\n                    thousandSeparator='.'\n                    suffix=' Bs'\n                    displayType='text'\n                    value={row.converted_price.PRICE_VES}\n                />\n            );\n        },\n    },\n    {\n        Header: 'Cantidad',\n        accessor: 'quantity',\n    },\n    {\n        Header: 'Total',\n        accessor: (row) => {\n            return (\n                <NumberFormat\n                    decimalSeparator=','\n                    thousandSeparator='.'\n                    suffix=' Bs'\n                    displayType='text'\n                    value={Number((row.converted_price['PRICE_VES'] * row.quantity).toFixed(2))}\n                />\n            );\n        },\n    },\n];\n","import { useMemo } from 'react';\n\nimport Table from 'components/Table';\n\nimport { COLUMNS } from './columns.js';\n\nconst SalesControlTable = ({ onDeleteRow, onProductSelect, selectedRows, onFilter, maxHeight, products = [] }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    return (\n        <Table\n            onRowSelect={onProductSelect}\n            selectedRows={selectedRows}\n            async={false}\n            data={products}\n            columns={memoizedColumns}\n            capitalize={[0]}\n            theme='dark'\n            onDeleteRow={onDeleteRow}\n            onFilter={onFilter}\n            filterPlaceholder='Buscar...'\n            maxHeight={maxHeight}\n        />\n    );\n};\n\nexport default SalesControlTable;\n","import styled from 'styled-components';\nimport { colors } from 'styles/theme';\nimport NumberInput from 'react-number-format';\n\nexport const FormContainer = styled.form`\n    display: grid;\n    grid-template-columns: 1fr 10% auto;\n    text-align: center;\n    gap: 10px;\n    padding: 10px;\n\n    button {\n        border-radius: 5px;\n        color: white;\n        font-size: 16px;\n        background: ${colors.primary};\n    }\n\n    h4 {\n        margin: 0;\n    }\n`;\n\nexport const QuantityInput = styled(NumberInput)`\n    border-radius: 5px;\n    border: 1px solid grey;\n\n    :focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px ${colors.secondary};\n    }\n`;\n","import { useState, createContext } from 'react';\n\nexport const DolarContext = createContext(null);\n\nconst DolarContextProvider = ({ children }) => {\n    const [currencyRates, setCurrencyRates] = useState();\n\n    return <DolarContext.Provider value={{ currencyRates, setCurrencyRates }}>{children}</DolarContext.Provider>;\n};\nexport default DolarContextProvider;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/currencyRates';\n\nexport const getCurrencyRate = async (currency) => {\n    const response = await axios.get(`${BASE_URL}/${currency}`).catch((error) => error.response);\n    return response.data;\n};\n\nexport const getCurrencyRates = async () => {\n    const response = await axios.get(BASE_URL).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updateCurrencyRateRequest = async (data) => {\n    const response = await axios.patch(`${BASE_URL}/${data.currency}`, data).catch((error) => error.response);\n    return response.data;\n};\n","import { useContext, useEffect, useCallback } from 'react';\nimport { DolarContext } from 'context/dolar';\nimport { getCurrencyRates, updateCurrencyRateRequest } from 'api/currencyRate';\nimport { useNotification } from 'hooks/notification';\n\nexport const useCurrencyRates = (fetchOnMount = false) => {\n    const { currencyRates, setCurrencyRates } = useContext(DolarContext);\n    const { notification, showNotification } = useNotification();\n\n    const getCurrencyRatesFromLocalStorage = () => {\n        return window.localStorage.getItem('dolarValue');\n    };\n\n    const updateCurrencyRate = useCallback(\n        async (data) => {\n            const response = await updateCurrencyRateRequest(data);\n            if (response.error) {\n                showNotification('error', response.error.message);\n            } else {\n                setCurrencyRates(response);\n            }\n        },\n        [setCurrencyRates, showNotification]\n    );\n\n    const fetchCurrencyRates = useCallback(async () => {\n        const response = await getCurrencyRates();\n        if (response.error) {\n            showNotification('error', response.error.message);\n        } else {\n            setCurrencyRates(response);\n        }\n    }, [setCurrencyRates, showNotification]);\n\n    useEffect(() => {\n        if (fetchOnMount) fetchCurrencyRates();\n    }, [fetchCurrencyRates, fetchOnMount]);\n\n    return { currencyRates, notification, showNotification, fetchCurrencyRates, updateCurrencyRate, getCurrencyRatesFromLocalStorage };\n};\n","import { useEffect, useState, useRef } from 'react';\nimport * as L from './styles';\n\nimport Button from 'components/Button';\nimport ProductSearch from 'components/ProductSearch';\nimport { getProductVariantById } from 'api/product_variants';\nimport Notification from 'components/Notification';\nimport { useNotification } from 'hooks/notification';\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\n\nconst SaleProductForm = ({ productToEdit, productSearchRef, onSubmit }) => {\n    const { currencyRates } = useCurrencyRates(false);\n\n    const [loading, setLoading] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [quantity, setQuantity] = useState(1);\n    const { notification, showNotification } = useNotification();\n    let quantityInputRef = useRef(null);\n\n    useEffect(() => {\n        if (productToEdit) {\n            setSelectedProduct(productToEdit);\n            setQuantity(productToEdit.quantity);\n            quantityInputRef.current.focus();\n        } else {\n            setSelectedProduct(null);\n            setQuantity(1);\n            productSearchRef.current.focus();\n        }\n    }, [productToEdit, productSearchRef]);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!currencyRates) {\n            showNotification('error', 'Debe asignar el valor del dolar');\n            return;\n        }\n        if (!selectedProduct || !quantity) {\n            showNotification('error', 'Producto o cantidad vacia');\n            return;\n        }\n\n        const product = await getProductVariantById(selectedProduct.id);\n        const stock = Number(product.stock);\n\n        if (stock < quantity) {\n            showNotification('error', `No hay suficiente stock. Queda(n) ${stock} producto(s).`);\n            return;\n        }\n\n        if (!loading) {\n            setLoading(true);\n            onSubmit({\n                ...product,\n                name: product.name,\n                price: Number(product.price),\n                quantity,\n                profitPercent: Number(product.profitPercent),\n                stock: Number(product.stock),\n            });\n            setLoading(false);\n\n            setQuantity(1);\n            setSelectedProduct(null);\n            productSearchRef.current.focus();\n        }\n    };\n\n    const onProductSelect = (product, action) => {\n        setSelectedProduct(product);\n        if (action === 'select-option') quantityInputRef.current.focus();\n    };\n\n    return (\n        <L.FormContainer onSubmit={handleSubmit}>\n            <h4>Producto</h4>\n            <h4>Cantidad</h4>\n            <label></label>\n            <ProductSearch\n                hideOutOfStock\n                innerRef={productSearchRef}\n                value={selectedProduct}\n                onSelect={onProductSelect}\n                showPriceOnName\n                autoFocus\n            />\n            <L.QuantityInput\n                style={{ textAlign: 'center', fontSize: '16px' }}\n                onFocus={(event) => {\n                    setTimeout(() => event.target.select());\n                }}\n                getInputRef={(ref) => (quantityInputRef.current = ref)}\n                onValueChange={(values) => setQuantity(values.floatValue)}\n                value={quantity}\n            />\n            <Button loading={loading} type='submit'>\n                Enviar\n            </Button>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </L.FormContainer>\n    );\n};\n\nexport default SaleProductForm;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\nexport const TableContainer = styled.div`\n    max-height: 400px;\n    overflow: auto;\n`;\n\nexport const ActionsContainer = styled.div`\n    flex: 1 0 75px;\n    flex-direction: row;\n    justify-content: flex-end;\n    padding: 10px 0;\n`;\n","import { useMemo } from 'react';\n\nimport Table from 'components/Table';\nimport formatDate from 'utils/formatDate';\n\nconst DebtSelectionTable = ({ selectedRows, onDebtSelect, onShowDetailsClick, data }) => {\n    const memoizedColumns = useMemo(\n        () => [\n            {\n                Header: 'ID',\n                accessor: 'id',\n                Cell: (props) => {\n                    return (\n                        <button style={{ cursor: 'pointer' }} onClick={() => onShowDetailsClick(props.row.original)}>\n                            {props.value}\n                        </button>\n                    );\n                },\n            },\n            {\n                Header: 'Deuda Bs',\n                accessor: 'debt.converted_amount.PAYMENT_VES',\n                Cell: ({ value }) => {\n                    return value.toLocaleString() + ' Bs';\n                },\n            },\n            {\n                Header: 'Creado',\n                accessor: 'createdAt',\n                Cell: ({ value }) => {\n                    return formatDate(value);\n                },\n            },\n        ],\n        [onShowDetailsClick]\n    );\n\n    return (\n        <>\n            <Table\n                selectedRows={selectedRows}\n                onRowSelect={onDebtSelect}\n                data={data}\n                columns={memoizedColumns}\n                capitalize={[1]}\n                async={false}\n                multiSelect\n            />\n        </>\n    );\n};\n\nexport default DebtSelectionTable;\n","import styled from 'styled-components';\n\nimport { colors } from 'styles/theme';\n\nexport const TableContainer = styled.div`\n    td {\n        padding: 5px;\n    }\n    max-height: 150px;\n    overflow: auto;\n`;\n\nexport const MetadataContainer = styled.div`\n    flex-direction: row;\n    max-height: 160px;\n    border-bottom: 1px solid ${colors.shadow};\n    padding-bottom: 10px;\n`;\nexport const ClientContainer = styled.fieldset`\n    width: 50%;\n    padding: 5px;\n    overflow: auto;\n`;\n\nexport const PaymentsContainer = styled.fieldset`\n    display: grid;\n    width: 50%;\n    padding: 5px;\n    overflow: auto;\n`;\n\nexport const TotalContainer = styled.div`\n    flex-direction: row;\n    place-content: space-around;\n    min-height: 100%;\n\n    border-top: 1px solid ${colors.shadow};\n`;\n\nexport const SaleInfoTotal = styled.div`\n    flex-direction: row;\n`;\n\nexport const DebtInfoTotal = styled.fieldset`\n    display: grid;\n    grid-template-columns: auto auto;\n    gap: 5px;\n    width: 100%;\n\n    legend {\n        color: ${colors.primary};\n        font-size: 22px;\n    }\n`;\n\nexport const DebtLabel = styled.div`\n    place-items: end;\n`;\n\nexport const DebtValue = styled.div`\n    flex-direction: row;\n    gap: 10px;\n    place-items: start;\n`;\n\nexport const DebtOriginal = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-content: end;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: auto auto;\n\n    justify-content: start;\n\n    label,\n    span {\n        padding: 5px;\n    }\n\n    label {\n        font-weight: bold;\n    }\n`;\n","import * as L from './styles';\nimport NumericInput from 'react-number-format';\n\nconst ClientDetails = ({ name = '', cedula = '', phoneNumber = '' }) => {\n    return (\n        <L.Wrapper>\n            <label>Nombre:</label>\n            <span>{name || 'Anónimo'}</span>\n            <label>Cédula:</label>\n            <span>{(cedula && Number(cedula).toLocaleString()) || 'Anónimo'}</span>\n            <label>Teléfono:</label>\n            {(phoneNumber && <NumericInput displayType='text' value={phoneNumber} format='( #### ) - ### - ####' />) || (\n                <span>Anónimo</span>\n            )}\n        </L.Wrapper>\n    );\n};\n\nexport default ClientDetails;\n","const Selector = ({ paymentList = [], onChange, value }) => {\n    return (\n        <select value={value} onChange={onChange}>\n            {paymentList.map((payment, index) => {\n                return (\n                    <option key={payment.id} value={payment.id}>\n                        {payment.display_name}\n                    </option>\n                );\n            })}\n        </select>\n    );\n};\n\nexport default Selector;\n","import styled from 'styled-components';\n\nimport { colors } from 'styles/theme';\n\nexport const NameContainer = styled.button`\n    border: none;\n    color: white;\n\n    place-content: center;\n    place-items: center;\n\n    padding: 0 5px;\n    cursor: pointer;\n\n    :hover {\n        background: red !important;\n    }\n`;\n\nexport const InputContainer = styled.div`\n    flex: 0 1 100%;\n\n    input {\n        text-align: right;\n    }\n\n    select {\n        height: 100%;\n    }\n`;\n\nexport const CodeContainer = styled.div`\n    flex: 0 1 auto;\n\n    input {\n        text-align: right;\n    }\n`;\n\nexport const SelectContainer = styled.div`\n    select {\n        height: 100%;\n        cursor: pointer;\n    }\n\n    select:disabled {\n        opacity: 1;\n    }\n`;\n\nexport const CurrencyContainer = styled.div`\n    place-content: center;\n    place-items: center;\n    padding: 0 5px;\n    pointer-events: none;\n`;\n\nexport const Wrapper = styled.div`\n    flex-direction: row;\n    * {\n        border-radius: 0;\n    }\n\n    ${SelectContainer} > select, ${NameContainer}, ${CurrencyContainer} {\n        color: white;\n        ${(props) => (props.ischange ? { background: colors.brown } : { background: colors.primary })}\n    }\n`;\n","import Selector from './Selector';\nimport POS from './POS';\nimport Transfer from './Transfer';\nimport Cash from './Cash';\n\nconst PaymentMethods = { Selector, POS, Transfer, Cash, Paypal: 'div' };\n\nexport const paymentList = [\n    { cod: 'Cash', name: 'Efectivo' },\n    { cod: 'Transfer', name: 'Transferencia' },\n    { cod: 'POS', name: 'POS' },\n];\n\nexport default PaymentMethods;\n","import * as L from '../styles';\nimport NumericInput from 'react-number-format';\nimport LabeledInput from 'components/LabeledInput';\n\nconst POS = ({ inputValue, onChange, onDelete, disabled }) => {\n    return (\n        <L.Wrapper ischange={inputValue.isChange}>\n            <L.NameContainer onClick={onDelete}>POS</L.NameContainer>\n            <L.InputContainer>\n                <LabeledInput\n                    value={inputValue.amount || ''}\n                    onValueChange={({ value }) => onChange && onChange(value, 'amount')}\n                    placeholder='Monto'\n                    thousandSeparator='.'\n                    decimalSeparator=','\n                    decimalScale={2}\n                    fixedDecimalScale={true}\n                    isNumericString={true}\n                    disabled={disabled}\n                    as={NumericInput}\n                />\n            </L.InputContainer>\n            <L.CurrencyContainer>Bs</L.CurrencyContainer>\n        </L.Wrapper>\n    );\n};\n\nexport default POS;\n","import * as L from '../styles';\nimport NumericInput from 'react-number-format';\nimport LabeledInput from 'components/LabeledInput';\n\nconst Transfer = ({ inputValue, onChange, onDelete, disabled }) => {\n    return (\n        <L.Wrapper ischange={inputValue.isChange}>\n            <L.NameContainer onClick={onDelete}>Transfer</L.NameContainer>\n            <L.InputContainer>\n                <LabeledInput\n                    value={inputValue.amount || ''}\n                    onValueChange={({ value }) => onChange && onChange(value, 'amount')}\n                    placeholder='Monto'\n                    thousandSeparator='.'\n                    decimalSeparator=','\n                    decimalScale={2}\n                    fixedDecimalScale={true}\n                    isNumericString={true}\n                    disabled={disabled}\n                    autoFocus\n                    as={NumericInput}\n                />\n            </L.InputContainer>\n            <L.CodeContainer>\n                <LabeledInput\n                    value={inputValue.transaction_code}\n                    onValueChange={({ value }) => onChange && onChange(value, 'transaction_code')}\n                    placeholder='COD'\n                    disabled={disabled}\n                    as={NumericInput}\n                />\n            </L.CodeContainer>\n            <L.SelectContainer>\n                <select\n                    onChange={(event) => onChange && onChange(event.target.value, 'bankId')}\n                    value={inputValue.bankId}\n                    disabled={disabled}\n                >\n                    <option value='1'>BDV</option>\n                    <option value='2'>BBVA</option>\n                </select>\n            </L.SelectContainer>\n        </L.Wrapper>\n    );\n};\n\nexport default Transfer;\n","import * as L from '../styles';\nimport NumericInput from 'react-number-format';\nimport LabeledInput from 'components/LabeledInput';\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\n\nconst Cash = ({ inputValue, onChange, onDelete, disabled }) => {\n    const { currencyRates } = useCurrencyRates();\n\n    return (\n        <L.Wrapper ischange={inputValue.isChange}>\n            <L.NameContainer onClick={onDelete}>Cash</L.NameContainer>\n            <L.InputContainer>\n                <LabeledInput\n                    value={inputValue.amount || ''}\n                    onValueChange={({ value }) => onChange && onChange(value, 'amount')}\n                    placeholder={\n                        inputValue.currency && inputValue.currency === 'USD'\n                            ? `Monto - ${\n                                  currencyRates && currencyRates['PAYMENT_VES'] && currencyRates['PAYMENT_VES'].value\n                                      ? ((inputValue.amount || 0) * currencyRates['PAYMENT_VES'].value).toLocaleString()\n                                      : ''\n                              } Bs`\n                            : 'Monto'\n                    }\n                    thousandSeparator='.'\n                    decimalSeparator=','\n                    decimalScale={2}\n                    fixedDecimalScale={true}\n                    isNumericString={true}\n                    disabled={disabled}\n                    autoFocus\n                    as={NumericInput}\n                />\n            </L.InputContainer>\n            <L.SelectContainer>\n                <select value={inputValue.currency} onChange={(event) => onChange(event.target.value, 'currency')} disabled={disabled}>\n                    <option value='VES'>Bs</option>\n                    <option value='USD'>USD</option>\n                </select>\n            </L.SelectContainer>\n        </L.Wrapper>\n    );\n};\n\nexport default Cash;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const PaymentName = styled.div``;\n","import React from 'react';\n\nimport PaymentMethods from 'components/PaymentMethod';\nimport * as L from './styles';\n\nconst PaymentDetails = ({ paymentInfo = [] }) => {\n    return (\n        <L.Wrapper style={{ gap: '1px', marginTop: '0' }}>\n            {paymentInfo.map((payment) => {\n                return React.createElement(PaymentMethods[payment.payment_method_name || payment.name], {\n                    key: payment.id,\n                    disabled: true,\n                    inputValue: {\n                        amount: payment.amount,\n                        transaction_code: payment.transaction_code,\n                        bankId: payment.bankId,\n                        currency: payment.currency,\n                        isChange: payment.isChange || payment.amount < 0,\n                    },\n                });\n            })}\n        </L.Wrapper>\n    );\n};\n\nexport default PaymentDetails;\n","import styled from 'styled-components';\n\nexport const PaymentTitleContainer = styled.div`\n    flex-direction: row;\n    flex: 0 0 30px;\n    justify-content: space-between;\n`;\n\nexport const AddPaymentContainer = styled.div`\n    flex-direction: row;\n    gap: 5px;\n`;\n","import React from 'react';\n\nimport * as L from './styles';\nimport { colors } from 'styles/theme';\n\nimport PaymentMethods from 'components/PaymentMethod';\nimport Button from 'components/Button';\n\nconst PaymentsForm = ({\n    onPaymentInfoChange,\n    onPaymentAdd,\n    onPaymentDelete,\n    selectedPaymentMethod,\n    onPaymentMethodSelect,\n    paymentInfo,\n    paymentMethods,\n    showTitle = true,\n}) => {\n    return (\n        <>\n            <L.PaymentTitleContainer>\n                <h3>{showTitle ? 'Datos de pago' : ''}</h3>\n                <L.AddPaymentContainer>\n                    <PaymentMethods.Selector\n                        paymentList={paymentMethods}\n                        onChange={(event) =>\n                            onPaymentMethodSelect({\n                                id: event.target.value,\n                                name: paymentMethods.find((p) => p.id === Number(event.target.value)).name,\n                            })\n                        }\n                    ></PaymentMethods.Selector>\n                    <Button onClick={() => onPaymentAdd(selectedPaymentMethod)} background={colors.primary} color='white'>\n                        +\n                    </Button>\n                    <Button onClick={() => onPaymentAdd(selectedPaymentMethod, true)} background={colors.brown} color='white'>\n                        +\n                    </Button>\n                </L.AddPaymentContainer>\n            </L.PaymentTitleContainer>\n            {paymentInfo &&\n                paymentInfo.length > 0 &&\n                paymentInfo.map((paymentInfo) => {\n                    return React.createElement(PaymentMethods[paymentInfo.name], {\n                        key: paymentInfo.id,\n                        onChange: (value, key) => onPaymentInfoChange(value, key, paymentInfo.id),\n                        onDelete: () => onPaymentDelete(paymentInfo.id),\n                        inputValue: {\n                            amount: paymentInfo.amount,\n                            transaction_code: paymentInfo.transaction_code,\n                            bankId: paymentInfo.bankId,\n                            currency: paymentInfo.currency,\n                            isChange: paymentInfo.isChange,\n                        },\n                    });\n                })}\n        </>\n    );\n};\n\nexport default PaymentsForm;\n","import { TotalContainer } from 'pages/SalesControl/layout.styles';\nimport React from 'react';\n\nconst PaymentTotal = ({ paymentTotal = {}, twoRowsOnly }) => {\n    return (\n        <TotalContainer style={{ borderLeft: '1px solid black' }}>\n            <legend>Total pago</legend>\n            {Object.keys(paymentTotal).map((key, index) => {\n                const total = paymentTotal[key];\n                const green = key === 'Total' ? { style: { color: 'green' } } : {};\n\n                if (twoRowsOnly && Object.keys(paymentTotal).length > 2) {\n                    return (\n                        <div key={index} style={{ flexDirection: 'row' }}>\n                            <label>{key}: </label>\n                            <label {...green}>{total.toLocaleString()}</label>\n                        </div>\n                    );\n                } else {\n                    return (\n                        <React.Fragment key={index}>\n                            <label>{key}: </label>\n                            <label {...green}>{total.toLocaleString()}</label>\n                        </React.Fragment>\n                    );\n                }\n            })}\n        </TotalContainer>\n    );\n};\n\nexport default PaymentTotal;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/payments';\n\nexport const create_payment_for_sale = async (paymentInfo, saleId) => {\n    const response = await axios.post(`${BASE_URL}/sale/${saleId}`, { paymentInfo, saleId }).catch((error) => error.response);\n    return response.data;\n};\n","import { useState, useMemo } from 'react';\n\nexport const useConfirm = () => {\n    const INITIAL_CONFIRM_STATE = useMemo(\n        () => ({\n            message: null,\n            actions: [],\n            state: null,\n            callback: null,\n            show: false,\n        }),\n        []\n    );\n\n    const [confirmState, setConfirmState] = useState(INITIAL_CONFIRM_STATE);\n\n    return { confirmState, setConfirmState, INITIAL_CONFIRM_STATE };\n};\n","import axios from 'axios';\n\nconst BASE_URL = '/api/payment-methods';\n\nexport const getPaymentMethods = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createPaymentMethod = async (paymentMethodData) => {\n    const response = await axios.post(BASE_URL, paymentMethodData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updatePaymentMethod = async (id, paymentMethodData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, paymentMethodData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deletePaymentMethod = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","export default function mapPaymentMethods(paymentMethodsArray = []) {\n    const paymentMethods = paymentMethodsArray.map((paymentMethod) => {\n        let display_name = paymentMethod.name;\n\n        if (paymentMethod.name === 'Cash') {\n            display_name = 'Efectivo';\n        } else if (paymentMethod.name === 'Transfer') {\n            display_name = 'Transferencia';\n        }\n\n        return {\n            ...paymentMethod,\n            display_name,\n        };\n    });\n    paymentMethods.sort();\n\n    return paymentMethods;\n}\n","import { useState, useEffect } from 'react';\nimport { getPaymentMethods } from 'api/payment_methods';\nimport mapPaymentMethods from 'utils/mapPaymentMethods';\n\nexport const usePaymentMethod = ({ loadOnMount = false }) => {\n    const [paymentMethodsLoading, setPaymentMethodsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [paymentMethods, setPaymentMethods] = useState([]);\n    const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\n\n    useEffect(() => {\n        if (loadOnMount) loadPaymentMethods();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loadOnMount]);\n\n    const loadPaymentMethods = async () => {\n        if (!paymentMethodsLoading) {\n            setPaymentMethodsLoading(true);\n            const response = await getPaymentMethods({});\n            if (response.error) {\n                setError(response.error);\n            } else {\n                const paymentMethods = mapPaymentMethods(response.records);\n                setPaymentMethods(paymentMethods);\n                if (paymentMethods.length) setSelectedPaymentMethod({ id: paymentMethods[0].id, name: paymentMethods[0].name });\n            }\n            setPaymentMethodsLoading(false);\n        }\n    };\n\n    return {\n        paymentMethodsLoading,\n        setPaymentMethodsLoading,\n        paymentMethods,\n        selectedPaymentMethod,\n        setSelectedPaymentMethod,\n        loadPaymentMethods,\n        error,\n    };\n};\n","import { useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value) => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n    return [storedValue, setValue];\n}\n","export default function groupBy(array, key) {\n    return array.reduce((acc, obj) => {\n        const property = obj[key];\n        acc[property] = acc[property] || [];\n        acc[property].push(obj);\n        return acc;\n    }, {});\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport { usePaymentMethod } from './usePaymentMethod';\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n\nimport groupBy from 'utils/arrayGroup';\n\nexport const usePayment = (defaultPayment, persistToLocalStorage = false) => {\n    const { currencyRates } = useCurrencyRates();\n\n    const { paymentMethods, selectedPaymentMethod, setSelectedPaymentMethod } = usePaymentMethod({ loadOnMount: true });\n\n    const [paymentTotal, setPaymentTotal] = useState({});\n    const [persistedPaymentTotal, setPersistedPaymentTotal] = useLocalStorage('paymentTotal', {});\n\n    const [persistedPaymentInfo, setPersistedPaymentInfo] = useLocalStorage('paymentInfo', []);\n    const [paymentInfo, setPaymentInfo] = useState([]);\n\n    const summarizePaymentInfo = useCallback(\n        (paymentInfo) => {\n            if (currencyRates) {\n                const paymentsGroupedByName = groupBy(paymentInfo, 'name');\n\n                for (let key of Object.keys(paymentsGroupedByName)) {\n                    const paymentsInfo = paymentsGroupedByName[key];\n\n                    paymentsGroupedByName[key] = paymentsInfo.reduce((accumulator, payment) => {\n                        if ((payment.currency && payment.currency === 'VES') || !payment.currency) {\n                            accumulator += payment.isChange ? -Number(payment.amount) || 0 : Number(payment.amount) || 0;\n                        } else if (payment.currency && payment.currency === 'USD') {\n                            accumulator +=\n                                (payment.isChange ? -payment.amount || 0 : payment.amount || 0) * (currencyRates['PAYMENT_VES'].value || 0);\n                        }\n                        return accumulator;\n                    }, 0);\n                }\n                const totalPayment = Object.keys(paymentsGroupedByName).reduce((accumulator, key) => {\n                    return accumulator + paymentsGroupedByName[key];\n                }, 0);\n\n                paymentsGroupedByName['Total'] = totalPayment;\n                return paymentsGroupedByName;\n            }\n        },\n        [currencyRates]\n    );\n\n    useEffect(() => {\n        if (defaultPayment) {\n            if (paymentMethods.length > 0) {\n                const addDefaultPayment = {\n                    id: paymentInfo.length + new Date().getTime(),\n                    payment_method_id: paymentMethods.find((p) => p.name === defaultPayment.name).id,\n                    name: defaultPayment.name,\n                    amount: null,\n                    currency: defaultPayment.currency,\n                    isChange: false,\n                };\n                if (persistToLocalStorage) {\n                    if (persistedPaymentInfo.length === 0) {\n                        setPersistedPaymentInfo([addDefaultPayment]);\n                    }\n                } else {\n                    if (paymentInfo.length === 0) {\n                        setPaymentInfo([addDefaultPayment]);\n                    }\n                }\n            }\n        }\n    }, [defaultPayment, paymentInfo.length, paymentMethods, persistToLocalStorage, persistedPaymentInfo, setPersistedPaymentInfo]);\n\n    useEffect(() => {\n        if (persistToLocalStorage) {\n            const paymentTotals = summarizePaymentInfo(persistedPaymentInfo);\n            setPersistedPaymentTotal(paymentTotals);\n        } else {\n            const paymentTotals = summarizePaymentInfo(paymentInfo);\n            setPaymentTotal(paymentTotals);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [paymentInfo, persistToLocalStorage, persistedPaymentInfo, summarizePaymentInfo]);\n\n    const onPaymentInfoChange = (value, key, id) => {\n        let actual_payment_info = persistToLocalStorage ? persistedPaymentInfo : paymentInfo;\n        let set_actual_payment_info = persistToLocalStorage ? setPersistedPaymentInfo : setPaymentInfo;\n\n        const newPaymentInfo = actual_payment_info.map((info) => {\n            if (info.id === id) {\n                info[key] = value;\n            }\n            return info;\n        });\n        set_actual_payment_info(newPaymentInfo);\n    };\n\n    const onPaymentAdd = (paymentMethod = { id: null, name: null }, isChange = false) => {\n        let actual_payment_info = persistToLocalStorage ? persistedPaymentInfo : paymentInfo;\n        let set_actual_payment_info = persistToLocalStorage ? setPersistedPaymentInfo : setPaymentInfo;\n\n        const id = actual_payment_info.length + new Date().getTime();\n        let newPaymentInfo = [];\n\n        if (paymentMethod.name === 'POS') {\n            newPaymentInfo = [\n                ...actual_payment_info,\n                { id, payment_method_id: Number(paymentMethod.id), name: paymentMethod.name, amount: null, currency: 'VES', isChange },\n            ];\n        } else if (paymentMethod.name === 'Cash') {\n            newPaymentInfo = [\n                ...actual_payment_info,\n                { id, payment_method_id: paymentMethod.id, name: paymentMethod.name, amount: null, currency: 'VES', isChange },\n            ];\n        } else if (paymentMethod.name === 'Transfer') {\n            newPaymentInfo = [\n                ...actual_payment_info,\n                {\n                    id,\n                    payment_method_id: paymentMethod.id,\n                    name: paymentMethod.name,\n                    amount: null,\n                    currency: 'VES',\n                    transaction_code: null,\n                    bankId: 1,\n                    isChange,\n                },\n            ];\n        } else if (paymentMethod.name === 'Paypal') {\n            newPaymentInfo = [\n                ...actual_payment_info,\n                { id, payment_method_id: paymentMethod.id, name: paymentMethod.name, amount: null, currency: 'USD', code: null, isChange },\n            ];\n        }\n        set_actual_payment_info(newPaymentInfo);\n    };\n\n    const onPaymentDelete = (id) => {\n        let actual_payment_info = persistToLocalStorage ? persistedPaymentInfo : paymentInfo;\n        let set_actual_payment_info = persistToLocalStorage ? setPersistedPaymentInfo : setPaymentInfo;\n\n        const newPaymentInfo = actual_payment_info.filter((info) => info.id !== id);\n        set_actual_payment_info(newPaymentInfo);\n    };\n\n    return {\n        paymentTotal,\n        setPaymentTotal,\n        persistedPaymentTotal,\n        setPersistedPaymentTotal,\n        paymentInfo,\n        setPaymentInfo,\n        persistedPaymentInfo,\n        setPersistedPaymentInfo,\n        onPaymentInfoChange,\n        onPaymentAdd,\n        onPaymentDelete,\n        paymentMethods,\n        selectedPaymentMethod,\n        setSelectedPaymentMethod,\n    };\n};\n","import Modal from 'components/Modal';\nimport { FormContainer, ConfirmContainer } from 'components/CommonLayout/main.layout';\nimport {\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    ButtonContainer,\n    ErrorAlert,\n} from 'components/CommonLayout/form.layout';\nimport Button from 'components/Button';\nimport { X } from 'phosphor-react';\nimport PaymentsForm from 'components/PaymentsForm';\nimport PaymentTotal from 'components/SaleDetails/TotalDetails/Payment';\nimport ConfirmAlert from 'components/ConfirmAlert';\n\nimport { colors } from 'styles/theme';\n\nimport { create_payment_for_sale } from 'api/payments';\nimport { useConfirm } from 'hooks/useConfirm';\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\nimport { usePayment } from 'hooks/usePayment';\nimport { useFormError } from 'hooks/formError';\n\nconst PaymentFormModal = ({ show, handleClose, backdrop, onSubmit, sale }) => {\n    const { currencyRates } = useCurrencyRates(false);\n    const { confirmState, setConfirmState } = useConfirm();\n    const { errors, handleErrors } = useFormError();\n\n    const {\n        paymentTotal,\n        paymentInfo,\n        onPaymentInfoChange,\n        onPaymentAdd,\n        onPaymentDelete,\n        paymentMethods,\n        selectedPaymentMethod,\n        setSelectedPaymentMethod,\n    } = usePayment({ name: 'POS', currency: 'VES' });\n\n    const submitPayment = async () => {\n        const response = await create_payment_for_sale(paymentInfo, sale.id);\n        if (response.error) {\n            handleErrors(response.error);\n        } else {\n            onSubmit();\n        }\n    };\n\n    const paymentSubmitHandler = async () => {\n        const total_payment = paymentTotal['Total'];\n        const debt_total = Number((sale.debt.current_amount * currencyRates['PAYMENT_VES'].value).toFixed(2));\n\n        if (total_payment > debt_total) {\n            setConfirmState({\n                ...confirmState,\n                message: 'El monto a pagar es MAYOR al de la deuda. ¿Desea continuar?',\n                callback: submitPayment,\n            });\n        } else {\n            submitPayment();\n        }\n    };\n\n    return (\n        show && (\n            <>\n                <Modal show={show} handleClose={handleClose} backdrop={backdrop} zindex={4}>\n                    <FormContainer width='500px'>\n                        <HeaderContainer>\n                            <CloseButtonContainer>\n                                <Button onClick={handleClose}>\n                                    <X />\n                                </Button>\n                            </CloseButtonContainer>\n                            <TitleContainer>Formulario de pago</TitleContainer>\n                        </HeaderContainer>\n                        <BodyContainer overflow={1}>\n                            <PaymentsForm\n                                showTitle={false}\n                                onPaymentInfoChange={onPaymentInfoChange}\n                                onPaymentAdd={onPaymentAdd}\n                                onPaymentDelete={onPaymentDelete}\n                                selectedPaymentMethod={selectedPaymentMethod}\n                                onPaymentMethodSelect={setSelectedPaymentMethod}\n                                paymentInfo={paymentInfo}\n                                paymentMethods={paymentMethods}\n                            />\n                            <div style={{ flexDirection: 'row', justifyContent: 'end' }}>\n                                <PaymentTotal paymentTotal={paymentTotal} twoRowsOnly />\n                            </div>\n                        </BodyContainer>\n                        <FooterWrapper>\n                            <FooterContainer>\n                                {errors && errors['paymentInfo'] && <ErrorAlert>{errors['paymentInfo']}</ErrorAlert>}\n                                <ButtonContainer color={colors.primary}>\n                                    <Button onClick={paymentSubmitHandler} type='submit'>\n                                        Enviar\n                                    </Button>\n                                </ButtonContainer>\n                                <ButtonContainer color='red'>\n                                    <Button>Cancelar</Button>\n                                </ButtonContainer>\n                            </FooterContainer>\n                        </FooterWrapper>\n                    </FormContainer>\n                </Modal>\n                {confirmState.show && (\n                    <Modal backdrop show={confirmState.show} handleClose={() => setConfirmState({ ...confirmState, show: false })}>\n                        <ConfirmContainer>\n                            <ConfirmAlert\n                                additionalActions={confirmState.actions}\n                                message={confirmState.message}\n                                handleClose={() => setConfirmState({ ...confirmState, show: false })}\n                                callback={confirmState.callback}\n                            />\n                        </ConfirmContainer>\n                    </Modal>\n                )}\n            </>\n        )\n    );\n};\n\nexport default PaymentFormModal;\n","import { TotalContainer } from 'pages/SalesControl/layout.styles';\n\nexport const InvoiceTotal = ({ subtotal = '', debtTotal = '', invoiceTotal = '' }) => {\n    return (\n        <TotalContainer>\n            <legend>Total factura</legend>\n            <>\n                <label>Subtotal: </label>\n                <label>{subtotal.toLocaleString()}</label>\n            </>\n            {debtTotal > 0 && (\n                <>\n                    <label>Deuda: </label>\n                    <label>{debtTotal.toLocaleString()}</label>\n                </>\n            )}\n            <>\n                <label>Total: </label>\n                <label style={{ color: 'green' }}>{invoiceTotal.toLocaleString()}</label>\n            </>\n        </TotalContainer>\n    );\n};\n\nexport default InvoiceTotal;\n","import { useState, useEffect } from 'react';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n\nexport const useSaleProducts = (persistToLocalStorage = false) => {\n    const [invoiceProducts, setInvoiceProducts] = useState([]);\n    const [persistedInvoiceProducts, setPersistedInvoiceProducts] = useLocalStorage('invoiceProducts', []);\n\n    const [persistedSubtotal, setPersistedSubtotal] = useLocalStorage('subtotal', 0);\n    const [subtotal, setSubtotal] = useState(0);\n\n    const [persistedSaleTotal, setPersistedSaleTotal] = useLocalStorage('saleTotal', 0);\n    const [saleTotal, setSaleTotal] = useState(0);\n\n    useEffect(() => {\n        const currentProducts = persistToLocalStorage ? persistedInvoiceProducts : invoiceProducts;\n\n        const subtotal = currentProducts.reduce(\n            (accumulator, current) => Number((accumulator + (current.converted_price['PRICE_VES'] || 0) * current.quantity).toFixed(2)),\n            0\n        );\n        if (persistToLocalStorage) {\n            setPersistedSubtotal(subtotal);\n            setPersistedSaleTotal(subtotal);\n        } else {\n            setSubtotal(subtotal);\n            setSaleTotal(subtotal);\n        }\n    }, [invoiceProducts, persistToLocalStorage, persistedInvoiceProducts, setPersistedSaleTotal, setPersistedSubtotal]);\n\n    return {\n        invoiceProducts,\n        setInvoiceProducts,\n        persistedInvoiceProducts,\n        setPersistedInvoiceProducts,\n        subtotal,\n        setSubtotal,\n        persistedSubtotal,\n        setPersistedSubtotal,\n        saleTotal,\n        setSaleTotal,\n        persistedSaleTotal,\n        setPersistedSaleTotal,\n    };\n};\n","import axios from 'axios';\n\nconst BASE_URL = '/api/sales';\n\nexport const getSales = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const getSaleById = async (id) => {\n    const response = await axios.get(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createSale = async (saleData) => {\n    const response = await axios.post(BASE_URL, saleData).catch((error) => error.response);\n    return response;\n};\n\nexport const updateSale = async (id, saleData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, saleData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteSale = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import { useEffect, useState } from 'react';\n\nimport { FormContainer } from 'components/CommonLayout/main.layout';\nimport {\n    HeaderContainer,\n    BodyContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    FooterWrapper,\n    FooterContainer,\n    ButtonContainer,\n    LoadingDiv,\n} from 'components/CommonLayout/form.layout';\nimport { colors } from 'styles/theme';\nimport * as L from './styles';\nimport Modal from 'components/Modal';\nimport Button from 'components/Button';\nimport SalesControlTable from 'components/ModuleTables/SalesControlTable';\nimport ClientDetails from 'components/SaleDetails/ClientDetails';\nimport PaymentDetails from 'components/SaleDetails/PaymentDetails';\nimport PaymentFormModal from '../PaymentFormModal';\nimport { ErrorAlert } from 'components/CommonLayout/form.layout';\nimport Notification from 'components/Notification';\n\nimport { X, BookBookmark, XCircle } from 'phosphor-react';\n\nimport InvoiceTotal from 'components/SaleDetails/TotalDetails/Invoice';\nimport PaymentTotal from 'components/SaleDetails/TotalDetails/Payment';\n\nimport { usePayment } from 'hooks/usePayment';\nimport { useSaleProducts } from 'hooks/useSaleProducts';\nimport { getSaleById } from 'api/sales';\nimport { useFormError } from 'hooks/formError';\nimport { useNotification } from 'hooks/notification';\n\nexport const SaleDetailsModal = ({ show, details, onClose, onPayment = () => {} }) => {\n    const { paymentInfo, setPaymentInfo, paymentTotal } = usePayment();\n    const { invoiceProducts, setInvoiceProducts, subtotal, saleTotal } = useSaleProducts();\n    const [showPaymentModal, setShowPaymentModal] = useState(false);\n    const [saleDetails, setSaleDetails] = useState({});\n    const { errors, handleErrors } = useFormError();\n    const [loading, setLoading] = useState(false);\n    const { notification, showNotification } = useNotification(null);\n\n    useEffect(() => {\n        if (details) {\n            setSaleDetails(details);\n            setPaymentInfo(details.payment || []);\n            setInvoiceProducts(details.products || []);\n        }\n    }, [details]);\n\n    const onPaymentSubmit = async () => {\n        showNotification('success', 'El pago se ha realizado con éxito');\n        setShowPaymentModal(false);\n        setLoading(true);\n        const sale = await getSaleById(saleDetails.id);\n        console.log('sale details', sale);\n        if (sale.error) {\n            handleErrors(sale.error);\n        } else {\n            setSaleDetails(sale[0]);\n            setPaymentInfo(sale[0].payment);\n            setInvoiceProducts(sale[0].products);\n            onPayment();\n        }\n        setLoading(false);\n    };\n\n    console.log(saleDetails);\n    return (\n        <>\n            <Modal backdrop show={show} handleClose={onClose}>\n                <FormContainer width='800px'>\n                    <HeaderContainer>\n                        <CloseButtonContainer>\n                            <Button onClick={onClose}>\n                                <X />\n                            </Button>\n                        </CloseButtonContainer>\n                        <TitleContainer>{`Detalles de la venta`}</TitleContainer>\n                    </HeaderContainer>\n                    <BodyContainer>\n                        {loading ? (\n                            <LoadingDiv>Cargando...</LoadingDiv>\n                        ) : (\n                            <>\n                                <L.MetadataContainer>\n                                    <L.ClientContainer>\n                                        <legend>Cliente</legend>\n                                        <ClientDetails\n                                            name={saleDetails.client && saleDetails.client.name}\n                                            cedula={saleDetails.client && saleDetails.client.cedula}\n                                            phoneNumber={saleDetails.client && saleDetails.client.phoneNumber}\n                                        />\n                                    </L.ClientContainer>\n                                    <L.PaymentsContainer>\n                                        <legend>Pagos</legend>\n                                        <PaymentDetails paymentInfo={paymentInfo} />\n                                    </L.PaymentsContainer>\n                                </L.MetadataContainer>\n                                <L.TableContainer>\n                                    <SalesControlTable products={invoiceProducts} />\n                                </L.TableContainer>\n                                <L.TotalContainer>\n                                    {saleDetails.debt && (\n                                        <L.DebtInfoTotal>\n                                            <legend>Deuda</legend>\n                                            <L.DebtLabel>\n                                                <label>Fecha:</label>\n                                            </L.DebtLabel>\n                                            <L.DebtValue>\n                                                <strong>\n                                                    {saleDetails &&\n                                                        saleDetails.debt &&\n                                                        new Date(saleDetails.debt.createdAt).toLocaleString()}\n                                                </strong>\n                                            </L.DebtValue>\n                                            <L.DebtLabel>\n                                                <label>Original:</label>\n                                            </L.DebtLabel>\n                                            <L.DebtValue>\n                                                <strong>\n                                                    ${saleDetails && saleDetails.debt && saleDetails.debt.original_amount.toFixed(2)}\n                                                </strong>\n                                            </L.DebtValue>\n                                            <L.DebtLabel>\n                                                <label>Actual:</label>\n                                            </L.DebtLabel>\n                                            <L.DebtValue>\n                                                <strong style={{ color: 'green' }}>\n                                                    ${saleDetails && saleDetails.debt && saleDetails.debt.current_amount.toFixed(2)}\n                                                </strong>\n                                                -\n                                                <strong>\n                                                    {saleDetails &&\n                                                        saleDetails.debt &&\n                                                        saleDetails.debt.converted_amount['PAYMENT_VES'].toFixed(2) + ' Bs'}\n                                                </strong>\n                                            </L.DebtValue>\n                                            <L.DebtLabel>\n                                                <label>Estado:</label>\n                                            </L.DebtLabel>\n                                            <L.DebtValue>\n                                                <strong>\n                                                    {saleDetails && saleDetails.debt && saleDetails.debt.paid ? (\n                                                        <span style={{ color: 'green' }}>Pagado</span>\n                                                    ) : (\n                                                        <span style={{ color: 'red' }}>No pagado</span>\n                                                    )}\n                                                </strong>\n                                            </L.DebtValue>\n                                        </L.DebtInfoTotal>\n                                    )}\n                                    <PaymentTotal twoRowsOnly paymentTotal={paymentTotal} />\n                                    <InvoiceTotal subtotal={subtotal} invoiceTotal={saleTotal} />\n                                </L.TotalContainer>\n                            </>\n                        )}\n                    </BodyContainer>\n                    <FooterWrapper>\n                        {errors && errors['undefined'] && <ErrorAlert>{errors['undefined']}</ErrorAlert>}\n                        <FooterContainer>\n                            <ButtonContainer color={colors.primary}>\n                                {saleDetails.debt && saleDetails.debt.paid === 0 && (\n                                    <Button onClick={() => setShowPaymentModal(true)} type='submit'>\n                                        <BookBookmark size={24} />\n                                        Pagar\n                                    </Button>\n                                )}\n                            </ButtonContainer>\n                            <ButtonContainer color='red'>\n                                <Button onClick={onClose}>\n                                    <XCircle size={24} />\n                                    Cancelar\n                                </Button>\n                            </ButtonContainer>\n                        </FooterContainer>\n                    </FooterWrapper>\n                </FormContainer>\n            </Modal>\n            {showPaymentModal && (\n                <PaymentFormModal\n                    show={showPaymentModal}\n                    backdrop\n                    handleClose={() => setShowPaymentModal(false)}\n                    onSubmit={onPaymentSubmit}\n                    sale={saleDetails}\n                />\n            )}\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </>\n    );\n};\n\nexport default SaleDetailsModal;\n","import { useState } from 'react';\nimport { FormContainer } from 'components/CommonLayout/main.layout';\nimport { HeaderContainer, BodyContainer, CloseButtonContainer, TitleContainer } from 'components/CommonLayout/form.layout';\nimport * as L from './styles';\nimport Modal from 'components/Modal';\nimport DebtSelectionTable from 'components/ModuleTables/DebtSelectionTable';\nimport Button from 'components/Button';\nimport { X } from 'phosphor-react';\nimport SaleDetailsModal from 'components/ModuleModals/SaleDetailsModal';\n\nexport const DebtsModal = ({ show, selectedDebts, client, onClose, onDebtSelect }) => {\n    const [showDebtDetails, setShowDebtDetails] = useState(false);\n    const [debtDetails, setDebtDetails] = useState({});\n\n    return (\n        <>\n            <Modal backdrop show={showDebtDetails ? false : show} handleClose={onClose}>\n                <FormContainer width='500px'>\n                    <HeaderContainer>\n                        <CloseButtonContainer>\n                            <Button onClick={onClose}>\n                                <X />\n                            </Button>\n                        </CloseButtonContainer>\n                        <TitleContainer>{`Deudas de ${client.name} - ${Number(client.cedula).toLocaleString('es-VE')}`}</TitleContainer>\n                    </HeaderContainer>\n                    <BodyContainer overflow={1}>\n                        {client && client.sale && client.sale.length > 0 ? (\n                            <L.Wrapper>\n                                <L.TableContainer>\n                                    <DebtSelectionTable\n                                        onShowDetailsClick={(debtDetails) => {\n                                            setShowDebtDetails(true);\n                                            setDebtDetails(debtDetails);\n                                        }}\n                                        data={client.sale}\n                                        selectedRows={selectedDebts}\n                                        onDebtSelect={onDebtSelect}\n                                    />\n                                </L.TableContainer>\n                            </L.Wrapper>\n                        ) : (\n                            'El cliente no posee deudas'\n                        )}\n                    </BodyContainer>\n                </FormContainer>\n            </Modal>\n            <SaleDetailsModal show={showDebtDetails} onClose={() => setShowDebtDetails(false)} details={debtDetails} />\n        </>\n    );\n};\n\nexport default DebtsModal;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport * as L from './layout.styles';\nimport { colors } from 'styles/theme';\n\nimport { InlineContainer, ButtonContainer } from 'components/CommonLayout/form.layout';\nimport { FormContainer, ConfirmContainer, Wrapper, SeparatorWrapper, ContentContainer } from 'components/CommonLayout/main.layout';\n\nimport WidgetBox from 'components/WidgetBox';\nimport ClientSearch from 'components/ClientSearch';\nimport LabeledInput from 'components/LabeledInput';\nimport SalesControlTable from 'components/ModuleTables/SalesControlTable';\nimport SaleProductForm from 'components/SaleProductForm';\nimport DebtsModal from 'components/ModuleModals/DebtsModal';\nimport Button from 'components/Button';\nimport Notification from 'components/Notification';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport NumberInput from 'react-number-format';\nimport Modal from 'components/Modal';\nimport ClientForm from 'pages/Clients/CRUDForm';\nimport PaymentsForm from 'components/PaymentsForm';\nimport InvoiceTotal from 'components/SaleDetails/TotalDetails/Invoice';\nimport PaymentTotal from 'components/SaleDetails/TotalDetails/Payment';\n\nimport { useSale } from 'hooks/useSale';\n\nconst SalesControl = () => {\n    const {\n        loading,\n        paymentMethods,\n        selectedPaymentMethod,\n        setSelectedPaymentMethod,\n        selectedClient,\n        selectedProduct,\n        selectedDebts,\n        invoiceProducts,\n        subtotal,\n        saleTotal,\n        debtTotal,\n        paymentTotal,\n        paymentInfo,\n        onProductSubmit,\n        onProductSelect,\n        onProductDelete,\n        onClientSelect,\n        onPaymentAdd,\n        onPaymentInfoChange,\n        onPaymentDelete,\n        onSaleSubmit,\n        onSaveDebtHandler,\n        notification,\n        showNotification,\n        resetFields,\n        confirmState,\n        onConfirmClose,\n    } = useSale({\n        onSubmitSuccess: () => {\n            productSearchRef.current.focus();\n        },\n    });\n    console.log(paymentInfo);\n\n    const [showDebts, setShowDebts] = useState(false);\n    const [clientSearchInput, setClientSearchInput] = useState('');\n    const [showClientForm, setShowClientForm] = useState(false);\n\n    const productSearchRef = useRef(null);\n    const clientSearchRef = useRef(null);\n    const clientCedulaRef = useRef(null);\n    const clientPhoneNumberRef = useRef(null);\n\n    useEffect(() => {\n        const listener = (event) => {\n            if (event.ctrlKey && event.keyCode === 13) {\n                onSaleSubmit(event);\n            }\n        };\n        document.body.addEventListener('keyup', listener);\n\n        return function cleanUp() {\n            document.body.removeEventListener('keyup', listener);\n        };\n    });\n\n    return (\n        <Wrapper>\n            <SeparatorWrapper>\n                <ContentContainer>\n                    <L.MainContainer>\n                        <L.ActionsContainer>\n                            <ButtonContainer color={colors.primary}>\n                                <Button loading={loading} onClick={onSaleSubmit}>\n                                    Enviar\n                                </Button>\n                            </ButtonContainer>\n                            <ButtonContainer color={colors.secondary}>\n                                <Button loading={loading} onClick={onSaveDebtHandler}>\n                                    Guardar Deuda\n                                </Button>\n                            </ButtonContainer>\n                            <ButtonContainer color='red'>\n                                <Button onClick={resetFields}>Reset</Button>\n                            </ButtonContainer>\n                        </L.ActionsContainer>\n                        <L.MetadataContainer>\n                            <L.ClientContainer>\n                                <h3>Datos del cliente</h3>\n                                <ClientSearch\n                                    innerRef={clientSearchRef}\n                                    value={selectedClient}\n                                    onSelect={onClientSelect}\n                                    onCreate={(input) => {\n                                        setShowClientForm(true);\n                                        setClientSearchInput(input);\n                                    }}\n                                />\n                                <InlineContainer>\n                                    <L.ClientNameContainer>\n                                        <LabeledInput\n                                            value={selectedClient.cedula || ''}\n                                            innerRef={clientCedulaRef}\n                                            placeholder='Cédula'\n                                            thousandSeparator='.'\n                                            decimalSeparator=','\n                                            disabled\n                                            errorborder={selectedClient && selectedClient.sale && selectedClient.sale.length > 0}\n                                            as={NumberInput}\n                                        />\n                                    </L.ClientNameContainer>\n                                    <L.ClientPhoneNumberContainer>\n                                        <LabeledInput\n                                            value={selectedClient.phoneNumber || ''}\n                                            innerRef={clientPhoneNumberRef}\n                                            placeholder='Teléfono'\n                                            disabled\n                                            format='( #### ) - ### - ####'\n                                            errorborder={selectedClient && selectedClient.sale && selectedClient.sale.length > 0}\n                                            as={NumberInput}\n                                        />\n                                    </L.ClientPhoneNumberContainer>\n                                </InlineContainer>\n                                {selectedClient && selectedClient.sale && selectedClient.sale.length > 0 && (\n                                    <div>\n                                        <Button onClick={() => setShowDebts(true)} background='red' color='white'>\n                                            Ver Deudas\n                                        </Button>\n                                    </div>\n                                )}\n                            </L.ClientContainer>\n                            <L.PaymentsContainer>\n                                <PaymentsForm\n                                    paymentInfo={paymentInfo}\n                                    paymentMethods={paymentMethods || []}\n                                    selectedPaymentMethod={selectedPaymentMethod}\n                                    onPaymentInfoChange={onPaymentInfoChange}\n                                    onPaymentAdd={onPaymentAdd}\n                                    onPaymentDelete={onPaymentDelete}\n                                    onPaymentMethodSelect={setSelectedPaymentMethod}\n                                />\n                            </L.PaymentsContainer>\n                        </L.MetadataContainer>\n                        <L.OrderDetailsContainer>\n                            <L.InvoiceFormContainer>\n                                <L.ProductFormContainer>\n                                    <SaleProductForm\n                                        productToEdit={selectedProduct}\n                                        productSearchRef={productSearchRef}\n                                        onSubmit={onProductSubmit}\n                                    />\n                                </L.ProductFormContainer>\n                                <L.TableContainer>\n                                    <SalesControlTable\n                                        onProductSelect={onProductSelect}\n                                        selectedRows={selectedProduct}\n                                        products={invoiceProducts}\n                                        onDeleteRow={(product) => {\n                                            onProductDelete(product);\n                                            productSearchRef.current.focus();\n                                        }}\n                                        maxHeight='2048px'\n                                    />\n                                </L.TableContainer>\n                                <L.FooterContainer>\n                                    <L.InvoiceTotalContainer>\n                                        <InvoiceTotal subtotal={subtotal} debtTotal={debtTotal} invoiceTotal={saleTotal} />\n                                        <PaymentTotal twoRowsOnly paymentTotal={paymentTotal} />\n                                    </L.InvoiceTotalContainer>\n                                </L.FooterContainer>\n                            </L.InvoiceFormContainer>\n                        </L.OrderDetailsContainer>\n                    </L.MainContainer>\n                </ContentContainer>\n                <WidgetBox onClose={() => {}}></WidgetBox>\n            </SeparatorWrapper>\n            <DebtsModal\n                show={showDebts}\n                client={selectedClient}\n                onClose={() => setShowDebts(false)}\n                selectedDebts={selectedDebts}\n                //onDebtSelect={onDebtSelect}\n            />\n            <Modal backdrop show={confirmState.show} handleClose={onConfirmClose}>\n                <ConfirmContainer>\n                    <ConfirmAlert\n                        additionalActions={confirmState.actions}\n                        message={confirmState.message}\n                        handleClose={onConfirmClose}\n                        callback={confirmState.callback}\n                    />\n                </ConfirmContainer>\n            </Modal>\n            <Modal backdrop show={showClientForm} handleClose={onConfirmClose}>\n                <FormContainer>\n                    <ClientForm\n                        onSubmit={(successMessage, newClient) => {\n                            showNotification('success', successMessage);\n                            setShowClientForm(false);\n                            clientSearchRef.current.focus();\n                        }}\n                        action='create'\n                        handleClose={() => setShowClientForm(false)}\n                        client={isNaN(Number(clientSearchInput)) ? { name: clientSearchInput } : { cedula: clientSearchInput }}\n                        autoFocus={isNaN(Number(clientSearchInput)) ? 'cedula' : 'name'}\n                    />\n                </FormContainer>\n            </Modal>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default SalesControl;\n","import { useState, useEffect } from 'react';\n\nimport { useNotification } from 'hooks/notification';\nimport { usePayment } from './usePayment';\nimport { useSaleProducts } from 'hooks/useSaleProducts';\n\nimport { createSale } from 'api/sales';\nimport { useConfirm } from './useConfirm';\n\nexport const useSale = ({ onSubmitSuccess = () => {} }) => {\n    const [loading, setLoading] = useState(false);\n\n    const [selectedClient, setSelectedClient] = useState({ id: null, cedula: null, phoneNumber: null });\n    const [selectedProduct, setSelectedProduct] = useState(null);\n\n    const [selectedDebts, setSelectedDebts] = useState([]);\n    const [debtTotal, setDebtTotal] = useState(0);\n\n    const { invoiceProducts, setInvoiceProducts, subtotal, setSubtotal, saleTotal, setSaleTotal } = useSaleProducts();\n\n    const {\n        paymentMethods,\n        selectedPaymentMethod,\n        setSelectedPaymentMethod,\n        paymentTotal,\n        setPaymentTotal,\n        paymentInfo,\n        setPaymentInfo,\n        onPaymentInfoChange,\n        onPaymentAdd,\n        onPaymentDelete,\n    } = usePayment({ name: 'POS', currency: 'VES' });\n\n    const { confirmState, setConfirmState, INITIAL_CONFIRM_STATE } = useConfirm();\n\n    const { notification, showNotification } = useNotification();\n\n    useEffect(() => {\n        const dt = selectedDebts.reduce((accumulator, current) => accumulator + (current.debt.converted_amount['PAYMENT_VES'] || 0), 0);\n        setDebtTotal(dt);\n        setSaleTotal(subtotal + dt);\n    }, [selectedDebts, setDebtTotal, setSaleTotal, subtotal]);\n\n    useEffect(() => {\n        setSaleTotal(subtotal + debtTotal);\n    }, [subtotal, setSaleTotal, debtTotal]);\n\n    useEffect(() => {\n        if (paymentInfo.length === 1 && paymentInfo[0].name === 'POS') {\n            const payment = paymentInfo[0];\n            payment.amount = saleTotal;\n            setPaymentInfo([payment]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [saleTotal]);\n\n    const onProductSelect = (product) => {\n        setSelectedProduct(product);\n    };\n\n    const onProductSubmit = (product) => {\n        const products = invoiceProducts.filter((invoiceProduct) => invoiceProduct.id !== product.id);\n        setInvoiceProducts([product, ...products]);\n        setSelectedProduct(null);\n    };\n\n    const onProductDelete = (product) => {\n        const products = invoiceProducts.filter((invoiceProduct) => invoiceProduct.id !== product.id);\n        setSelectedProduct(null);\n        setInvoiceProducts([...products]);\n    };\n\n    const onClientSelect = (client, action) => {\n        if (action === 'clear') {\n            setSelectedClient({ id: null, cedula: null, phoneNumber: null });\n            setSelectedDebts([]);\n        } else if (action === 'select-option') {\n            setSelectedClient({ id: null, cedula: null, phoneNumber: null, ...client });\n        }\n    };\n\n    const onDebtSelect = (debts) => {\n        setSelectedDebts(debts);\n    };\n\n    const validateSale = () => {\n        if (!invoiceProducts.length) {\n            showNotification('error', 'Tabla de productos vacía');\n            return false;\n        }\n        if (!paymentInfo.length || paymentTotal['Total'] < 0) {\n            showNotification('error', 'Información de pago es incorrecta');\n            return false;\n        }\n        return true;\n    };\n\n    const paymentValidation = () => {\n        const confirmActions = [{ name: 'Guardar Deuda', color: 'orange', callback: () => submitSale(true) }];\n        let message = '';\n\n        if (paymentTotal['Total'] < saleTotal) {\n            message = 'El pago total es MENOR al total de la factura. ¿Deseas continuar sin guardar la deuda?';\n        } else if (paymentTotal['Total'] > saleTotal) {\n            message = 'El pago total es MAYOR al total de la factura. ¿Deseas continuar sin guardar la deuda?';\n        }\n\n        if (paymentTotal['Total'] !== saleTotal) {\n            setConfirmState({ ...confirmState, actions: confirmActions, message, show: true, callback: () => submitSale() });\n        } else {\n            submitSale();\n        }\n    };\n\n    const onSaveDebtHandler = () => {\n        if (validateSale()) {\n            setConfirmState({\n                ...confirmState,\n                message: '¿Está seguro que desea guardar la venta como una DEUDA?',\n                show: true,\n                callback: () => submitSale(true, true),\n            });\n        }\n    };\n\n    const onSaleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (validateSale()) {\n            if (!selectedClient.id) {\n                setConfirmState({\n                    ...confirmState,\n                    message: 'No ha seleccionado un cliente, ¿está seguro que desea continuar?',\n                    show: true,\n                    callback: paymentValidation,\n                });\n            } else {\n                paymentValidation();\n            }\n        }\n    };\n\n    const submitSale = async (saveAsDebt = false, fullDebt = false) => {\n        if (!loading) {\n            try {\n                setLoading(true);\n                const response = await createSale({\n                    clientId: selectedClient.id,\n                    products: invoiceProducts.map((product) => ({ id: product.id, quantity: product.quantity })),\n                    paymentInfo: fullDebt ? [] : paymentInfo,\n                    status: 1,\n                    saveAsDebt,\n                    //paying_debts: selectedDebts.map((debt) => debt.id),\n                });\n                setLoading(false);\n\n                if (response.status === 200) {\n                    showNotification('success', 'La venta se ha procesado exitosamente.');\n                    resetFields();\n                    onSubmitSuccess();\n                } else {\n                    showNotification(\n                        'error',\n                        response.data.error.message || response.data.error[0].message || JSON.stringify(response.data.error)\n                    );\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    };\n\n    const resetFields = () => {\n        setSelectedClient({ id: null, cedula: null, phoneNumber: null });\n        setSelectedDebts([]);\n        setSelectedProduct(null);\n        setInvoiceProducts([]);\n        setSubtotal(0);\n        setDebtTotal(0);\n        setSaleTotal(0);\n        setPaymentTotal(0);\n        setPaymentInfo([]);\n        setConfirmState(INITIAL_CONFIRM_STATE);\n    };\n\n    const onConfirmClose = () => {\n        setConfirmState(INITIAL_CONFIRM_STATE);\n    };\n\n    return {\n        loading,\n        paymentMethods,\n        selectedPaymentMethod,\n        setSelectedPaymentMethod,\n        selectedClient,\n        setSelectedClient,\n        selectedProduct,\n        selectedDebts,\n        invoiceProducts,\n        setInvoiceProducts,\n        subtotal,\n        saleTotal,\n        debtTotal,\n        paymentTotal,\n        paymentInfo,\n        setPaymentInfo,\n        onProductSelect,\n        onProductSubmit,\n        onProductDelete,\n        onClientSelect,\n        onDebtSelect,\n        onPaymentAdd,\n        onPaymentInfoChange,\n        onPaymentDelete,\n        onSaleSubmit,\n        onSaveDebtHandler,\n        resetFields,\n        notification,\n        showNotification,\n        confirmState,\n        onConfirmClose,\n    };\n};\n","export const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Moneda',\n        accessor: 'currency',\n    },\n    {\n        Header: 'Valor en bolívares',\n        accessor: 'value',\n        Cell: ({ value }) => {\n            return value ? value.toLocaleString() : '';\n        },\n    },\n    {\n        Header: 'Redondeo',\n        accessor: 'rounding',\n        Cell: ({ value }) => {\n            return value ? value.toLocaleString() : 'Sin redondeo';\n        },\n    },\n];\n","import axios from 'axios';\n\nconst BASE_URL = '/api/currencyRates';\n\nexport const getCurrencies = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    if (response.data) {\n        const currency_array = Object.entries(response.data).reduce(\n            (prev, current) => [\n                { id: current[1].id, currency: current[0], value: current[1].value, rounding: current[1].rounding },\n                ...prev,\n            ],\n            []\n        );\n        return currency_array;\n    }\n    return response.data;\n};\n\nexport const createCurrency = async (currencyData) => {\n    const response = await axios.post(BASE_URL, currencyData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updateCurrency = async (id, currencyData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, currencyData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteCurrency = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import { useState, useMemo, useEffect } from 'react';\n\nimport Table from 'components/Table';\nimport { COLUMNS } from './columns';\n\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getCurrencies } from 'api/currencies';\n\nconst CurrenciesTable = ({ onCurrencySelect, selectedRows, shouldRefresh, showNotification }) => {\n    const [filter, setFilter] = useState('');\n\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ filter, fetching: getCurrencies });\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <Table\n            selectedRows={selectedRows}\n            onRowSelect={onCurrencySelect}\n            loading={loading}\n            data={data}\n            columns={memoizedColumns}\n            onFilter={setFilter}\n            filterPlaceholder='Buscar por nombre...'\n            pageCount={1}\n        />\n    );\n};\n\nexport default CurrenciesTable;\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    currency: yup.string(),\n    value: yup.number().required('El campo valor es requerido').typeError('El campo valor debe ser numérico'),\n    rounding: yup.number().nullable(true),\n});\n\nexport default schema;\n","import {\n    Form,\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    InputContainer,\n    ButtonContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    ErrorContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport LabeledInput from 'components/LabeledInput';\nimport Button from 'components/Button';\nimport NumberFormatInput from 'react-number-format';\nimport { colors } from 'styles/theme';\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\nimport { useForm } from 'hooks/useForm';\nimport { createCurrency, updateCurrency } from 'api/currencies';\nimport currencySchema from 'validations/schemas/currency';\n\nconst CurrencyForm = ({ currency, action, handleClose, onSubmit }) => {\n    const { loading, handleChange, handleNumericInput, handleSubmit, formData, printError, submitErrors, setSubmitErrors, hasError } =\n        useForm({\n            initialState: {\n                currency: '',\n                value: 0,\n                rounding: null,\n                ...currency,\n            },\n            action,\n            createResource: createCurrency,\n            editResource: updateCurrency,\n            schema: currencySchema,\n            onSubmitSuccess: onSubmit,\n        });\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        if (action === 'create' && formData.currency === '') {\n            setSubmitErrors({ ...submitErrors, currency: 'Debe proveer el nombre de la moneda' });\n        } else {\n            handleSubmit(event);\n        }\n    };\n\n    return (\n        <Form onSubmit={submitHandler}>\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>{action === 'create' ? 'Crear moneda' : 'Editar moneda'}</TitleContainer>\n            </HeaderContainer>\n            <BodyContainer>\n                {action === 'create' && (\n                    <InputContainer>\n                        <LabeledInput\n                            onChange={handleChange}\n                            placeholder='Nombre'\n                            name='currency'\n                            value={formData.currency}\n                            autoFocus\n                            capitalize\n                            errorborder={hasError('currency')}\n                        />\n                        {printError('currency')}\n                    </InputContainer>\n                )}\n                <InputContainer>\n                    <LabeledInput\n                        onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'value')}\n                        placeholder='Valor'\n                        name='value'\n                        value={formData.value}\n                        thousandSeparator='.'\n                        decimalSeparator=','\n                        as={NumberFormatInput}\n                        errorborder={hasError('value')}\n                        autoFocus={action === 'edit'}\n                    />\n                    {printError('value')}\n                </InputContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'rounding')}\n                        placeholder='Redondeo'\n                        name='rounding'\n                        value={formData.rounding}\n                        thousandSeparator='.'\n                        decimalSeparator=','\n                        as={NumberFormatInput}\n                        errorborder={hasError('rounding')}\n                    />\n                    {printError('rounding')}\n                </InputContainer>\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button loading={loading} type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\nexport default CurrencyForm;\n","import { useState } from 'react';\n\nimport {\n    Wrapper,\n    ContentContainer,\n    ToolbarContainer,\n    TableContainer,\n    FormContainer,\n    ConfirmContainer,\n} from 'components/CommonLayout/main.layout';\n\nimport Toolbar from 'components/Toolbar';\nimport CurrenciesTable from 'components/ModuleTables/CurrenciesTable';\nimport Modal from 'components/Modal';\nimport CurrencyForm from './CRUDForm/index';\nimport ConfirmAlert from 'components/ConfirmAlert';\n\nimport Notification from 'components/Notification';\nimport { useNotification } from 'hooks/notification';\nimport { deleteCurrency } from 'api/currencies';\n\nconst Currencies = () => {\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const [selectedCurrency, setSelectedCurrency] = useState(null);\n    const { notification, showNotification } = useNotification(null);\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        setCRUDAction('refresh');\n    };\n\n    const handleDelete = async () => {\n        const response = await deleteCurrency(selectedCurrency.id);\n        if (response.error) {\n            showNotification('error', response.error.message);\n        } else {\n            showNotification('success', 'Se ha eliminado con éxito');\n        }\n        setCRUDAction('refresh');\n        setSelectedCurrency(null);\n    };\n\n    return (\n        <Wrapper>\n            <ContentContainer>\n                <ToolbarContainer>\n                    <Toolbar\n                        onCreate={() => setCRUDAction('create')}\n                        onEdit={() => setCRUDAction('edit')}\n                        onDelete={() => setCRUDAction('delete')}\n                        recordSelected={selectedCurrency}\n                    />\n                </ToolbarContainer>\n                <TableContainer>\n                    <CurrenciesTable\n                        selectedRows={selectedCurrency}\n                        onCurrencySelect={setSelectedCurrency}\n                        shouldRefresh={CRUDAction === 'refresh'}\n                        showNotification={showNotification}\n                    />\n                </TableContainer>\n                <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\n                    {(CRUDAction === 'create' || CRUDAction === 'edit') && (\n                        <FormContainer>\n                            <CurrencyForm\n                                onSubmit={handleSubmit}\n                                action={CRUDAction}\n                                currency={CRUDAction === 'edit' && selectedCurrency}\n                                handleClose={() => setCRUDAction(null)}\n                            />\n                        </FormContainer>\n                    )}\n                    {CRUDAction === 'delete' && (\n                        <ConfirmContainer>\n                            <ConfirmAlert handleClose={() => setCRUDAction(null)} callback={handleDelete} />\n                        </ConfirmContainer>\n                    )}\n                    {CRUDAction === 'delete' && <ConfirmContainer></ConfirmContainer>}\n                </Modal>\n            </ContentContainer>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default Currencies;\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Cliente',\n        accessor: (row) => {\n            if (row.client) {\n                return (\n                    <div>\n                        <span>{row.client.name ? row.client.name : ''}</span>\n                        <span>{row.client.cedula ? Number(row.client.cedula).toLocaleString() : ''}</span>\n                    </div>\n                );\n            } else {\n                return 'Anónimo';\n            }\n        },\n    },\n    {\n        Header: 'Total',\n        accessor: 'converted_amount.PAYMENT_VES',\n        Cell: ({ value }) => {\n            return value ? value.toLocaleString() : value;\n        },\n    },\n    {\n        Header: 'Fecha',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n    {\n        Header: 'Estado',\n        accessor: (row) => {\n            return row.status === 0 ? <span style={{ color: 'red' }}>Anulada</span> : <span style={{ color: 'green' }}>Confirmada</span>;\n        },\n    },\n];\n","import { useMemo, useState, useEffect } from 'react';\n\nimport Table from 'components/Table';\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport { getSales } from 'api/sales';\n\nimport { COLUMNS } from './columns';\n\nconst SalesTable = ({ onSaleSelect, selectedRows, shouldRefresh, onError }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n    const [filter, setFilter] = useState('');\n    const [page, setPage] = useState(1);\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getSales });\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) onError(error.message);\n    }, [error, onError]);\n\n    return (\n        <Table\n            loading={loading}\n            data={data.records}\n            onRowSelect={onSaleSelect}\n            selectedRows={selectedRows}\n            columns={memoizedColumns}\n            filterPlaceholder='Buscar por id, cliente, producto, fecha, COD transferencia...'\n            filter={filter}\n            onFilter={setFilter}\n            onPaginate={setPage}\n            pageCount={data.pageCount}\n            capitalize={[1]}\n        />\n    );\n};\n\nexport default SalesTable;\n","import { useState, useEffect } from 'react';\nimport Card from 'components/Card';\n\nimport { ResponsiveLine } from '@nivo/line';\nimport { getDailySales } from 'api/reports';\n\nconst DailySales = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetch_report = async () => {\n            setLoading(true);\n            const report = await getDailySales();\n            setLoading(false);\n            setData([report.chart_data] || []);\n        };\n\n        fetch_report();\n    }, []);\n\n    return (\n        <Card>\n            <Card.Header>\n                <h2>Total ventas diarias</h2>\n                <small>Últimas 2 semanas</small>\n            </Card.Header>\n            <Card.Body>\n                {loading && 'Cargando...'}\n                {data.length > 0 && !loading && (\n                    <div style={{ height: '200px' }}>\n                        <ResponsiveLine\n                            data={data}\n                            margin={{ top: 10, right: 20, bottom: 30, left: 40 }}\n                            xScale={{ type: 'point' }}\n                            yScale={{ type: 'linear', min: 0, stacked: false }}\n                            axisTop={null}\n                            axisRight={null}\n                            pointSize={10}\n                            pointColor={{ theme: 'background' }}\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabelYOffset={-12}\n                            useMesh={true}\n                            tooltip={({ point }) => {\n                                return (\n                                    <div style={{ placeItems: 'center', background: point.borderColor, padding: '5px' }}>\n                                        <span>{point.data.x}</span>\n                                        <span>${point.data.y}</span>\n                                    </div>\n                                );\n                            }}\n                        />\n                    </div>\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DailySales;\n","import { useState } from 'react';\n\nimport Toolbar from 'components/Toolbar';\nimport * as L from 'components/CommonLayout/main.layout';\n\nimport Modal from 'components/Modal';\nimport WidgetBox from 'components/WidgetBox';\nimport SalesTable from 'components/ModuleTables/SalesTable';\nimport Button from 'components/Button';\nimport { colors } from 'styles/theme';\nimport { Eye } from 'phosphor-react';\nimport SaleDetailsModal from 'components/ModuleModals/SaleDetailsModal';\nimport ConfirmAlert from 'components/ConfirmAlert';\nimport { useNotification } from 'hooks/notification';\nimport Notification from 'components/Notification';\n\nimport { deleteSale } from 'api/sales';\nimport DailySales from 'components/Widgets/SaleWidgets/DailySales';\n\nconst Sales = () => {\n    const [selectedSale, setSelectedSale] = useState();\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const { notification, showNotification } = useNotification();\n\n    const handleDelete = async () => {\n        const response = await deleteSale(selectedSale.id);\n        if (response.error) {\n            showNotification('error', response.error.message);\n        } else {\n            setCRUDAction('refresh');\n            setSelectedSale(null);\n        }\n    };\n\n    return (\n        <L.Wrapper>\n            <L.SeparatorWrapper>\n                <L.ContentContainer>\n                    <L.ToolbarContainer>\n                        <Toolbar deleteText='Anular' recordSelected={selectedSale} onDelete={() => setCRUDAction('delete')}>\n                            <div>\n                                <Button\n                                    onClick={() => setCRUDAction('view')}\n                                    background={colors.primary}\n                                    color='white'\n                                    disabled={!selectedSale}\n                                >\n                                    <Eye size='24' />\n                                    Ver Detalles\n                                </Button>\n                            </div>\n                        </Toolbar>\n                    </L.ToolbarContainer>\n                    <L.TableContainer>\n                        <SalesTable\n                            onSaleSelect={setSelectedSale}\n                            selectedRows={selectedSale}\n                            shouldRefresh={CRUDAction === 'refresh'}\n                            onError={() => {}}\n                        />\n                    </L.TableContainer>\n                    {CRUDAction === 'view' && (\n                        <SaleDetailsModal\n                            show={CRUDAction === 'view'}\n                            details={selectedSale}\n                            onClose={() => setCRUDAction(null)}\n                            onPayment={() => setCRUDAction('refresh')}\n                        />\n                    )}\n                    <Modal backdrop show={CRUDAction === 'delete'} handleClose={() => setCRUDAction(null)}>\n                        <L.ConfirmContainer>\n                            <ConfirmAlert handleClose={() => setCRUDAction(null)} callback={handleDelete} />\n                        </L.ConfirmContainer>\n                    </Modal>\n                </L.ContentContainer>\n                <WidgetBox>\n                    <DailySales />\n                </WidgetBox>\n            </L.SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.message}</Notification>}\n        </L.Wrapper>\n    );\n};\n\nexport default Sales;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/debts';\n\nexport const getDebts = async ({ page, filter }) => {\n    let pageParam = page ? `?page=${page}` : '?';\n    let filterParams = filter ? `&filter=${filter}` : '';\n\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createDebt = async (debtData) => {\n    const response = await axios.post(BASE_URL, debtData).catch((error) => error.response);\n    return response;\n};\n\nexport const updateDebt = async (id, debtData) => {\n    const response = await axios.patch(BASE_URL + `/${id}`, debtData).catch((error) => error.response);\n    return response.data;\n};\n\nexport const deleteDebt = async (id) => {\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\n    return response.data;\n};\n","import { useState, useEffect, useMemo } from 'react';\n\nimport Table from 'components/Table';\nimport formatDate from 'utils/formatDate';\n\nimport { getDebts } from 'api/debts';\nimport { usePaginatedResource } from 'hooks/paginatedResource';\n\nconst DebtsTable = ({\n    selectedRows,\n    onDebtSelect = () => {},\n    shouldRefresh = false,\n    onShowDetailsClick = () => {},\n    onError = () => {},\n}) => {\n    const memoizedColumns = useMemo(\n        () => [\n            {\n                Header: 'ID',\n                accessor: 'id',\n            },\n            {\n                Header: 'Cliente',\n                accessor: 'sale.client.name',\n            },\n            {\n                Header: 'Deuda Bs',\n                accessor: 'converted_amount.PAYMENT_VES',\n                Cell: ({ value }) => {\n                    return value;\n                },\n            },\n            {\n                Header: 'Creado',\n                accessor: 'createdAt',\n                Cell: ({ value }) => {\n                    return formatDate(value);\n                },\n            },\n            {\n                Header: 'Pagado',\n                accessor: 'paid_date',\n                Cell: ({ value }) => {\n                    return value ? formatDate(value) : 'No pagado';\n                },\n            },\n        ],\n        []\n    );\n\n    const [page, setPage] = useState(1);\n    const [filter, setFilter] = useState('');\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getDebts });\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    useEffect(() => {\n        if (error) onError(error);\n    }, [error, onError]);\n\n    return (\n        <>\n            <Table\n                loading={loading}\n                data={data.records}\n                selectedRows={selectedRows}\n                onRowSelect={onDebtSelect}\n                columns={memoizedColumns}\n                onPaginate={setPage}\n                onFilter={setFilter}\n                filterPlaceholder='Buscar por nombre, cedula o teléfono del cliente...'\n                pageCount={data.pageCount}\n            />\n        </>\n    );\n};\n\nexport default DebtsTable;\n","import { useState } from 'react';\n\nimport * as L from 'components/CommonLayout/main.layout';\nimport DebtsTable from 'components/ModuleTables/DebtsTable';\nimport SaleDetailsModal from 'components/ModuleModals/SaleDetailsModal';\nimport Toolbar from 'components/Toolbar';\nimport Button from 'components/Button';\nimport { colors } from 'styles/theme';\nimport { Eye } from 'phosphor-react';\n\nconst DebtsPage = () => {\n    const [showDetails, setShowDetails] = useState(false);\n    const [debtDetails, setDebtDetails] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n\n    return (\n        <L.Wrapper>\n            <L.SeparatorWrapper>\n                <L.ContentContainer>\n                    <L.ToolbarContainer>\n                        <Toolbar recordSelected={debtDetails}>\n                            <div>\n                                <Button\n                                    onClick={() => setShowDetails(true)}\n                                    background={colors.primary}\n                                    color='white'\n                                    disabled={!debtDetails}\n                                >\n                                    <Eye size='24' />\n                                    Ver Detalles\n                                </Button>\n                            </div>\n                        </Toolbar>\n                    </L.ToolbarContainer>\n                    <L.TableContainer>\n                        <DebtsTable\n                            onShowDetailsClick={(debtDebtails) => {\n                                setDebtDetails(debtDebtails);\n                                setShowDetails(true);\n                            }}\n                            selectedRows={debtDetails}\n                            onDebtSelect={setDebtDetails}\n                            shouldRefresh={CRUDAction === 'refresh'}\n                            onError={() => {}}\n                        />\n                    </L.TableContainer>\n                </L.ContentContainer>\n            </L.SeparatorWrapper>\n            {showDetails && (\n                <SaleDetailsModal\n                    show={showDetails}\n                    details={debtDetails && debtDetails.sale}\n                    onClose={() => setShowDetails(false)}\n                    onPayment={() => {\n                        setCRUDAction('refresh');\n                        setDebtDetails(null);\n                    }}\n                />\n            )}\n        </L.Wrapper>\n    );\n};\n\nexport default DebtsPage;\n","import styled from 'styled-components';\nimport { colors, breakpoints } from 'styles/theme';\n\nexport const ContentWrapper = styled.div`\n    flex: 1;\n    padding: 10px;\n    gap: 1%;\n\n    @media (min-width: ${breakpoints.desktop}) {\n        flex-direction: row;\n    }\n`;\n\nexport const ControlsWrapper = styled.div`\n    flex: 0 1 50px;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const ControlsContainer = styled.div`\n    flex-direction: row;\n    border-bottom: 1px solid black;\n    padding-bottom: 10px;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n`;\n\nexport const LeftWrapper = styled.div`\n    gap: 10px;\n\n    @media (min-width: ${breakpoints.tablet}) {\n        flex: 1 1 65%;\n    }\n`;\n\nexport const RightWrapper = styled.div`\n    gap: 20px;\n\n    @media (min-width: ${breakpoints.tablet}) {\n        flex: 1 1 34%;\n    }\n`;\n\nexport const CardContainer = styled.div`\n    flex-grow: 1;\n    background: white;\n    box-shadow: rgb(101 119 134 / 20%) 0px 0px 15px, rgb(101 119 134 / 15%) 0px 0px 3px 1px;\n    border-radius: 16px;\n`;\n\nexport const CardHeader = styled.div`\n    flex: 0 0 50px;\n    justify-content: center;\n    background: ${colors.superLightGray};\n\n    padding-left: 20px;\n\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-bottom: 1px solid ${colors.lightGray};\n\n    h2 {\n        margin: 0;\n    }\n`;\n\nexport const CardBody = styled.div`\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n`;\n\nexport const SalesContainer = styled.div``;\n\nexport const PaymentsContainer = styled.div`\n    flex-direction: column;\n    gap: 10px;\n\n    @media (min-width: ${breakpoints.desktop}) {\n        flex-direction: row;\n        flex-wrap: wrap;\n    }\n`;\n\nexport const DebtsContainer = styled.div``;\n\nexport const PaymentsChartContainer = styled.div``;\n\nexport const TopContainer = styled.div``;\n","export const COLUMNS = [\n    {\n        Header: 'Producto',\n        accessor: 'product',\n    },\n    {\n        Header: 'Cantidad',\n        accessor: 'quantity',\n    },\n    {\n        Header: 'Bruto $',\n        accessor: 'rawProfitUSD',\n        Cell: ({ value }) => {\n            return value ? '$' + value.toFixed(2) : 0;\n        },\n        Footer: ({ data }) => {\n            let total = data.reduce((acc, product) => {\n                return acc + product.rawProfitUSD;\n            }, 0);\n\n            return '$' + total.toFixed(2);\n        },\n    },\n    {\n        Header: 'Neto $',\n        accessor: 'netProfitUSD',\n        Cell: ({ value }) => {\n            return value ? '$' + value.toFixed(4) : 0;\n        },\n        Footer: ({ data }) => {\n            let total = data.reduce((acc, product) => {\n                return acc + product.netProfitUSD;\n            }, 0);\n\n            return '$' + total.toFixed(2);\n        },\n    },\n    {\n        Header: 'Bruto Bs',\n        accessor: 'rawProfitVES',\n        Cell: ({ value }) => {\n            return value ? value.toFixed(2) + ' Bs' : 0;\n        },\n        Footer: ({ data }) => {\n            let total = data.reduce((acc, product) => {\n                return acc + product.rawProfitVES;\n            }, 0);\n\n            return total.toFixed(2) + ' Bs';\n        },\n    },\n    {\n        Header: 'Neto Bs',\n        accessor: 'netProfitVES',\n        Cell: ({ value }) => {\n            return value ? value.toFixed(2) + ' Bs' : 0;\n        },\n        Footer: ({ data }) => {\n            let total = data.reduce((acc, product) => {\n                return acc + product.netProfitVES;\n            }, 0);\n\n            return total.toFixed(2) + ' Bs';\n        },\n    },\n];\n","import { useState, useMemo } from 'react';\nimport Table from 'components/Table';\nimport { COLUMNS } from './columns';\n\nconst SalesReportTable = ({ data, maxHeight }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n    const [filteredData, setFilteredData] = useState([]);\n\n    const onFilter = (value) => {\n        console.log(value);\n        const filtered = data.filter((f) => f.product.toLowerCase().includes(value.toLowerCase()));\n        setFilteredData(filtered);\n    };\n\n    return (\n        <Table\n            data={filteredData.length ? filteredData : data}\n            columns={memoizedColumns}\n            onFilter={onFilter}\n            filterPlaceholder='Buscar...'\n            filterHeight='30px'\n            maxHeight={maxHeight}\n            capitalize={[0]}\n            showFooter\n        />\n    );\n};\n\nexport default SalesReportTable;\n","export const COLUMNS = [\n    {\n        Header: 'Método',\n        accessor: 'name',\n    },\n    {\n        Header: 'Total',\n        accessor: 'amount',\n        Cell: ({ value }) => {\n            return value ? value.toFixed(2) : 0;\n        },\n    },\n    {\n        Header: 'Moneda',\n        accessor: 'currency',\n    },\n];\n","import { useMemo } from 'react';\nimport Table from 'components/Table';\nimport { COLUMNS } from './columns';\n\nconst PaymentsReportTable = ({ data, maxHeight }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    return <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} />;\n};\n\nexport default PaymentsReportTable;\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'saleId',\n    },\n    {\n        Header: 'Nombre',\n        accessor: 'name',\n    },\n    {\n        Header: 'Original',\n        accessor: 'original_amount',\n        Cell: ({ value }) => {\n            return value ? value.toFixed(2) : 0;\n        },\n    },\n    {\n        Header: 'Actual',\n        accessor: 'current_amount',\n        Cell: ({ value }) => {\n            return value ? value.toFixed(2) : 0;\n        },\n    },\n    {\n        Header: 'Creada',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n    },\n    {\n        Header: 'Pagado',\n        accessor: 'paid_date',\n        Cell: ({ value }) => {\n            return value ? formatDate(value) : 'No pagado';\n        },\n    },\n];\n","import { useMemo } from 'react';\nimport Table from 'components/Table';\nimport { COLUMNS } from './columns';\n\nconst DebtsReportTable = ({ data, maxHeight }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n    return <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} />;\n};\n\nexport default DebtsReportTable;\n","import formatDate from 'utils/formatDate';\n\nexport const COLUMNS = [\n    {\n        Header: 'ID',\n        accessor: 'id',\n    },\n    {\n        Header: 'Cliente',\n        accessor: 'name',\n    },\n    {\n        Header: 'Pagado',\n        accessor: (row) => {\n            return row.currency === 'VES' ? row.amount_VES + ' Bs' : '$' + row.amount_USD;\n        },\n    },\n    {\n        Header: 'Fecha',\n        accessor: 'createdAt',\n        Cell: ({ value }) => {\n            return formatDate(value);\n        },\n        Footer: ({ data }) => {\n            let total_USD = data.reduce((acc, product) => {\n                return acc + product.amount_USD;\n            }, 0);\n            let total_VES = data.reduce((acc, product) => {\n                return acc + product.amount_VES;\n            }, 0);\n\n            return (\n                <span>\n                    USD: {total_USD.toFixed(2)} - VES: {total_VES.toFixed(2)}\n                </span>\n            );\n        },\n    },\n];\n","import { useMemo } from 'react';\nimport Table from 'components/Table';\nimport { COLUMNS } from './columns';\n\nconst DebtPaymentsTable = ({ data, maxHeight }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n    return <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} showFooter />;\n};\n\nexport default DebtPaymentsTable;\n","import { useState, useEffect } from 'react';\nimport { Wrapper, SeparatorWrapper, ContentContainer, ReportTableContainer } from 'components/CommonLayout/main.layout';\nimport * as L from './layout.styles.js';\nimport { DateTime } from 'luxon';\nimport Button from 'components/Button';\nimport { getSalesReport } from 'api/reports';\nimport Notification from 'components/Notification';\nimport { useNotification } from 'hooks/notification';\nimport SalesReportTable from 'components/ModuleTables/ReportTables/Sales';\nimport PaymentsReportTable from 'components/ModuleTables/ReportTables/Payments';\nimport DebtsReportTable from 'components/ModuleTables/ReportTables/Debts';\nimport DebtPaymentsTable from 'components/ModuleTables/ReportTables/DebtPayments';\n\nimport { ResponsivePie } from '@nivo/pie';\nimport { ResponsiveBar } from '@nivo/bar';\nimport AverageSales from 'components/Widgets/ProductWidgets/AverageSales/index.js';\n\nconst ReportsPage = () => {\n    const [dates, setDates] = useState({\n        from: DateTime.now().toISODate(),\n        to: DateTime.now().toISODate(),\n    });\n\n    const [loading, setLoading] = useState(false);\n    const { notification, showNotification } = useNotification();\n\n    const [reportDetails, setReportDetails] = useState();\n    const [chartData, setChartData] = useState();\n\n    const handleClick = async (event) => {\n        event.preventDefault();\n        if (!loading) {\n            setLoading(true);\n            const response = await getSalesReport({ from: dates.from, to: dates.to });\n            setLoading(false);\n\n            if (response.error) {\n                showNotification('error', response.error.message);\n            } else {\n                setReportDetails(null);\n                setReportDetails({ ...response });\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (reportDetails) {\n            const payment_chart_data = reportDetails.payment_report.reduce((acc, payment) => {\n                return [...acc, { id: payment.name + ' ' + payment.currency, label: payment.name, value: payment.usedCount }];\n            }, []);\n\n            setChartData((prevState) => ({ ...prevState, payment: payment_chart_data }));\n\n            let top_sell_chart_data = reportDetails.top_sell_products.reduce((acc, product) => {\n                return [...acc, { id: product.product, label: product.product, value: product.totalSold }];\n            }, []);\n\n            setChartData((prevState) => ({ ...prevState, top_sell: top_sell_chart_data }));\n\n            let hourly_sales_chart_data = reportDetails.hourly_sales_report.reduce((acc, hour) => {\n                return [...acc, { id: hour.hour, label: hour.hour, value: hour.total }];\n            }, []);\n\n            setChartData((prevState) => ({ ...prevState, hourly_sales: hourly_sales_chart_data }));\n        }\n    }, [reportDetails]);\n\n    console.log(reportDetails);\n    return (\n        <Wrapper>\n            <SeparatorWrapper>\n                <ContentContainer>\n                    <L.ControlsWrapper>\n                        <L.ControlsContainer>\n                            <span>Fecha: </span>\n                            <input type='date' onChange={(event) => setDates({ ...dates, from: event.target.value })} value={dates.from} />\n                            <input type='date' onChange={(event) => setDates({ ...dates, to: event.target.value })} value={dates.to} />\n                            <Button loading={loading} onClick={handleClick} background='green' color='white'>\n                                Enviar\n                            </Button>\n                        </L.ControlsContainer>\n                    </L.ControlsWrapper>\n                    {reportDetails && (\n                        <L.ContentWrapper>\n                            <L.LeftWrapper>\n                                <L.SalesContainer>\n                                    <L.CardContainer>\n                                        <L.CardHeader>\n                                            <h3>Ventas</h3>\n                                        </L.CardHeader>\n                                        <L.CardBody>\n                                            <ReportTableContainer>\n                                                {reportDetails.sale_report.length > 0 && (\n                                                    <SalesReportTable\n                                                        data={reportDetails.sale_report}\n                                                        maxHeight='300px'\n                                                        onFilter={() => {}}\n                                                    />\n                                                )}\n                                            </ReportTableContainer>\n                                        </L.CardBody>\n                                    </L.CardContainer>\n                                </L.SalesContainer>\n                                <L.PaymentsContainer>\n                                    <L.CardContainer>\n                                        <L.CardHeader>\n                                            <h3>Pagos</h3>\n                                        </L.CardHeader>\n                                        <L.CardBody>\n                                            <ReportTableContainer>\n                                                {reportDetails.payment_report.length > 0 && (\n                                                    <PaymentsReportTable data={reportDetails.payment_report} maxHeight='200px' />\n                                                )}\n                                            </ReportTableContainer>\n                                        </L.CardBody>\n                                    </L.CardContainer>\n                                    <L.CardContainer>\n                                        <L.CardHeader>\n                                            <h3>Deudas</h3>\n                                        </L.CardHeader>\n                                        <L.CardBody>\n                                            <ReportTableContainer>\n                                                {reportDetails.debt_report.length > 0 && (\n                                                    <DebtsReportTable data={reportDetails.debt_report} maxHeight='200px' />\n                                                )}\n                                            </ReportTableContainer>\n                                        </L.CardBody>\n                                    </L.CardContainer>\n                                </L.PaymentsContainer>\n                                <div>\n                                    <L.CardContainer>\n                                        <L.CardHeader>\n                                            <h3>Pagos de deudas</h3>\n                                        </L.CardHeader>\n                                        <L.CardBody>\n                                            <ReportTableContainer>\n                                                {reportDetails.debt_payment_report.length > 0 && (\n                                                    <DebtPaymentsTable data={reportDetails.debt_payment_report} maxHeight='200px' />\n                                                )}\n                                            </ReportTableContainer>\n                                        </L.CardBody>\n                                    </L.CardContainer>\n                                </div>\n                                <L.DebtsContainer></L.DebtsContainer>\n                            </L.LeftWrapper>\n                            <L.RightWrapper>\n                                <L.TopContainer>\n                                    <L.CardContainer>\n                                        <L.CardHeader>\n                                            <h3>Productos más vendidos</h3>\n                                        </L.CardHeader>\n                                        <L.CardBody>\n                                            {chartData && chartData.top_sell && (\n                                                <div style={{ height: '200px' }}>\n                                                    <ResponsiveBar\n                                                        data={chartData.top_sell.reverse()}\n                                                        layout='horizontal'\n                                                        margin={{ left: 150, right: 10 }}\n                                                        padding={0.7}\n                                                        enableGridX\n                                                        enableGridY\n                                                    />\n                                                </div>\n                                            )}\n                                        </L.CardBody>\n                                    </L.CardContainer>\n                                </L.TopContainer>\n                                <L.CardContainer>\n                                    <L.CardHeader>\n                                        <h3>Horas más activas</h3>\n                                    </L.CardHeader>\n                                    <L.CardBody>\n                                        {chartData && chartData.hourly_sales && (\n                                            <div style={{ height: '200px' }}>\n                                                <ResponsiveBar\n                                                    data={chartData.hourly_sales}\n                                                    margin={{ bottom: 45, top: 10 }}\n                                                    valueFormat={(value) => (value > 0 ? value : '')}\n                                                    axisBottom={{\n                                                        tickSize: 10,\n                                                        tickPadding: 5,\n                                                        tickRotation: 0,\n                                                        legend: 'Reloj 24 horas',\n                                                        legendPosition: 'middle',\n                                                        legendOffset: 35,\n                                                    }}\n                                                    enableGridX\n                                                />\n                                            </div>\n                                        )}\n                                    </L.CardBody>\n                                </L.CardContainer>\n                                <L.CardContainer>\n                                    <L.CardHeader>\n                                        <h3>Métodos de pago más usados</h3>\n                                    </L.CardHeader>\n                                    <L.CardBody>\n                                        {chartData && chartData.payment && (\n                                            <div style={{ height: '200px' }}>\n                                                <ResponsivePie\n                                                    data={chartData.payment}\n                                                    margin={{ top: 20, bottom: 20, right: 100 }}\n                                                    enableArcLinkLabels={true}\n                                                    margin={{ top: 30, right: 20, bottom: 20, left: 20 }}\n                                                    innerRadius={0.5}\n                                                    padAngle={0.7}\n                                                    cornerRadius={3}\n                                                    activeOuterRadiusOffset={8}\n                                                    borderWidth={1}\n                                                    borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                                                    arcLinkLabelsSkipAngle={10}\n                                                    arcLinkLabelsTextColor='#333333'\n                                                    arcLinkLabelsThickness={2}\n                                                    arcLinkLabelsColor={{ from: 'color' }}\n                                                    arcLabelsSkipAngle={10}\n                                                    arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n                                                />\n                                            </div>\n                                        )}\n                                    </L.CardBody>\n                                </L.CardContainer>\n                            </L.RightWrapper>\n                        </L.ContentWrapper>\n                    )}\n                </ContentContainer>\n            </SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.message}</Notification>}\n        </Wrapper>\n    );\n};\n\nexport default ReportsPage;\n","import mapPaymentMethods from 'utils/mapPaymentMethods';\n\nconst columns = [\n    {\n        Header: 'Tipo',\n        accessor: (row) => {\n            const mapped = mapPaymentMethods([row.payment_method]);\n            return mapped[0].display_name + ' ' + row.currency;\n        },\n    },\n    {\n        Header: 'Total',\n        accessor: 'amount',\n    },\n];\n\nexport default columns;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/money';\n\nexport const getAllMoney = async () => {\n    const response = await axios.get(BASE_URL).catch((error) => error.response);\n    return response.data;\n};\n\nexport const createMoney = async (data) => {\n    const response = await axios.post(BASE_URL, data).catch((error) => error.response);\n    return response.data;\n};\n\nexport const updateMoney = async (moneyId, data) => {\n    const response = await axios.patch(BASE_URL + `/${moneyId}`, data).catch((error) => error.response);\n    return response.data;\n};\n","import { useMemo, useEffect } from 'react';\nimport COLUMNS from './columns';\nimport Table from 'components/Table';\nimport { getAllMoney } from 'api/money';\nimport { usePaginatedResource } from 'hooks/paginatedResource';\nimport mapPaymentMethods from 'utils/mapPaymentMethods';\n\nconst MoneyTable = ({ onMoneySelect, selectedRows, shouldRefresh, showNotification }) => {\n    const memoizedColumns = useMemo(() => COLUMNS, []);\n\n    const { data, loading, error, fetchResource } = usePaginatedResource({ fetching: getAllMoney });\n\n    useEffect(() => {\n        if (shouldRefresh) fetchResource();\n    }, [shouldRefresh, fetchResource]);\n\n    console.log(data);\n    useEffect(() => {\n        if (error) showNotification('error', error.message, 3000);\n    }, [error, showNotification]);\n\n    return (\n        <Table\n            data={data}\n            loading={loading}\n            columns={memoizedColumns}\n            capitalize={[0]}\n            onRowSelect={onMoneySelect}\n            selectedRows={selectedRows}\n        />\n    );\n};\n\nexport default MoneyTable;\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n    payment_method_id: yup.number().required(),\n    amount: yup.number().required('El campo total es requerido'),\n    currency: yup.string().required('El campo moneda es requerido'),\n});\n\nexport default schema;\n","import {\n    Form,\n    HeaderContainer,\n    BodyContainer,\n    FooterWrapper,\n    FooterContainer,\n    InputContainer,\n    ButtonContainer,\n    CloseButtonContainer,\n    TitleContainer,\n    ErrorContainer,\n} from 'components/CommonLayout/form.layout';\n\nimport LabeledInput from 'components/LabeledInput';\nimport Button from 'components/Button';\nimport NumberFormatInput from 'react-number-format';\nimport { colors } from 'styles/theme';\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\nimport { useForm } from 'hooks/useForm';\nimport { updateMoney } from 'api/money';\nimport moneySchema from 'validations/schemas/money';\nimport { useEffect } from 'react';\n\nconst MoneyUpdateAmount = ({ action, money, handleClose, onSubmit }) => {\n    const { loading, handleSubmit, handleChange, handleNumericInput, formData, setFormData, printError, hasError } = useForm({\n        initialState: {\n            id: null,\n            payment_method_id: null,\n            amount: 0,\n            currency: 'VES',\n            reasons: '',\n        },\n        action: 'edit',\n        editResource: updateMoney,\n        schema: moneySchema,\n        onSubmitSuccess: onSubmit,\n    });\n\n    useEffect(() => {\n        if (money) setFormData({ ...formData, id: money.id, payment_method_id: money.payment_method.id, currency: money.currency });\n    }, [money]);\n\n    return (\n        <Form\n            onSubmit={(event) =>\n                handleSubmit(event, {\n                    id: formData.id,\n                    payment_method_id: formData.payment_method_id,\n                    amount:\n                        action === 'add' ? Number(money.amount) + Number(formData.amount) : Number(money.amount) - Number(formData.amount),\n                    currency: formData.currency,\n                    reasons: formData.reasons,\n                })\n            }\n        >\n            <HeaderContainer>\n                <CloseButtonContainer>\n                    <Button onClick={handleClose}>\n                        <X />\n                    </Button>\n                </CloseButtonContainer>\n                <TitleContainer>{`${action === 'add' ? 'Sumar' : 'Restar'} moneda`}</TitleContainer>\n            </HeaderContainer>\n            <BodyContainer>\n                <InputContainer>\n                    <LabeledInput\n                        onValueChange={({ value }) => handleNumericInput(value, 'amount')}\n                        placeholder='Total'\n                        name='amount'\n                        thousandSeparator='.'\n                        decimalSeparator=','\n                        decimalScale={2}\n                        fixedDecimalScale={true}\n                        errorborder={hasError('amount')}\n                        autoFocus\n                        required\n                        as={NumberFormatInput}\n                    />\n                    {printError('amount')}\n                </InputContainer>\n                <InputContainer>\n                    <textarea\n                        onChange={handleChange}\n                        placeholder='Razones'\n                        name='reasons'\n                        errorborder={hasError('reasons')}\n                        required\n                        style={{ resize: 'none', height: '100px' }}\n                    ></textarea>\n                    {printError('reasons')}\n                </InputContainer>\n            </BodyContainer>\n            <FooterWrapper>\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\n                <FooterContainer>\n                    <ButtonContainer color={colors.primary}>\n                        <Button loading={loading} type='submit'>\n                            <BookBookmark size={24} />\n                            Enviar\n                        </Button>\n                    </ButtonContainer>\n                    <ButtonContainer color='red'>\n                        <Button onClick={handleClose}>\n                            <XCircle size={24} />\n                            Cancelar\n                        </Button>\n                    </ButtonContainer>\n                </FooterContainer>\n            </FooterWrapper>\n        </Form>\n    );\n};\nexport default MoneyUpdateAmount;\n","import { useState } from 'react';\n\nimport * as L from 'components/CommonLayout/main.layout';\nimport Toolbar from 'components/Toolbar';\nimport Modal from 'components/Modal';\nimport Notification from 'components/Notification';\nimport MoneyTable from 'components/ModuleTables/MoneyTable';\nimport { ButtonContainer } from 'components/Toolbar/styles';\nimport Button from 'components/Button';\nimport { Plus, Minus, Cloud } from 'phosphor-react';\nimport MoneyUpdateAmount from './CRUDForm/update_amount';\nimport { useNotification } from 'hooks/notification';\n\nconst MoneyPage = () => {\n    const [selectedMoney, setSelectedMoney] = useState(null);\n    const [CRUDAction, setCRUDAction] = useState(null);\n    const { notification, showNotification } = useNotification();\n\n    const handleSubmit = (submitMessage) => {\n        showNotification('success', submitMessage, 2000);\n        setSelectedMoney(null);\n        setCRUDAction('refresh');\n    };\n\n    return (\n        <L.Wrapper>\n            <L.SeparatorWrapper>\n                <L.ContentContainer>\n                    <L.ToolbarContainer>\n                        <Toolbar recordSelected={selectedMoney}>\n                            <ButtonContainer color='orange'>\n                                <Button onClick={() => setCRUDAction('add')} disabled={!selectedMoney}>\n                                    <Plus size='20px' />\n                                    Sumar\n                                </Button>\n                            </ButtonContainer>\n                            <ButtonContainer color='red'>\n                                <Button onClick={() => setCRUDAction('sub')} disabled={!selectedMoney}>\n                                    <Minus size='20px' />\n                                    Restar\n                                </Button>\n                            </ButtonContainer>\n                        </Toolbar>\n                    </L.ToolbarContainer>\n                    <L.TableContainer>\n                        <MoneyTable\n                            onMoneySelect={setSelectedMoney}\n                            showNotification={showNotification}\n                            selectedRows={selectedMoney}\n                            shouldRefresh={CRUDAction === 'refresh'}\n                        />\n                    </L.TableContainer>\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\n                        {(CRUDAction === 'add' || CRUDAction === 'sub') && (\n                            <L.FormContainer>\n                                <MoneyUpdateAmount\n                                    money={selectedMoney}\n                                    action={CRUDAction}\n                                    onSubmit={handleSubmit}\n                                    handleClose={() => setCRUDAction(null)}\n                                />\n                            </L.FormContainer>\n                        )}\n                    </Modal>\n                </L.ContentContainer>\n            </L.SeparatorWrapper>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </L.Wrapper>\n    );\n};\n\nexport default MoneyPage;\n","import { HeaderTitleContainer, Heading, DolarValueContainer } from './layout.styles';\n\nimport * as L from './new-layout.styles';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Navbar from 'components/Navbar';\nimport Notification from 'components/Notification';\n\nimport ClientsPage from 'pages/Clients';\nimport UsersPage from 'pages/Users';\nimport SuppliersPage from 'pages/Suppliers';\nimport CategoriesPage from 'pages/Categories';\nimport ProductsPage from 'pages/Products';\nimport SupplyingsPage from 'pages/Supplyings';\nimport SalesControl from 'pages/SalesControl';\nimport CurrenciesPage from 'pages/Currencies';\nimport SalesPage from 'pages/Sales';\nimport DebtsPage from 'pages/Debts';\nimport ReportsPage from 'pages/Reports';\nimport MoneyPage from 'pages/Money';\n\nimport { useRedirectToActiveLocation } from 'hooks/redirect';\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\n\nconst HomePage = () => {\n    useRedirectToActiveLocation();\n\n    const { currencyRates, notification } = useCurrencyRates(true);\n\n    return (\n        <L.Wrapper>\n            <L.Header>\n                <Navbar />\n            </L.Header>\n            <L.MainWrapper>\n                <L.Main>\n                    <Switch>\n                        <Route path='/control-de-ventas' component={SalesControl}></Route>\n                        <Route path='/inventario'>Hola</Route>\n                        <Route path='/reportes' component={ReportsPage} />\n                        <Route path='/deudas' component={DebtsPage} />\n                        <Route path='/categorias' component={CategoriesPage} />\n                        <Route path='/clientes' component={ClientsPage} />\n                        <Route path='/productos' component={ProductsPage} />\n                        <Route path='/ventas' component={SalesPage} />\n                        <Route path='/abastecimientos' component={SupplyingsPage} />\n                        <Route path='/proveedores' component={SuppliersPage} />\n                        <Route path='/usuarios' component={UsersPage} />\n                        <Route path='/tasas-de-cambio' component={CurrenciesPage} />\n                        <Route path='/dinero' component={MoneyPage} />\n                    </Switch>\n                </L.Main>\n                <L.MainHeader>\n                    <HeaderTitleContainer>\n                        <Heading>{localStorage.getItem('activeLocation')}</Heading>\n                    </HeaderTitleContainer>\n                    <DolarValueContainer>\n                        <h3>Tasa del dolar:</h3>\n                        <span>\n                            {(currencyRates &&\n                                currencyRates['PAYMENT_VES'] &&\n                                currencyRates['PAYMENT_VES'].value.toLocaleString() + ' Bs') ||\n                                'No hay valor asignado'}\n                        </span>\n                    </DolarValueContainer>\n                </L.MainHeader>\n            </L.MainWrapper>\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\n        </L.Wrapper>\n    );\n};\n\nexport default HomePage;\n","import { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useRedirectToActiveLocation = () => {\n    const activeLocation = localStorage.getItem(\"activeLocation\") || \"\";\n    const history = useHistory();\n    const location = useLocation();\n    const currentLocation = location.pathname;\n\n    if (currentLocation !== activeLocation) {\n        localStorage.setItem(\"activeLocation\", currentLocation);\n        if (currentLocation === \"/\") history.push(activeLocation);\n    }\n\n    return { activeLocation };\n};\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport LoginPage from 'pages/Login';\nimport HomePage from 'pages/Home';\n\nimport DolarContextProvider from 'context/dolar';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path='/login' component={LoginPage} />\n                <DolarContextProvider>\n                    <Route path='/' component={HomePage} />\n                </DolarContextProvider>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import axios from 'axios';\n\naxios.interceptors.response.use(\n    (res) => res,\n    (error) => {\n        if (error.response.data.error) {\n            return error.response;\n        } else if (error.response.status === 500) {\n            return {\n                data: {\n                    error: {\n                        message: 'El servidor se encuentra offline',\n                    },\n                },\n            };\n        } else {\n            return {\n                data: error.response.data,\n            };\n        }\n    }\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'api/errorHandling';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}