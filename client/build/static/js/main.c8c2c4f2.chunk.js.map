{"version":3,"sources":["styles/theme.js","pages/Login/layout.styles.js","components/LoginForm/styles.js","components/shared/Banner/index.js","components/LabeledInput/styles.js","components/LabeledInput/index.js","components/Button/styles.js","components/Button/index.js","components/LoginForm/index.js","pages/Login/index.js","pages/Home/layout.styles.js","pages/Home/new-layout.styles.js","components/Navbar/styles.js","components/Navbar/NavItem/index.js","components/Navbar/index.js","components/Notification/styles.js","components/Notification/index.js","components/CommonLayout/main.layout.js","components/WidgetBox/styles.js","components/Widgets/ClientWidgets/styles.js","components/WidgetBox/index.js","components/Table/styles.js","components/Table/Table.js","components/TableFilterInput/styles.js","components/TableFilterInput/index.js","components/Pagination/index.js","components/Table/index.js","components/ModuleTables/TopClientsTable/columns.js","components/ModuleTables/TopClientsTable/index.js","components/Card/styles.js","components/Card/index.js","api/clients/index.js","components/Widgets/ClientWidgets/index.js","hooks/paginatedResource.js","utils/formatDate.js","components/ModuleTables/ClientsTable/columns.js","hooks/notification.js","components/ModuleTables/ClientsTable/index.js","components/Toolbar/styles.js","components/Toolbar/index.js","components/Modal/styles.js","components/Modal/index.js","components/CommonLayout/form.layout.js","hooks/formError.js","utils/validateSchema.js","hooks/useForm.js","validations/schemas/client.js","pages/Clients/CRUDForm/index.js","components/ConfirmAlert/styles.js","components/ConfirmAlert/index.js","pages/Clients/index.js","api/users/index.js","components/ModuleTables/UsersTable/columns.js","components/ModuleTables/UsersTable/index.js","validations/schemas/user.js","pages/Users/CRUDForm/index.js","pages/Users/index.js","api/suppliers/index.js","components/ModuleTables/SuppliersTable/columns.js","components/ModuleTables/SuppliersTable/index.js","validations/schemas/supplier.js","pages/Suppliers/CRUDForm/index.js","pages/Suppliers/index.js","api/categories/index.js","components/ModuleTables/CategoriesTable/columns.js","components/ModuleTables/CategoriesTable/index.js","validations/schemas/category.js","pages/Categories/CRUDForm/index.js","pages/Categories/index.js","api/product_variants/index.js","components/ModuleTables/ProductsTable/columns.js","components/ModuleTables/ProductsTable/index.js","pages/Products/CRUDForm/layout.styles.js","api/products/index.js","validations/schemas/product.js","pages/Products/CRUDForm/variantForm.js","pages/Products/CRUDForm/index.js","pages/Products/stockForm/styles.js","components/NumberInput/styles.js","hooks/useInterval.js","components/NumberInput/index.js","utils/stockManipulation.js","pages/Products/stockForm/index.js","pages/Products/index.js","api/supplyings/index.js","components/ModuleTables/SupplyingsTable/columns.js","components/ModuleTables/SupplyingsTable/index.js","validations/schemas/supplying.js","components/SearchInput/styles.js","components/SearchInput/index.js","components/SupplierSearch/index.js","components/ProductSearch/index.js","components/ModuleTables/RecentSupplyingsTable/columns.js","components/ModuleTables/RecentSupplyingsTable/index.js","pages/Supplyings/CRUDForm/index.js","pages/Supplyings/index.js","pages/SalesControl/layout.styles.js","components/ClientSearch/index.js","components/ModuleTables/SalesControlTable/columns.js","components/ModuleTables/SalesControlTable/index.js","components/SaleProductForm/styles.js","context/dolar.js","api/currencyRate/index.js","hooks/useCurrencyRates.js","components/SaleProductForm/index.js","components/ModuleModals/DebtsModal/styles.js","components/ModuleTables/DebtSelectionTable/index.js","components/ModuleModals/SaleDetailsModal/styles.js","components/SaleDetails/ClientDetails/styles.js","components/SaleDetails/ClientDetails/index.js","components/PaymentMethod/Selector/index.js","components/PaymentMethod/styles.js","components/PaymentMethod/index.js","components/PaymentMethod/POS/index.js","components/PaymentMethod/Transfer/index.js","components/PaymentMethod/Cash/index.js","components/SaleDetails/PaymentDetails/styles.js","components/SaleDetails/PaymentDetails/index.js","components/PaymentsForm/styles.js","components/PaymentsForm/index.js","components/SaleDetails/TotalDetails/Payment/index.js","api/payments/index.js","hooks/useConfirm.js","api/payment_methods/index.js","utils/mapPaymentMethods.js","hooks/usePaymentMethod.js","hooks/useLocalStorage.js","utils/arrayGroup.js","hooks/usePayment.js","components/ModuleModals/PaymentFormModal/index.js","components/SaleDetails/TotalDetails/Invoice/index.js","hooks/useSaleProducts.js","api/sales/index.js","components/ModuleModals/SaleDetailsModal/index.js","components/ModuleModals/DebtsModal/index.js","pages/SalesControl/index.js","hooks/useSale.js","components/ModuleTables/CurrenciesTable/columns.js","api/currencies/index.js","components/ModuleTables/CurrenciesTable/index.js","validations/schemas/currency.js","pages/Currencies/CRUDForm/index.js","pages/Currencies/index.js","components/ModuleTables/SalesTable/columns.js","components/ModuleTables/SalesTable/index.js","pages/Sales/index.js","api/debts/index.js","components/ModuleTables/DebtsTable/index.js","pages/Debts/index.js","pages/Reports/layout.styles.js","api/reports/index.js","components/ModuleTables/ReportTables/Sales/columns.js","components/ModuleTables/ReportTables/Sales/index.js","components/ModuleTables/ReportTables/Payments/columns.js","components/ModuleTables/ReportTables/Payments/index.js","components/ModuleTables/ReportTables/Debts/columns.js","components/ModuleTables/ReportTables/Debts/index.js","components/ModuleTables/ReportTables/DebtPayments/columns.js","components/ModuleTables/ReportTables/DebtPayments/index.js","pages/Reports/index.js","pages/Home/index.js","hooks/redirect.js","App.js","api/errorHandling.js","index.js"],"names":["breakpoints","colors","MainWrapper","styled","div","FormContainer","MainContainer","ContentContainer","Header","header","LogoContainer","Main","InputContainer","SubmitButtonContainer","SvgComponent","props","xmlns","viewBox","d","StyledMainWrapper","label","errorborder","file","StyledInput","input","capitalize","textTransform","StyledLabel","LabeledInput","children","placeholder","value","active","onChange","disabled","as","innerRef","rest","ref","onFocus","event","target","select","StyledButton","button","background","color","cursor","Button","loading","className","type","LoginForm","Banner","fill","onSubmit","preventDefault","autoFocus","LoginPage","HeaderTitleContainer","main","DolarValueContainer","Heading","span","Wrapper","MainHeader","NavWrapper","NavContainer","Nav","nav","NavLink","Link","hide","IconContainer","iconVariant","NavLinkTextContainer","NavLinkText","NavLinkContentWrapper","NavItem","to","Icon","title","dissapearonmobile","activeItem","localStorage","getItem","onClick","elementURL","setItem","size","weight","Navbar","height","ShoppingCart","ArchiveBox","ClipboardText","FileMinus","Bookmark","Users","Barcode","ShoppingCartSimple","Package","IdentificationCard","User","Swap","Money","Container","Notification","PortalNotification","ReactDOM","createPortal","document","getElementById","SeparatorWrapper","ToolbarContainer","TableContainer","width","ConfirmContainer","ReportTableContainer","show","display","CloseButtonWrapper","WidgetBox","onClose","StyledFilterContainer","filterHeight","maxHeight","StyledLoadingContainer","data","position","StyledNoDataContainer","StyledTable","table","TD","td","TH","th","TR","tr","theme","THead","thead","TFoot","tfoot","TBody","tbody","PaginationContainer","Table","Head","Body","Foot","LoadingContainer","FilterContainer","NoDataContainer","Input","TableFilterInput","Paginate","pageCount","onPaginate","useState","selectedPage","setSelectedPage","previousLabel","disableInitialCallback","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","containerClassName","activeClassName","onPageChange","currentPage","handlePageSelect","selected","forcePage","CustomTable","columns","filterPlaceholder","async","onFilter","onRowSelect","onDeleteRow","multiSelect","selectedRows","showFooter","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","setSelected","useEffect","length","onFilterDebounced","debounce","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","some","r","id","original","getRowProps","tagName","rowIsAlreadySelected","newSelectedRows","filter","handleClick","style","padding","borderRadius","cells","cell","index","includes","getCellProps","group","getFooterGroupProps","getFooterProps","Pagination","COLUMNS","accessor","Cell","Number","toLocaleString","toFixed","TopClientsTable","memoizedColumns","useMemo","Card","BASE_URL","getClients","a","page","pageParam","filterParams","axios","get","catch","error","response","getTopClients","createClient","clientData","post","updateClient","patch","deleteClient","delete","ClientWidgets","topClients","setTopClients","topSalesRange","setTopSalesRange","topDebtsRange","setTopDebtsRange","setLoading","fetchTopClients","gap","alignItems","sales","debts","usePaginatedResource","fetching","count","fetchOnMount","setData","setError","fetchResource","useCallback","path","message","formData","date","DateTime","fromISO","setZone","toFormat","timeout","displayType","format","formatDate","ClientsTable","onClientSelect","shouldRefresh","showNotification","setPage","setFilter","records","ButtonContainer","Toolbar","onCreate","onEdit","onDelete","deleteText","recordSelected","name","StyledModal","backdrop","zindex","Modal","handleClose","PortalModal","ReactDom","Form","form","HeaderContainer","CloseButtonContainer","TitleContainer","BodyContainer","overflow","FooterWrapper","FooterContainer","InlineContainer","ErrorAlert","ErrorContainer","url","LoadingDiv","useFormError","initialState","errors","setErrors","handleErrors","errorObject","errorList","Symbol","iterator","forEach","validateSchema","schema","validate","abortEarly","inner","err","push","useForm","action","createResource","editResource","deleteResource","onSubmitSuccess","submitSuccessMessage","onDeleteSuccess","setFormData","successMessage","create","edit","handleNestedChange","selector","key","JSON","stringify","parse","handleChange","targetName","files","handleNumericInput","handleSubmit","console","log","handleDelete","submitErrors","setSubmitErrors","printError","hasError","yup","shape","required","cedula","min","max","phoneNumber","test","ClientForm","client","clientSchema","onValueChange","values","thousandSeparator","decimalSeparator","decimalScale","NumberFormatInput","allowEmptyFormatting","mask","Title","Description","Footer","ConfirmAlert","additionalActions","callback","useNotification","notification","setNotification","text","expiration","clearTimeout","setTimeout","Clients","selectedClient","setSelectedClient","CRUDAction","setCRUDAction","showWidgets","setShowWidgets","handleCRUD","currentTarget","submitMessage","activeRecord","getUsers","createUser","userData","updateUser","deleteUser","UsersTable","onUserSelect","username","password","nullable","permissions","UserForm","user","userSchema","floatValue","isAllowed","inputObj","allowDecimalSeparators","NumericFormatInput","selectedUser","setSelectedUser","getSuppliers","createSupplier","supplierData","updateSupplier","deleteSupplier","SuppliersTable","onSupplierSelect","rif","address","SupplierForm","supplier","supplierSchema","Suppliers","selectedSupplier","setSelectedSupplier","getCategories","createCategory","categoryData","updateCategory","deleteCategory","CategoriesTable","onCategorySelect","CategoryForm","category","categorySchema","Categories","selectedCategory","setSelectedCategory","getProductVariants","getProductVariantById","getRecentSupplyings","product_variant_id","countParam","deleteProductVariantApi","ProductsTable","onProductSelect","GeneralInfoContainer","VariantsContainer","InputsWrapper","InputsContainer","FileInputContainer","VariantButtonContainer","ProductImageContainer","VariantNameContainer","PriceContainer","UnitValueContainer","createProduct","productData","FormData","variantsWithImage","product_variant","variant","imagePath","append","brand","method","updateProduct","reasons","trim","of","price","typeError","profitPercent","unitValue","VariantForm","deleteProductVariant","productVariantList","i","errormessage","defaultValue","URL","createObjectURL","justifyContent","ProductForm","product","productSchema","Variants","VariantContainer","Label","StockInfo","FreeStock","TotalStock","MinusButton","PlusButton","NumericInput","useInterval","delay","savedCallback","useRef","current","tick","setInterval","clearInterval","NumberInput","onCtrlClick","plus","minus","running","setRunning","handleCtrlClick","ctrlKey","buttonName","onMouseDown","onMouseUp","onMouseLeave","releaseOrAssign","freeStock","currentStock","releasingStock","newProductStock","newFreeStock","StockForm","setFreeStock","stockTotal","setStockTotal","total","reduce","old","stock","productVariant","parseFloat","isNaN","onChangeHandler","stockToAsign","Math","floor","ctrlClickHandler","minHeight","Products","selectedProduct","setSelectedProduct","top","getSupplyings","createSupplying","supplyingData","updateSupplying","deleteSupplying","SupplyingsTable","onSupplyingSelect","supplierId","buyPrice","quantity","shouldOpen","option","SearchInput","styles","isError","onSelect","isDisabled","loadOptions","onCreateOption","defaultOptions","cacheOptions","menu","provided","flexDirection","menuList","container","control","state","boxShadow","selectProps","isFocused","border","inputValue","loadingMessage","isClearable","SupplierSearch","loadSuppliers","suppliers","record","ProductSearch","hideOutOfStock","showPriceOnName","loadProductVariants","products","p","product_name","converted_price","RecentSupplyingsTable","supplyings","SupplyingForm","supplying","supplyingSchema","loadingRecentSupplyings","setLoadingRecentSupplyings","recentSupplyings","setRecentSupplyings","productSearchDisabled","setProductSearchDisabled","supplierRef","productRef","buyPriceRef","quantityRef","fetchRecentSupplyings","select_action","mostRecentSupplying","focus","prefix","Supplyings","selectedSupplying","setSelectedSupplying","refreshTable","crudAction","MetadataContainer","InvoiceFormContainer","ClientContainer","PaymentsContainer","InvoiceTotalContainer","ClientNameContainer","ClientPhoneNumberContainer","OrderDetailsContainer","ProductFormContainer","ActionsContainer","TotalContainer","fieldset","ClientSearch","loadClients","clients","sale","minWidth","maxWidth","suffix","PRICE_VES","SalesControlTable","QuantityInput","DolarContext","createContext","DolarContextProvider","currencyRates","setCurrencyRates","Provider","getCurrencyRates","updateCurrencyRateRequest","currency","useCurrencyRates","useContext","getCurrencyRatesFromLocalStorage","window","updateCurrencyRate","fetchCurrencyRates","SaleProductForm","productToEdit","productSearchRef","setQuantity","quantityInputRef","textAlign","fontSize","getInputRef","DebtSelectionTable","onDebtSelect","onShowDetailsClick","DebtInfoTotal","DebtLabel","DebtValue","ClientDetails","Selector","paymentList","payment","display_name","NameContainer","CodeContainer","SelectContainer","CurrencyContainer","ischange","PaymentMethods","POS","isChange","amount","fixedDecimalScale","isNumericString","Transfer","transaction_code","bankId","Cash","Paypal","PaymentDetails","paymentInfo","marginTop","React","createElement","payment_method_name","PaymentTitleContainer","AddPaymentContainer","PaymentsForm","onPaymentInfoChange","onPaymentAdd","onPaymentDelete","selectedPaymentMethod","onPaymentMethodSelect","paymentMethods","showTitle","PaymentMethod","find","PaymentTotal","paymentTotal","twoRowsOnly","borderLeft","Object","keys","green","Fragment","create_payment_for_sale","saleId","useConfirm","INITIAL_CONFIRM_STATE","actions","confirmState","setConfirmState","getPaymentMethods","mapPaymentMethods","paymentMethodsArray","paymentMethod","sort","usePaymentMethod","loadOnMount","paymentMethodsLoading","setPaymentMethodsLoading","setPaymentMethods","setSelectedPaymentMethod","loadPaymentMethods","useLocalStorage","initialValue","item","storedValue","setStoredValue","valueToStore","Function","groupBy","array","acc","obj","property","usePayment","defaultPayment","persistToLocalStorage","setPaymentTotal","persistedPaymentTotal","setPersistedPaymentTotal","persistedPaymentInfo","setPersistedPaymentInfo","setPaymentInfo","summarizePaymentInfo","paymentsGroupedByName","paymentsInfo","accumulator","totalPayment","addDefaultPayment","Date","getTime","payment_method_id","paymentTotals","info","actual_payment_info","set_actual_payment_info","newPaymentInfo","code","PaymentFormModal","submitPayment","paymentSubmitHandler","total_payment","debt_total","debt","current_amount","Payment","InvoiceTotal","subtotal","debtTotal","invoiceTotal","useSaleProducts","invoiceProducts","setInvoiceProducts","persistedInvoiceProducts","setPersistedInvoiceProducts","persistedSubtotal","setPersistedSubtotal","setSubtotal","persistedSaleTotal","setPersistedSaleTotal","saleTotal","setSaleTotal","getSales","getSaleById","createSale","saleData","deleteSale","SaleDetailsModal","details","onPayment","showPaymentModal","setShowPaymentModal","saleDetails","setSaleDetails","onPaymentSubmit","createdAt","original_amount","converted_amount","paid","Invoice","DebtsModal","selectedDebts","showDebtDetails","setShowDebtDetails","debtDetails","setDebtDetails","SalesControl","setSelectedDebts","setDebtTotal","dt","validateSale","paymentValidation","confirmActions","submitSale","onSaleSubmit","saveAsDebt","fullDebt","clientId","status","resetFields","onProductSubmit","invoiceProduct","onProductDelete","onSaveDebtHandler","onConfirmClose","useSale","showDebts","setShowDebts","clientSearchInput","setClientSearchInput","showClientForm","setShowClientForm","clientSearchRef","clientCedulaRef","clientPhoneNumberRef","listener","keyCode","body","addEventListener","removeEventListener","newClient","getCurrencies","currency_array","entries","prev","rounding","createCurrency","currencyData","updateCurrency","deleteCurrency","CurrenciesTable","onCurrencySelect","CurrencyForm","currencySchema","Currencies","selectedCurrency","setSelectedCurrency","SalesTable","onSaleSelect","onError","Sales","selectedSale","setSelectedSale","getDebts","DebtsTable","DebtsPage","showDetails","setShowDetails","debtDebtails","ContentWrapper","ControlsWrapper","ControlsContainer","LeftWrapper","RightWrapper","CardContainer","CardHeader","CardBody","SalesContainer","DebtsContainer","TopContainer","getSalesReport","from","rawProfitUSD","netProfitUSD","rawProfitVES","netProfitVES","SalesReportTable","filteredData","setFilteredData","filtered","f","toLowerCase","PaymentsReportTable","DebtsReportTable","amount_VES","amount_USD","total_USD","total_VES","DebtPaymentsTable","ReportsPage","now","toISODate","dates","setDates","reportDetails","setReportDetails","chartData","setChartData","payment_chart_data","payment_report","usedCount","prevState","top_sell_chart_data","top_sell_products","totalSold","top_sell","hourly_sales_chart_data","hourly_sales_report","hour","hourly_sales","sale_report","Payments","debt_report","debt_payment_report","DebtPayments","margin","bottom","right","enableArcLinkLabels","legends","anchor","direction","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","valueFormat","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","enableGridX","reverse","layout","left","enableGridY","HomePage","activeLocation","history","useHistory","currentLocation","useLocation","pathname","useRedirectToActiveLocation","component","CategoriesPage","ClientsPage","ProductsPage","SalesPage","SupplyingsPage","SuppliersPage","UsersPage","CurrenciesPage","App","exact","interceptors","use","res"],"mappings":"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","file":"static/js/main.c8c2c4f2.chunk.js","sourcesContent":["export const breakpoints = {\r\n    mobile: '500px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    desktop: '1440px',\r\n    bigScreen: '1920px',\r\n};\r\n\r\nexport const colors = {\r\n    primary: '#0A704F',\r\n    lightPrimary: '#6F9C81',\r\n    extraLightPrimary: 'rgba(111,156,129, 0.2)',\r\n    secondary: '#FA7612',\r\n    lightSecondary: '#FA8B00',\r\n    darkerSecondary: '#cd5700',\r\n    lightGray: '#AAB8C2',\r\n    extraLightGray: '#E1E8ED',\r\n    superLightGray: '#F5F8FA',\r\n    lightBlack: '#999',\r\n    smokyBlack: '#100C08',\r\n    black: '#211717',\r\n    shadow: 'rgb(101 119 134 / 20%)',\r\n    brown: '#A25708',\r\n};\r\n","import styled from \"styled-components\";\r\nimport { colors, breakpoints } from \"styles/theme\";\r\n\r\nexport const MainWrapper = styled.div`\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: ${colors.black};\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n    width: 80%;\r\n    height: 50%;\r\n    border-radius: 4px;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        width: 500px;\r\n        height: 450px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        width: 600px;\r\n        height: 500px;\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const MainWrapper = styled.div`\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 30px;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    width: 100%;\r\n    border: 2px solid white;\r\n    padding: 30px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    max-height: 200px;\r\n    max-width: 100%;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    max-height: 100%;\r\n\r\n    > svg {\r\n        :hover {\r\n            fill: ${colors.secondary};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Main = styled.div``;\r\n\r\nexport const InputContainer = styled.div`\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n\r\n    > small {\r\n        margin-top: 5px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    label {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const SubmitButtonContainer = styled.div`\r\n    height: 50px;\r\n    background: ${colors.primary};\r\n    > button {\r\n        color: white;\r\n        font-weight: 700;\r\n\r\n        :hover {\r\n            background: ${colors.secondary};\r\n        }\r\n    }\r\n`;\r\n","import * as React from 'react';\r\n\r\nfunction SvgComponent(props) {\r\n    return (\r\n        <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 333 115' {...props}>\r\n            <path d='M287 21.4c0 21.5-.4 24.2-3.5 21.6-1-.8-1.9-.8-3.4-.1-2.6 1.4-6.7 1.4-9.4 0-4.1-2.1-5.7-5.1-5.7-10.7 0-4.6.4-5.8 2.9-8.3 2.4-2.4 3.8-2.9 7.5-2.9h4.6V3H3v106h116V90.5h-5.4c-6.4 0-9-1.9-10.8-7.7-.8-2.9-.8-4.7 0-7.6 1.8-5.8 4.4-7.7 10.5-7.5 2.9.1 6.7.2 8.5.2l3.2.1v44l-62.7.3c-34.6.1 12.3.2 104.2.2s121.2-.1 65.2-.2c-80.8-.3-101.8-.6-101.4-1.6.3-.9 21.7-1.3 100.5-1.5L331 109V3h-19.5C294.8 3 292 2.8 292 1.5c0-.9-.9-1.5-2.5-1.5H287v21.4zM36.4 13.3c2.4 1.7 1.3 6-1.2 5.3-5.2-1.5-6.9-1.6-8.7-.3-2.5 1.9-1.3 3.5 6.5 8.2 6 3.6 7 5 7 9C40 41 36.1 44 29.1 44c-6 0-9.1-1.5-9.1-4.4 0-2.3.2-2.4 6.7-2.3 9.2.3 9.6-1.7 1.4-6.8-3.4-2-6.8-4.6-7.6-5.8-2.2-3.2-1.9-7.4 1-10.2 1.9-2 3.4-2.5 7.8-2.5 2.9 0 6.1.6 7.1 1.3zm118.8 8.1c2.3 1.2 3.3 1.2 6.7 0 4.7-1.6 8.4-.7 10.1 2.6.6 1.1 1 5.7.8 10.8-.3 8.7-.3 8.7-3 9l-2.8.3v-7.8c0-9.5-.8-11.1-4.7-9.7-2.7.9-2.8 1.2-3.1 9.2l-.3 8.2H153v-7.8c0-9.4-.8-11-4.7-9.6-2.7.9-2.8 1.2-3.1 9.2l-.3 8.2H139V32.5c0-10.7.1-11.5 1.9-11.5 1.1 0 2.1.4 2.3 1 .2.6 1.9.4 4.3-.5 5-1.8 4.5-1.8 7.7-.1zM50.4 22.6c.3.9.6 4.7.6 8.5 0 7.7 1.2 9.2 5.6 6.9 2.2-1.2 2.4-1.9 2.4-9.2V21h6v11.5c0 11.7-.7 13.4-3.8 10.3-.9-.9-1.8-.9-3.7 0-4 1.8-8.9 1.5-11-.8-1.3-1.5-2-4.2-2.3-10-.2-4.3-.2-8.6.1-9.5.8-2 5.3-2 6.1.1zm38.7 1.3c2.5 2.5 2.9 3.7 2.9 8.5 0 7.6-2.6 10.7-9.8 11.4l-5.2.5v4.3c0 4.2-.1 4.4-3 4.4h-3V37.7c0-8.5.2-15.6.5-15.9.3-.2 3.7-.5 7.6-.6 6.6-.2 7.2 0 10 2.7zm23.1-1.8c2.1 1.1 4.8 6.6 4.8 9.9 0 1.8-.6 2-7 2-5.6 0-7 .3-7 1.5 0 2.4 4.8 3.8 8.4 2.5 2.6-.9 3.3-.8 4.4.7 1.9 2.7-1.8 5.3-7.5 5.3-8.4 0-12.2-3.7-12.3-11.8 0-4.6.4-5.8 2.9-8.3 2.3-2.3 3.8-2.9 7.1-2.9 2.3 0 5 .5 6.2 1.1zm13.7.6c.9 1.7 1.1 1.7 4 0 3.5-2.1 5.1-1.6 5.1 1.6 0 1.5-1.1 2.7-3.3 3.7-3.1 1.4-3.2 1.8-3.7 8.5-.5 6.4-.7 7-2.9 7.3-1.3.2-2.8-.2-3.2-1-1-1.5-1.2-20.2-.2-21.1 1.2-1.2 3.2-.7 4.2 1zm69.5.9c1.9 2 2.6 3.7 2.6 6.5V34h-7.1c-5.2 0-7 .3-6.7 1.2.8 2.4 5.2 3.8 8.8 2.8 3.5-1 4.9-.2 5 2.7 0 3.7-13.1 4.4-16.9.8-4.9-4.3-5.1-13.3-.4-17.9 3.7-3.7 10.9-3.7 14.7 0zm11.8-.7c1.1 1.8 1.2 1.8 4.5-.2 3.7-2.1 3.8-2.1 4.7.9.5 1.8 0 2.5-3.1 4.1l-3.8 2-.3 7.2c-.3 7.2-.3 7.2-3 6.9l-2.7-.3-.3-11.3c-.2-9.5 0-11.2 1.3-11.2.8 0 2 .8 2.7 1.9zm29.9-.9c1.6.9 1.7 1.5.8 3.1-.9 1.7-1.7 1.9-4.8 1.4-2.9-.5-4.1-.2-5.5 1.4-4.1 4.6-.5 11.8 5.3 10.5 1.4-.4 3-.7 3.4-.8.5 0 1.3.9 1.8 2.2.7 1.9.5 2.4-1.7 3.2-5.1 2-10.3 1.2-13.4-1.9-7.9-7.8-3.2-20.1 7.6-20.1 2.5 0 5.4.5 6.5 1zm20.3 1.1c2.5 1.9 2.6 2.5 2.6 11.5 0 9.5-.8 11.2-3.8 8.2-.9-.9-1.5-.9-2.4 0-1.8 1.8-7.3 1.5-9.7-.6-2.8-2.2-3.1-7.5-.6-10.2.9-1 3.7-2.2 6.1-2.6 5.7-.8 4.6-2.8-1.2-2.1-3.9.4-4.3.2-4.9-2.1-.8-3.2.7-4.2 6.6-4.2 3.2 0 5.5.6 7.3 2.1zm52.5-.7c3.4 1.8 5.1 5.4 5.1 10.7 0 3.3-.7 4.8-3.4 7.5-2.8 2.8-4.1 3.4-7.7 3.4-2.6 0-5.7-.8-7.6-2-6.3-3.8-6.6-14.2-.6-19 3.1-2.4 10.1-2.7 14.2-.6zM93.8 73.8L94 90h-7V74.1c0-14.4.2-16 1.8-16.4 4.6-1.3 4.7-1.1 5 16.1zm163.2-.3V90h-3.2c-1.8 0-5.1.2-7.3.5-8.3 1.2-14.3-6.6-11.7-15.3 1.8-5.8 4.4-7.7 10.8-7.7h5.4v-4.7c0-3.6.4-4.8 1.8-5.1 4.3-1.1 4.2-1.4 4.2 15.8zM22.6 58.8c.7.4 3.3 3.5 5.8 6.9 2.5 3.5 4.8 6.3 5.1 6.3.3 0 2.6-3.2 5.2-7 7-10.7 7.7-9.9 8.1 9.3l.3 15.7H41v-8c0-4.4-.3-8-.7-8-.5 0-1.8 1.6-3.1 3.5-1.2 1.9-2.8 3.5-3.5 3.5-.8 0-2.9-2.1-4.8-4.8l-3.4-4.7-.3 9.2-.3 9.3H19V74c0-16.2.3-17.4 3.6-15.2zm150 1.4c.7 2.2-1.9 5.2-4 4.5-1.7-.6-2.9-3.4-2.3-5.1 1-2.4 5.4-2.1 6.3.6zM74.3 69c2.8 2.2 5.2 8.2 4.3 10.5-.4 1.1-2.3 1.5-7.6 1.5-3.8 0-7 .4-7 .9 0 2.1 3.2 3.3 8.2 2.9 4.8-.3 5.3-.1 5.6 1.8.4 2.9-4.4 4.8-10.4 4.1-6.8-.7-10.8-5-10.8-11.5 0-7.6 4.3-12.1 11.5-12.2 2.2 0 4.7.8 6.2 2zm120.2-1c4.3 1.6 2.9 4.5-2.2 4.5-2.4 0-4.3.4-4.4 1-.1.5 2.1 2.1 4.7 3.5 5.1 2.6 6.2 4.7 5 9.5-.8 3-5.6 4.9-10.7 4.2-4.8-.6-6.4-1.9-5.5-4.3.5-1.3 1.4-1.5 4.4-1.1 3.8.6 7.3-.6 5.9-2-.4-.4-2.9-1.9-5.5-3.3-4.8-2.5-5.8-4.4-4.8-8.4s7.5-5.7 13.1-3.6zm26.9 0c3 1.1 5.6 5.7 5.6 10v3h-7.5c-7.4 0-7.5 0-6.4 2.1 1 1.9 1.7 2.1 6.9 1.6 5.1-.4 5.9-.3 6.3 1.4.7 2.5-1.5 4.1-6.6 4.6-9.2 1.1-15.4-4.7-14.4-13.4.9-8.2 8.1-12.4 16.1-9.3zm61.5.6c2.5 1.8 5.1 7.1 5.1 10.4 0 1.8-.6 2-7.5 2-4.1 0-7.5.4-7.5.9 0 2.1 3.2 3.3 8.2 2.9 4.8-.3 5.3-.1 5.6 1.8.4 2.9-4.4 4.8-10.5 4.1-6.6-.7-10.3-4.9-10.3-11.5.1-5.4 1.7-8.9 5.1-10.8 3.3-1.8 9-1.7 11.8.2zm31.3.2c.7.7.6 1.6-.1 3-1 1.8-1.5 2-4.1 1-5.7-1.9-10.3 3.9-7.6 9.4 1 1.9 2 2.3 6 2.4 3.5.1 5.1.6 5.8 1.8 1.4 2.6-.3 3.8-5.9 4.3-8.8.8-14-4.6-13-13.5.5-4.4 2.7-7.8 6.2-9.3 2.5-1.1 11.3-.5 12.7.9zM141 75.9c0 9.3 1.2 11.1 6 9.1 3-1.2 3-1.3 3-9.1V68h6v22l-3.7-.1c-2.1-.1-5.9.2-8.4.6-4 .6-5 .4-6.8-1.4-1.8-1.8-2.1-3.3-2.1-11.6V68h6v7.9zm32 3.1v11h-7V68h7v11z' />\r\n            <path d='M78.2 27.2c-.7.7-1.2 3.1-1.2 5.5 0 3.3.5 4.5 2.1 5.3 3.2 1.8 6.9-1.1 6.9-5.4 0-5.1-4.8-8.4-7.8-5.4zM104 27.5c-1.8 2.1-.9 2.7 3.6 2.3 3.6-.3 3.7-.4 2-2.1-2.1-2.1-4-2.2-5.6-.2zM185.8 27.1c-3 1.7-2 2.9 2.2 2.9 4.1 0 4.9-.7 2.8-2.8-1.4-1.4-2.7-1.5-5-.1zM247.4 35.5c-.8 1.9.3 3.5 2.5 3.5 2 0 4.1-1.9 4.1-3.7 0-1.8-5.9-1.7-6.6.2zM299.7 27.8c-4.2 4.6.1 13 5.2 10.2 5.9-3.1 4.3-12-2.2-12-.8 0-2.1.8-3 1.8zM243 74c-3.6 3.6-2 11 2.5 11 4.7 0 5.5-.9 5.5-6.1 0-4.4-.3-5.1-2.6-5.9-3.3-1.3-3.1-1.3-5.4 1zM65.8 73.1C62.5 75 63.7 77 68 77c4.4 0 5.5-2.1 2.1-4-2.3-1.2-2.2-1.2-4.3.1zM214.2 73.6c-2.9 2-2 3.4 2.2 3.4s5-.9 2.9-3.2c-2-2.2-2.3-2.2-5.1-.2zM274.8 73.1c-3.3 1.9-2.1 3.9 2.2 3.9 4.4 0 5.5-2.1 2.1-4-2.3-1.2-2.2-1.2-4.3.1zM272.6 28.2c-3.7 5.3.3 12.5 5.5 9.8 2.5-1.4 2.8-10.4.3-11.4-2.8-1.1-4.2-.7-5.8 1.6zM111.2 73.6c-1.6 1.1-2.2 2.5-2.2 5.3 0 4.4 1.4 6.1 5 6.1 3.7 0 5-1.8 5-6.7 0-3.7-.4-4.5-2.6-5.3-3.1-1.2-2.5-1.3-5.2.6z' />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import styled from 'styled-components';\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const StyledMainWrapper = styled.label`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n\r\n    justify-content: flex-end;\r\n\r\n    border: 1px solid #999;\r\n    border-radius: 4px;\r\n    max-height: 100%;\r\n    padding: 20px 0 5px 0;\r\n\r\n    background: white;\r\n\r\n    :focus-within {\r\n        box-shadow: 0 0 0 2px ${colors.secondary};\r\n        border-color: transparent;\r\n        > label {\r\n            color: ${colors.secondary};\r\n        }\r\n    }\r\n\r\n    ${(props) =>\r\n        props.errorborder &&\r\n        `\r\n        border: none;\r\n        box-shadow: 0 0 0 2px red;\r\n\r\n    `}\r\n\r\n    ${(props) => {\r\n        if (props.file) {\r\n            return `\r\n            background: ${colors.shadow};\r\n            cursor: pointer;\r\n            label {\r\n            font-size: 12px;\r\n            top: 2px;\r\n            left: 2px;\r\n            }\r\n            `;\r\n        }\r\n    }}\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    margin: 0;\r\n    min-width: 0px;\r\n    min-height: 0px;\r\n\r\n    height: 100%;\r\n    border: 0;\r\n    outline: 0;\r\n\r\n    font-size: 14px;\r\n    padding: 0 5px 0 5px;\r\n\r\n    ${(props) => props.capitalize && { textTransform: 'capitalize' }}\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n    min-width: 0px;\r\n    min-height: 0px;\r\n\r\n    color: rgb(91, 112, 131);\r\n    position: absolute;\r\n    pointer-events: none;\r\n    top: 3px;\r\n    left: 5px;\r\n\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    transition: all 0.2s;\r\n`;\r\n\r\nexport const StyledErrorBadge = styled.div`\r\n    position: absolute;\r\n    right: 3px;\r\n    color: red;\r\n`;\r\n","import { StyledMainWrapper, StyledInput, StyledLabel } from './styles';\r\n\r\nconst LabeledInput = ({\r\n    children,\r\n    placeholder,\r\n    file,\r\n    value,\r\n    active,\r\n    capitalize,\r\n    errorborder,\r\n    onChange,\r\n    disabled,\r\n    as,\r\n    innerRef,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <StyledMainWrapper ref={innerRef} file={file} errorborder={errorborder}>\r\n            <StyledInput\r\n                onFocus={(event) => event.target.select()}\r\n                onChange={onChange}\r\n                capitalize={capitalize}\r\n                value={value}\r\n                disabled={disabled}\r\n                {...rest}\r\n                as={as}\r\n            />\r\n            <StyledLabel disabled={disabled}>{placeholder}</StyledLabel>\r\n        </StyledMainWrapper>\r\n    );\r\n};\r\n\r\nexport default LabeledInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1;\r\n\r\n    cursor: pointer;\r\n    background: none;\r\n    border: none;\r\n\r\n    box-shadow: rgb(101 119 134 / 20%) 0px 0px 15px, rgb(101 119 134 / 15%) 0px 0px 3px 1px;\r\n\r\n    min-width: 0px;\r\n    min-height: 0px;\r\n    height: 100%;\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n\r\n    span {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    svg {\r\n        margin-right: 3px;\r\n    }\r\n\r\n    ${(props) => props.background && { background: props.background }}\r\n    ${(props) => props.color && { color: props.color }}\r\n\r\n    ${(props) => props.disabled && { background: 'lightGrey', color: 'black !important', cursor: 'not-allowed' }}\r\n`;\r\n","import { StyledButton } from './styles';\r\n\r\nconst Button = ({ children, disabled, loading, ...rest }) => {\r\n    return (\r\n        <StyledButton className={loading ? 'button--loading' : ''} type='button' disabled={disabled} {...rest}>\r\n            <span className='button_text'>{children}</span>\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { MainWrapper, MainContainer, ContentContainer, Main, Header, InputContainer, SubmitButtonContainer, LogoContainer } from './styles';\r\n\r\nimport Banner from 'components/shared/Banner';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport SubmitButton from 'components/Button';\r\n\r\nconst LoginForm = () => {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <MainWrapper>\r\n            <MainContainer>\r\n                <ContentContainer>\r\n                    <Header>\r\n                        <LogoContainer>\r\n                            <Banner fill={colors.primary} />\r\n                        </LogoContainer>\r\n                    </Header>\r\n                    <Main>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <InputContainer>\r\n                                <LabeledInput placeholder='Usuario' autoFocus />\r\n                            </InputContainer>\r\n                            <InputContainer>\r\n                                <LabeledInput type='password' placeholder='Contraseña' />\r\n                            </InputContainer>\r\n                            <SubmitButtonContainer>\r\n                                <SubmitButton>Enviar</SubmitButton>\r\n                            </SubmitButtonContainer>\r\n                        </form>\r\n                    </Main>\r\n                </ContentContainer>\r\n            </MainContainer>\r\n        </MainWrapper>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { FormContainer, MainWrapper } from './layout.styles';\r\n\r\nimport LoginForm from 'components/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <MainWrapper>\r\n            <FormContainer>\r\n                <LoginForm />\r\n            </FormContainer>\r\n        </MainWrapper>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styled from 'styled-components';\r\n\r\nimport { breakpoints, colors } from 'styles/theme';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 50px;\r\n    height: 100vh;\r\n    width: 100vw;\r\n\r\n    background: pink;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        grid-template-columns: minmax(70px, 240px) 1fr;\r\n    }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    position: sticky;\r\n    top: 0;\r\n    height: 50px;\r\n\r\n    background: ${colors.primary};\r\n\r\n    z-index: 1;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        display: flex;\r\n        height: 100vh;\r\n    }\r\n`;\r\n\r\nexport const Main = styled.main`\r\n    display: flex;\r\n    background: blue;\r\n\r\n    flex-direction: column-reverse;\r\n\r\n    background-image: url('../../assets/patterns/leaves-pattern.png');\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const MainHeader = styled.div`\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    position: sticky;\r\n    bottom: 0;\r\n    height: 50px;\r\n\r\n    background: ${colors.primary};\r\n    z-index: 1;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        flex-direction: row;\r\n        border-bottom: 2px solid ${colors.lightPrimary};\r\n        top: 0;\r\n        bottom: auto;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const HeaderTitleContainer = styled.div`\r\n    display: none;\r\n    color: white;\r\n    margin-left: 10px;\r\n    justify-content: center;\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nexport const DolarValueContainer = styled.div`\r\n    flex-direction: row;\r\n    margin-right: 15px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n\r\n    span {\r\n        color: white;\r\n        font-size: 20px;\r\n        font-weight: 700;\r\n    }\r\n\r\n    h3 {\r\n        color: ${colors.smokyBlack};\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const Heading = styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n    font-weight: 800;\r\n`;\r\n\r\nexport const MainBody = styled.div`\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { breakpoints, colors } from 'styles/theme';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 50px 1fr;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        grid-template-rows: 1fr;\r\n        grid-template-columns: 50px 1fr;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        grid-template-columns: 240px 1fr;\r\n    }\r\n`;\r\n\r\nexport const Header = styled.header``;\r\n\r\nexport const TitleContainer = styled.div``;\r\n\r\nexport const MainWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 1fr 50px;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        grid-template-rows: 30px 1fr;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.bigScreen}) {\r\n        grid-template-rows: 50px 1fr;\r\n    }\r\n`;\r\n\r\nexport const MainHeader = styled.div`\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: ${colors.primary};\r\n\r\n    border-top: 2px solid ${colors.lightPrimary};\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        grid-row: 1;\r\n        border-bottom: 2px solid ${colors.lightPrimary};\r\n        border-top: none;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n    }\r\n`;\r\n\r\nexport const Main = styled.main`\r\n    min-height: 100%;\r\n    overflow: auto;\r\n    background-image: url('../../assets/patterns/leaves-pattern.png');\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors, breakpoints } from 'styles/theme';\r\n\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const MainWrapper = styled.div`\r\n    border-bottom: 2px solid ${colors.lightPrimary};\r\n    height: 100%;\r\n    background: ${colors.primary};\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        border-right: 2px solid ${colors.lightPrimary};\r\n    }\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n    align-items: center;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        display: flex;\r\n        align-items: flex-start;\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n    width: 100%;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        margin-top: 2px;\r\n        margin-bottom: 4px;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n        height: 100%;\r\n        max-height: 100%;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        align-items: flex-start;\r\n    }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    width: 100%;\r\n\r\n    user-select: none;\r\n    pointer-events: auto;\r\n    outline-style: none;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    border-bottom: 2px solid rgba(0, 0, 0, 0);\r\n\r\n    cursor: pointer;\r\n    outline-style: none;\r\n\r\n    :hover {\r\n        background: ${colors.extraLightPrimary};\r\n        color: white;\r\n    }\r\n\r\n    ${(props) =>\r\n        props.hide &&\r\n        `\r\n        @media (max-width: ${breakpoints.mobile}){\r\n        display: none;\r\n}\r\n    `}\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n    display: inline-block;\r\n\r\n    ${(props) => {\r\n        if (props.iconVariant) {\r\n            return `\r\n\r\n            > :nth-child(2){\r\n                display: none;\r\n            }\r\n\r\n            @media (min-width: 988px){\r\n                > :nth-child(1){\r\n                display: none;\r\n            }\r\n\r\n            > :nth-child(2){\r\n                display: flex;\r\n            }\r\n\r\n            }\r\n            `;\r\n        }\r\n    }}\r\n`;\r\n\r\nexport const NavLinkTextContainer = styled.div`\r\n    line-height: 23px;\r\n    font-size: 19px;\r\n    font-weight: 700;\r\n\r\n    min-width: 0px;\r\n    max-width: 100%;\r\n\r\n    overflow-wrap: break-word;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n\r\n    color: white;\r\n\r\n    margin: 0 15px 0 19px;\r\n\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        display: inline-block;\r\n    }\r\n\r\n    @media (max-height: ${breakpoints.tablet}) {\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nexport const NavLinkText = styled.span`\r\n    overflow-wrap: break-word;\r\n    min-width: 0px;\r\n`;\r\n\r\nexport const NavLinkContentWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    place-items: center;\r\n    place-content: center;\r\n    width: 100%;\r\n    transition-property: background-color, box-shadow;\r\n    transition-duration: 0.2s;\r\n\r\n    &.active {\r\n        > ${IconContainer} svg {\r\n            fill: ${colors.secondary};\r\n        }\r\n\r\n        > ${NavLinkTextContainer} {\r\n            color: ${colors.secondary};\r\n        }\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        place-items: start;\r\n        place-content: start;\r\n        padding: 2px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.desktop}) {\r\n        padding: 5px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.bigScreen}) {\r\n        padding: 10px;\r\n    }\r\n`;\r\n","import { NavLink, NavLinkContentWrapper, IconContainer, NavLinkTextContainer, NavLinkText } from '../styles';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nconst NavItem = ({ to, Icon, title, active, dissapearonmobile, ...rest }) => {\r\n    const activeItem = localStorage.getItem('activeLocation');\r\n\r\n    const handleClick = (elementURL) => {\r\n        localStorage.setItem('activeLocation', elementURL);\r\n    };\r\n\r\n    return (\r\n        <NavLink to={to} onClick={() => handleClick(to)} hide={dissapearonmobile ? 1 : 0} {...rest}>\r\n            <NavLinkContentWrapper className={activeItem === to ? 'active' : ''}>\r\n                <IconContainer>\r\n                    <Icon\r\n                        size='28px'\r\n                        weight={activeItem === to ? 'fill' : 'regular'}\r\n                        color={activeItem === to ? colors.secondary : 'white'}\r\n                    />\r\n                </IconContainer>\r\n                <NavLinkTextContainer>\r\n                    <NavLinkText>{title}</NavLinkText>\r\n                </NavLinkTextContainer>\r\n            </NavLinkContentWrapper>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default NavItem;\r\n","import { colors } from 'styles/theme';\r\n\r\nimport { MainWrapper, NavWrapper, LogoContainer, NavContainer, Nav } from './styles';\r\n\r\nimport {\r\n    Package,\r\n    Barcode,\r\n    IdentificationCard,\r\n    Users,\r\n    User,\r\n    Bookmark,\r\n    FileMinus,\r\n    ArchiveBox,\r\n    ClipboardText,\r\n    ShoppingCart,\r\n    ShoppingCartSimple,\r\n    Swap,\r\n    Money,\r\n} from 'phosphor-react';\r\n\r\nimport Banner from 'components/shared/Banner';\r\nimport NavItem from 'components/Navbar/NavItem';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <MainWrapper>\r\n            <NavWrapper>\r\n                <LogoContainer>\r\n                    <Banner height='80px' fill={colors.secondary} />\r\n                </LogoContainer>\r\n                <NavContainer>\r\n                    <Nav>\r\n                        <NavItem Icon={ShoppingCart} title='Control De Ventas' to='/control-de-ventas' />\r\n                        <NavItem Icon={ArchiveBox} title='Inventario' to='/inventario' />\r\n                        <NavItem Icon={ClipboardText} title='Reportes' to='/reportes' />\r\n                        <NavItem Icon={FileMinus} title='Deudas' to='/deudas' />\r\n                        <NavItem Icon={Bookmark} title='Categorias' to='/categorias' dissapearonmobile />\r\n                        <NavItem Icon={Users} title='Clientes' to='/clientes' />\r\n                        <NavItem Icon={Barcode} title='Productos' to='/productos' />\r\n                        <NavItem Icon={ShoppingCartSimple} title='Ventas' to='/ventas' dissapearonmobile />\r\n                        <NavItem Icon={Package} title='Abastecimientos' to='/abastecimientos' dissapearonmobile />\r\n                        <NavItem Icon={IdentificationCard} title='Proveedores' to='/proveedores' dissapearonmobile />\r\n                        <NavItem Icon={User} title='Usuarios' to='/usuarios' dissapearonmobile />\r\n                        <NavItem Icon={Swap} title='Tasas de cambio' to='/tasas-de-cambio' />\r\n                        <NavItem Icon={Money} title='Dinero' to='/dinero' />\r\n                    </Nav>\r\n                </NavContainer>\r\n            </NavWrapper>\r\n        </MainWrapper>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors, breakpoints } from 'styles/theme';\r\n\r\nexport const Container = styled.div`\r\n    justify-content: center;\r\n\r\n    position: fixed;\r\n    top: 0;\r\n\r\n    height: 60px;\r\n    width: 100%;\r\n\r\n    box-shadow: rgba(101 119 134 / 20%) 0px 0px 15px, rgba(101 119 134 / 25%) 0px 0px 3px 1px;\r\n\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    color: white;\r\n    z-index: 3;\r\n\r\n    ${(props) => {\r\n        if (props.type === 'success') {\r\n            return { background: colors.primary };\r\n        } else if (props.type === 'error') {\r\n            return { background: 'red' };\r\n        }\r\n    }}\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        top: auto;\r\n        bottom: 0;\r\n        height: 50px;\r\n    }\r\n`;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst Notification = ({ type, children }) => {\r\n    return <Container type={type}>{children}</Container>;\r\n};\r\n\r\nconst PortalNotification = ({ type, children }) => {\r\n    return ReactDOM.createPortal(<Notification type={type}>{children}</Notification>, document.getElementById('modal-root'));\r\n};\r\n\r\nexport default PortalNotification;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors, breakpoints } from 'styles/theme';\r\n\r\nexport const Wrapper = styled.div`\r\n    height: 100%;\r\n`;\r\n\r\nexport const SeparatorWrapper = styled.div`\r\n    flex-direction: row;\r\n    height: 100%;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    flex: 1;\r\n    height: 100%;\r\n    overflow: auto;\r\n`;\r\n\r\nexport const ToolbarContainer = styled.div`\r\n    background: ${colors.extraLightPrimary};\r\n\r\n    div {\r\n        height: 50px;\r\n    }\r\n`;\r\n\r\nexport const TableContainer = styled.div`\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        max-height: 500px;\r\n    }\r\n`;\r\n\r\nexport const FormContainer = styled.div`\r\n    position: absolute;\r\n\r\n    left: 0;\r\n    right: 0;\r\n    top: 120px;\r\n    margin: auto;\r\n\r\n    height: max-content;\r\n    max-width: ${(props) => props.width || '400px'};\r\n\r\n    background: white;\r\n\r\n    border-radius: 4px;\r\n\r\n    z-index: 4;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        left: 50px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        left: 240px;\r\n    }\r\n`;\r\n\r\nexport const ConfirmContainer = styled.div`\r\n    position: absolute;\r\n    margin: auto;\r\n    top: 100px;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    max-width: 350px;\r\n\r\n    background: white;\r\n\r\n    z-index: 4;\r\n\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const ReportTableContainer = styled.div`\r\n    table {\r\n        th {\r\n            background: ${colors.superLightGray};\r\n            color: black;\r\n            border: none;\r\n            font-size: 16px;\r\n        }\r\n        td {\r\n            color: #95a0a1;\r\n            font-weight: 500;\r\n            border-right: 1px solid ${colors.extraLightGray};\r\n\r\n            :last-child {\r\n                border-right: none;\r\n            }\r\n\r\n            :first-child {\r\n                padding: 0;\r\n            }\r\n\r\n            strong {\r\n                color: #556769;\r\n                font-weight: 500;\r\n            }\r\n\r\n            > svg {\r\n                display: inline-block;\r\n            }\r\n        }\r\n\r\n        tr {\r\n            background: none !important;\r\n            border-bottom: 1px solid rgb(147, 185, 177, 0.2);\r\n\r\n            :last-child {\r\n                border-bottom: none;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors, breakpoints } from 'styles/theme';\r\n\r\nexport const Container = styled.div`\r\n    border-left: 1px solid ${colors.lightGray};\r\n\r\n    display: none;\r\n    position: fixed;\r\n    top: 50%;\r\n    bottom: 50px;\r\n    width: 100%;\r\n    background: ${colors.extraLightGray};\r\n    z-index: 2;\r\n    padding: 5px;\r\n    box-shadow: ${colors.shadow} 0px 0px 15px, ${colors.shadow} 0px 0px 3px 1px;\r\n\r\n    ${(props) =>\r\n        props.show && {\r\n            display: 'flex',\r\n        }}\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        top: 152px;\r\n        right: 0px;\r\n        bottom: 0px;\r\n        max-width: 50%;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        top: 180px;\r\n        max-width: 30%;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.desktop}) {\r\n        display: flex;\r\n        position: static;\r\n    }\r\n`;\r\n\r\nexport const CloseButtonWrapper = styled.div`\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    height: 30px;\r\n    padding: 5px;\r\n\r\n    @media (min-width: ${breakpoints.desktop}) {\r\n        display: none;\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div``;\r\n","import { Container, CloseButtonWrapper } from './styles';\r\n\r\nimport Button from 'components/Button';\r\nimport { X } from 'phosphor-react';\r\n\r\nconst WidgetBox = ({ children, show, onClose }) => {\r\n    return (\r\n        <Container show={show}>\r\n            <CloseButtonWrapper>\r\n                <Button onClick={onClose}>\r\n                    <X size='16px' />\r\n                </Button>\r\n            </CloseButtonWrapper>\r\n            {children}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default WidgetBox;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors, breakpoints } from 'styles/theme';\r\n\r\nexport const StyledFilterContainer = styled.div`\r\n    flex: 1 0 ${(props) => (props.filterHeight ? props.filterHeight : '50px')};\r\n`;\r\n\r\nexport const TableContainer = styled.div`\r\n    max-height: ${(props) => props.maxHeight || '500px'};\r\n    overflow: auto;\r\n`;\r\n\r\nexport const StyledLoadingContainer = styled.div`\r\n    align-items: center;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0px;\r\n    right: 0px;\r\n\r\n    font-size: 22px;\r\n\r\n    border: 1px solid black;\r\n\r\n    background: ${colors.primary};\r\n    color: white;\r\n    z-index: 1;\r\n\r\n    ${(props) =>\r\n        !props.data && {\r\n            position: 'static',\r\n        }}\r\n`;\r\n\r\nexport const StyledNoDataContainer = styled.div`\r\n    align-items: center;\r\n    font-size: 22px;\r\n    border: 1px solid black;\r\n    color: red;\r\n`;\r\nexport const StyledTable = styled.table`\r\n    text-align: center;\r\n    border-collapse: collapse;\r\n    padding-bottom: 5px;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        border-bottom: 1px solid ${colors.shadow};\r\n    }\r\n`;\r\n\r\nexport const TD = styled.td`\r\n    font-size: 17px;\r\n\r\n    ${(props) =>\r\n        props.capitalize && {\r\n            textTransform: 'capitalize',\r\n        }}\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        padding: 10px;\r\n    }\r\n`;\r\n\r\nexport const TH = styled.th`\r\n    padding: 5px;\r\n    font-weight: 700;\r\n    font-size: 19px;\r\n    border-bottom: 1px solid black;\r\n\r\n    position: sticky;\r\n    top: 0px;\r\n\r\n    background: ${colors.smokyBlack};\r\n    color: white;\r\n`;\r\n\r\nexport const TR = styled.tr`\r\n    cursor: pointer;\r\n\r\n    ${(props) =>\r\n        props.active && {\r\n            background: colors.primary + '!important',\r\n            color: 'white',\r\n        }}\r\n\r\n    ${(props) =>\r\n        props.theme === 'dark' && {\r\n            background: colors.black,\r\n            color: 'white',\r\n        }}\r\n\r\n    :nth-child(2n + 0) {\r\n        background: ${(props) => (props.theme === 'light' ? 'rgba(0, 0, 0, 0.05)' : colors.smokyBlack)};\r\n    }\r\n\r\n    :hover {\r\n        background: ${colors.lightPrimary};\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const THead = styled.thead``;\r\n\r\nexport const TFoot = styled.tfoot`\r\n    position: sticky;\r\n    bottom: 0;\r\n    background: lightGrey;\r\n\r\n    td {\r\n        color: black !important;\r\n        font-weight: 800 !important;\r\n        padding: 5px 0;\r\n    }\r\n`;\r\n\r\nexport const TBody = styled.tbody``;\r\n\r\nexport const PaginationContainer = styled.div`\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    flex: 1 0 50px;\r\n\r\n    > ul,\r\n    li {\r\n        display: flex !important;\r\n        flex-direction: row;\r\n        padding: 0;\r\n        margin: 0;\r\n        height: 50px;\r\n    }\r\n\r\n    > ul li {\r\n        background: ${colors.lightGray};\r\n        font-weight: 700;\r\n        cursor: pointer;\r\n\r\n        :hover {\r\n            background: ${colors.lightPrimary};\r\n        }\r\n\r\n        &.active {\r\n            background: ${colors.primary};\r\n        }\r\n    }\r\n\r\n    > ul a {\r\n        display: flex;\r\n        padding: 0px 20px;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n        border: 1px solid black;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        align-items: flex-end;\r\n    }\r\n`;\r\n","import {\r\n    StyledTable,\r\n    THead,\r\n    TBody,\r\n    TFoot,\r\n    TH,\r\n    TR,\r\n    TD,\r\n    StyledLoadingContainer,\r\n    StyledFilterContainer,\r\n    StyledNoDataContainer,\r\n    TableContainer,\r\n    PaginationContainer,\r\n} from './styles.js';\r\n\r\nconst Table = ({ children, ...props }) => {\r\n    return <StyledTable {...props}>{children}</StyledTable>;\r\n};\r\n\r\nTable.TableContainer = ({ children, maxHeight }) => {\r\n    return <TableContainer maxHeight={maxHeight}>{children}</TableContainer>;\r\n};\r\n\r\nTable.Head = ({ children, ...props }) => {\r\n    return <THead {...props}>{children}</THead>;\r\n};\r\n\r\nTable.Body = ({ children, ...props }) => {\r\n    return <TBody {...props}>{children}</TBody>;\r\n};\r\n\r\nTable.Foot = ({ children, ...props }) => {\r\n    return <TFoot {...props}>{children}</TFoot>;\r\n};\r\n\r\nTable.TH = ({ children, ...props }) => {\r\n    return <TH {...props}>{children}</TH>;\r\n};\r\n\r\nTable.TR = ({ children, ...props }) => {\r\n    return <TR {...props}>{children}</TR>;\r\n};\r\n\r\nTable.TD = ({ children, ...props }) => {\r\n    return <TD {...props}>{children}</TD>;\r\n};\r\n\r\nTable.LoadingContainer = ({ children, data }) => {\r\n    return <StyledLoadingContainer data={data}>{children}</StyledLoadingContainer>;\r\n};\r\n\r\nTable.FilterContainer = ({ children, filterHeight }) => {\r\n    return <StyledFilterContainer filterHeight={filterHeight}>{children}</StyledFilterContainer>;\r\n};\r\n\r\nTable.NoDataContainer = ({ children }) => {\r\n    return <StyledNoDataContainer>{children}</StyledNoDataContainer>;\r\n};\r\n\r\nTable.PaginationContainer = ({ children }) => {\r\n    return <PaginationContainer>{children}</PaginationContainer>;\r\n};\r\n\r\nexport default Table;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n\r\n    outline: none;\r\n    height: 100%;\r\n`;\r\n","import { Input } from './styles';\r\n\r\nconst TableFilterInput = ({ placeholder, value, onChange, ...rest }) => {\r\n    return <Input type=\"search\" placeholder={placeholder} value={value} onChange={onChange} {...rest} />;\r\n};\r\n\r\nexport default TableFilterInput;\r\n","import { useState } from 'react';\r\n\r\nimport Pagination from 'react-paginate';\r\n\r\nimport { ArrowFatLeft, ArrowFatRight } from 'phosphor-react';\r\n\r\nconst Paginate = ({ children, pageCount, onPaginate, ...props }) => {\r\n    const [selectedPage, setSelectedPage] = useState(0);\r\n\r\n    const handlePageSelect = (selectedPage) => {\r\n        setSelectedPage(selectedPage);\r\n        onPaginate(selectedPage + 1);\r\n    };\r\n\r\n    return (\r\n        <Pagination\r\n            previousLabel={<ArrowFatLeft size='20px' />}\r\n            disableInitialCallback\r\n            nextLabel={<ArrowFatRight size='20px' />}\r\n            breakLabel={'...'}\r\n            breakClassName={'break-me'}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            containerClassName={'pagination'}\r\n            activeClassName={'active'}\r\n            onPageChange={(currentPage) => handlePageSelect(currentPage.selected)}\r\n            forcePage={pageCount === 1 ? 0 : selectedPage}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import { useState, useEffect } from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nimport Table from './Table';\r\nimport TableFilterInput from 'components/TableFilterInput';\r\nimport Pagination from 'components/Pagination';\r\nimport { MinusCircle } from 'phosphor-react';\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst CustomTable = ({\r\n    data = [],\r\n    loading,\r\n    columns = [],\r\n    filterPlaceholder,\r\n    pageCount,\r\n    capitalize,\r\n    async = true,\r\n    theme = 'light',\r\n    onFilter,\r\n    onRowSelect,\r\n    onPaginate,\r\n    onDeleteRow,\r\n    multiSelect,\r\n    selectedRows = [],\r\n    maxHeight,\r\n    filterHeight,\r\n    showFooter = false,\r\n}) => {\r\n    const { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow } = useTable({ columns, data });\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (selectedRows && selectedRows.length > 0) {\r\n            setSelected(selectedRows);\r\n        } else if (selectedRows === null) {\r\n            setSelected([]);\r\n        }\r\n    }, [selectedRows]);\r\n\r\n    const handleClick = (event, row) => {\r\n        if (event.target.tagName !== 'BUTTON') {\r\n            const rowIsAlreadySelected = selected.some((r) => r.id === row.id);\r\n\r\n            if (multiSelect) {\r\n                let newSelectedRows = [];\r\n\r\n                if (!rowIsAlreadySelected) {\r\n                    newSelectedRows = [...selected, row];\r\n                } else {\r\n                    newSelectedRows = selected.filter((r) => r.id !== row.id);\r\n                }\r\n                setSelected(newSelectedRows);\r\n                onRowSelect(newSelectedRows);\r\n            } else {\r\n                if (!rowIsAlreadySelected) {\r\n                    setSelected([row]);\r\n                    onRowSelect(row);\r\n                } else {\r\n                    setSelected([]);\r\n                    onRowSelect(null);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const onFilterDebounced = debounce((value) => {\r\n        onFilter(value);\r\n    }, 500);\r\n\r\n    return (\r\n        <>\r\n            {onFilter && (\r\n                <Table.FilterContainer filterHeight={filterHeight}>\r\n                    <TableFilterInput\r\n                        onChange={(event) => onFilterDebounced(event.target.value)}\r\n                        placeholder={filterPlaceholder}\r\n                        autoFocus\r\n                    />\r\n                </Table.FilterContainer>\r\n            )}\r\n            <Table.TableContainer maxHeight={maxHeight}>\r\n                <Table {...getTableProps()}>\r\n                    <Table.Head>\r\n                        {headerGroups.map((headerGroup) => (\r\n                            <Table.TR {...headerGroup.getHeaderGroupProps()}>\r\n                                {onDeleteRow && <Table.TH></Table.TH>}\r\n                                {headerGroup.headers.map((column) => (\r\n                                    <Table.TH {...column.getHeaderProps()}>{column.render('Header')}</Table.TH>\r\n                                ))}\r\n                            </Table.TR>\r\n                        ))}\r\n                    </Table.Head>\r\n                    <Table.Body {...getTableBodyProps()}>\r\n                        {rows.map((row) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <Table.TR\r\n                                    theme={theme}\r\n                                    active={selected.some((r) => r.id === row.original.id)}\r\n                                    {...row.getRowProps({\r\n                                        onClick: onRowSelect\r\n                                            ? (event) => {\r\n                                                  handleClick(event, row.original);\r\n                                              }\r\n                                            : null,\r\n                                    })}\r\n                                >\r\n                                    {onDeleteRow && (\r\n                                        <Table.TD>\r\n                                            <button\r\n                                                onClick={() => onDeleteRow(row.original)}\r\n                                                style={{ padding: '5px 10px', background: 'red', cursor: 'pointer', borderRadius: '5px' }}\r\n                                            >\r\n                                                <MinusCircle color='white' />\r\n                                            </button>\r\n                                        </Table.TD>\r\n                                    )}\r\n                                    {row.cells.map((cell, index) => {\r\n                                        return (\r\n                                            <Table.TD\r\n                                                title={cell.value}\r\n                                                capitalize={capitalize && capitalize.includes(index)}\r\n                                                {...cell.getCellProps()}\r\n                                            >\r\n                                                {cell.render('Cell')}\r\n                                            </Table.TD>\r\n                                        );\r\n                                    })}\r\n                                </Table.TR>\r\n                            );\r\n                        })}\r\n                    </Table.Body>\r\n                    {showFooter && (\r\n                        <Table.Foot>\r\n                            {footerGroups.map((group) => (\r\n                                <tr {...group.getFooterGroupProps()}>\r\n                                    {group.headers.map((column) => (\r\n                                        <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </Table.Foot>\r\n                    )}\r\n                </Table>\r\n            </Table.TableContainer>\r\n            {onPaginate && data.length > 0 && (\r\n                <Table.PaginationContainer>\r\n                    <Pagination pageCount={pageCount} onPaginate={onPaginate} />\r\n                </Table.PaginationContainer>\r\n            )}\r\n            {loading && <Table.LoadingContainer data={data.length ? 1 : 0}>Cargando...</Table.LoadingContainer>}\r\n            {async && !data.length && !loading && <Table.NoDataContainer>No hay recursos en la base de datos</Table.NoDataContainer>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomTable;\r\n","export const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Cédula',\r\n        accessor: 'cedula',\r\n        Cell: ({ value }) => {\r\n            return Number(value).toLocaleString();\r\n        },\r\n    },\r\n    {\r\n        Header: 'Total $',\r\n        accessor: 'total',\r\n        Cell: ({ value }) => {\r\n            return value.toFixed(2);\r\n        },\r\n    },\r\n];\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport { COLUMNS } from './columns';\r\nimport { ReportTableContainer } from 'components/CommonLayout/main.layout';\r\n\r\nconst TopClientsTable = ({ data, loading, maxHeight }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    return (\r\n        <ReportTableContainer>\r\n            <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} loading={loading} />\r\n        </ReportTableContainer>\r\n    );\r\n};\r\n\r\nexport default TopClientsTable;\r\n","import styled from 'styled-components';\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-grow: 1;\r\n    background: white;\r\n    box-shadow: rgb(101 119 134 / 20%) 0px 0px 15px, rgb(101 119 134 / 15%) 0px 0px 3px 1px;\r\n    border-radius: 16px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    flex: 0 0 50px;\r\n    justify-content: center;\r\n    background: ${colors.superLightGray};\r\n\r\n    padding-left: 20px;\r\n\r\n    border-top-left-radius: 16px;\r\n    border-top-right-radius: 16px;\r\n    border-bottom: 1px solid ${colors.lightGray};\r\n\r\n    h2 {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n`;\r\n\r\nexport const Footer = styled.div``;\r\n","import { Wrapper, Header, Body, Footer } from './styles';\r\n\r\nconst Card = ({ children }) => {\r\n    return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nCard.Header = ({ children }) => {\r\n    return <Header>{children}</Header>;\r\n};\r\n\r\nCard.Body = ({ children }) => {\r\n    return <Body>{children}</Body>;\r\n};\r\n\r\nexport default Card;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/clients';\r\nconst REPORT_BASE_URL = '/api/reports/client';\r\n\r\nexport const getClients = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const getTopClients = async () => {\r\n    const response = await axios.get(`${REPORT_BASE_URL}/top`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createClient = async (clientData) => {\r\n    const response = await axios.post(BASE_URL, clientData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateClient = async (id, clientData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, clientData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteClient = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport {} from './styles';\r\nimport WidgetBox from 'components/WidgetBox';\r\nimport TopClientsTable from 'components/ModuleTables/TopClientsTable';\r\nimport Card from 'components/Card';\r\nimport { getTopClients } from 'api/clients';\r\n\r\nconst ClientWidgets = ({ show, onClose }) => {\r\n    const [topClients, setTopClients] = useState([]);\r\n    const [topSalesRange, setTopSalesRange] = useState('last_week');\r\n    const [topDebtsRange, setTopDebtsRange] = useState('last_week');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchTopClients = async () => {\r\n            setLoading(true);\r\n            const response = await getTopClients();\r\n            setLoading(false);\r\n            if (!response.error) {\r\n                setTopClients(response);\r\n            }\r\n        };\r\n\r\n        fetchTopClients();\r\n    }, []);\r\n\r\n    return (\r\n        <WidgetBox onClose={onClose} show={show}>\r\n            <div style={{ gap: '10px' }}>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <h3>Top 5 mejores clientes</h3>\r\n                    </Card.Header>\r\n                    <div style={{ alignItems: 'flex-end' }}>\r\n                        <select onChange={(event) => setTopSalesRange(event.target.value)} value={topSalesRange}>\r\n                            <option value='lifetime'>De por vida</option>\r\n                            <option value='last_month'>Último més</option>\r\n                            <option value='last_week'>Última semana</option>\r\n                            <option value='today'>Hoy</option>\r\n                        </select>\r\n                    </div>\r\n                    <Card.Body>\r\n                        {topClients.sales && <TopClientsTable data={topClients.sales[topSalesRange]} maxHeight='200px' loading={loading} />}\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <Card.Header>\r\n                        <h3>Top 5 clientes deudores</h3>\r\n                    </Card.Header>\r\n                    <div style={{ alignItems: 'flex-end' }}>\r\n                        <select onChange={(event) => setTopDebtsRange(event.target.value)} value={topDebtsRange}>\r\n                            <option value='lifetime'>De por vida</option>\r\n                            <option value='last_month'>Último més</option>\r\n                            <option value='last_week'>Última semana</option>\r\n                            <option value='today'>Hoy</option>\r\n                        </select>\r\n                    </div>\r\n                    <Card.Body>\r\n                        {topClients.debts && <TopClientsTable data={topClients.debts[topDebtsRange]} maxHeight='200px' loading={loading} />}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </WidgetBox>\r\n    );\r\n};\r\n\r\nexport default ClientWidgets;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const usePaginatedResource = ({ page, filter, fetching, count, fetchOnMount = true }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchResource = useCallback(async () => {\r\n        setLoading(true);\r\n        const data = await fetching({ page, filter, count });\r\n        if (data.error) {\r\n            setError({ path: null, message: data.error.message });\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setData(data);\r\n        setLoading(false);\r\n    }, [page, filter, fetching, count]);\r\n\r\n    useEffect(() => {\r\n        if (fetchOnMount) fetchResource();\r\n    }, [page, filter, fetchResource, count, fetchOnMount]);\r\n\r\n    return { data, setData, loading, error, fetchResource };\r\n};\r\n","import { DateTime } from 'luxon';\r\n\r\nexport default function formData(date) {\r\n    return DateTime.fromISO(date, { setZone: true }).toFormat('F');\r\n}\r\n","import NumericInput from 'react-number-format';\r\nimport formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Cédula',\r\n        accessor: 'cedula',\r\n        Cell: (props) => {\r\n            return props.value.toLocaleString('es-VE');\r\n        },\r\n    },\r\n    {\r\n        Header: 'Teléfono',\r\n        accessor: 'phoneNumber',\r\n        Cell: (props) => {\r\n            if (props.value !== '') {\r\n                return <NumericInput displayType='text' value={props.value} format='(####) ###-####' />;\r\n            } else {\r\n                return 'No registrado';\r\n            }\r\n        },\r\n    },\r\n    {\r\n        Header: 'Creado',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n];\r\n","import { useState, useCallback } from 'react';\r\nlet timeout;\r\n\r\nexport const useNotification = (initialState) => {\r\n    const [notification, setNotification] = useState(initialState);\r\n\r\n    const showNotification = useCallback((type, text, expiration = 2000) => {\r\n        if (timeout) clearTimeout(timeout);\r\n        setNotification({ type, text });\r\n        timeout = setTimeout(() => {\r\n            setNotification(null);\r\n        }, expiration);\r\n    }, []);\r\n\r\n    return { notification, showNotification };\r\n};\r\n","import { useState, useMemo, useEffect } from 'react';\r\n\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getClients } from 'api/clients';\r\n\r\nimport Table from 'components/Table';\r\n\r\nimport { COLUMNS } from './columns.js';\r\n\r\nconst ClientsTable = ({ onClientSelect, selectedRows, shouldRefresh, showNotification }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getClients });\r\n\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) showNotification('error', error.message, 3000);\r\n    }, [error, showNotification]);\r\n\r\n    return (\r\n        <Table\r\n            selectedRows={selectedRows}\r\n            onRowSelect={onClientSelect}\r\n            loading={loading}\r\n            data={data.records}\r\n            columns={memoizedColumns}\r\n            onFilter={setFilter}\r\n            filterPlaceholder='Buscar por id, nombre, cédula o teléfono'\r\n            onPaginate={setPage}\r\n            pageCount={data.pageCount}\r\n            capitalize={[1, 3]}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ClientsTable;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const Container = styled.div`\r\n    flex-direction: row;\r\n    justify-content: center;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background: none;\r\n\r\n    box-shadow: ${colors.shadow} 0px 0px 15px, ${colors.shadow} 0px 0px 3px 1px;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n    height: 100%;\r\n    margin: 0px 5px;\r\n\r\n    > button {\r\n        color: white;\r\n    }\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n\r\n    background: ${(props) => props.color};\r\n`;\r\n","import { Container, ButtonContainer } from './styles';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nimport { UserCirclePlus, UserCircleGear, UserCircleMinus } from 'phosphor-react';\r\n\r\nimport Button from 'components/Button';\r\n\r\nconst Toolbar = ({ children, onCreate, onEdit, onDelete, deleteText, recordSelected }) => {\r\n    return (\r\n        <Container>\r\n            {children}\r\n            {onCreate && (\r\n                <ButtonContainer color={colors.primary}>\r\n                    <Button name='ToolbarCreate' onClick={onCreate}>\r\n                        <UserCirclePlus size='24px' />\r\n                        Nuevo\r\n                    </Button>\r\n                </ButtonContainer>\r\n            )}\r\n            {onEdit && (\r\n                <ButtonContainer color={colors.secondary}>\r\n                    <Button name='ToolbarEdit' onClick={onEdit} disabled={!recordSelected}>\r\n                        <UserCircleGear size='24px' />\r\n                        Editar\r\n                    </Button>\r\n                </ButtonContainer>\r\n            )}\r\n            {onDelete && (\r\n                <ButtonContainer color='red'>\r\n                    <Button name='ToolbarDelete' onClick={onDelete} disabled={!recordSelected}>\r\n                        <UserCircleMinus size='24px' />\r\n                        {deleteText || 'Eliminar'}\r\n                    </Button>\r\n                </ButtonContainer>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Toolbar;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledModal = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    ${(props) =>\r\n        props.backdrop &&\r\n        `\r\n        background: rgba(0, 0, 0, .6);\r\n    `}\r\n\r\n    z-index: ${(props) => (props.zindex ? props.zindex : '3')};\r\n`;\r\n","import ReactDom from 'react-dom';\r\n\r\nimport { StyledModal } from './styles';\r\n\r\nconst Modal = ({ children, backdrop, show = false, handleClose, zindex }) => {\r\n    return (\r\n        show && (\r\n            <>\r\n                <StyledModal zindex={zindex} onClick={handleClose} backdrop={backdrop}></StyledModal>\r\n                {children}\r\n            </>\r\n        )\r\n    );\r\n};\r\n\r\nconst PortalModal = ({ children, backdrop = true, show = false, handleClose, zindex }) => {\r\n    return ReactDom.createPortal(\r\n        <Modal backdrop={backdrop} show={show} handleClose={handleClose} zindex={zindex}>\r\n            {children}\r\n        </Modal>,\r\n        document.getElementById('modal-root')\r\n    );\r\n};\r\n\r\nexport default PortalModal;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n    min-height: 50px;\r\n    border-bottom: 1px solid ${colors.shadow};\r\n`;\r\n\r\nexport const CloseButtonContainer = styled.div`\r\n    flex: 0 1 20px;\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n    flex: 1;\r\n    align-items: flex-start;\r\n    margin-left: 20px;\r\n    margin-bottom: 10px;\r\n\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n`;\r\n\r\nexport const BodyContainer = styled.div`\r\n    padding: 10px;\r\n    gap: 10px;\r\n    max-height: 550px;\r\n    overflow-y: ${(props) => (props.overflow ? 'auto' : 'none')};\r\n\r\n    h4,\r\n    h2 {\r\n        margin: 0 0 5px 0;\r\n    }\r\n`;\r\n\r\nexport const FooterWrapper = styled.div`\r\n    border-top: 1px solid ${colors.shadow};\r\n`;\r\n\r\nexport const FooterContainer = styled.div`\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    flex: 0 1 50px;\r\n\r\n    padding: 5px 0;\r\n`;\r\n\r\nexport const InlineContainer = styled.div`\r\n    flex-direction: row;\r\n    flex: 0 1 auto;\r\n    gap: 10px;\r\n\r\n    div {\r\n        max-width: 100%;\r\n    }\r\n`;\r\nexport const InputContainer = styled.div`\r\n    flex: 0 1 100%;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n    background: ${(props) => (props.color ? props.color : 'transparent')};\r\n    margin: 0 5px;\r\n\r\n    > button {\r\n        color: white;\r\n    }\r\n\r\n    svg {\r\n        margin: 0;\r\n    }\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    font-weight: 500;\r\n    color: red;\r\n    padding-top: 5px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const ErrorContainer = styled.span`\r\n    display: flex;\r\n    flex: 0 0 20px;\r\n    margin: 0 20px;\r\n    color: white;\r\n    font-size: 18px;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n    min-width: 48px;\r\n    max-width: 48px;\r\n    background-image: url(${(props) => props.url});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n`;\r\n\r\nexport const TableContainer = styled.div`\r\n    * {\r\n        font-size: 16px;\r\n        padding: 0;\r\n        margin: 0;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n    }\r\n\r\n    td {\r\n        max-width: 80px;\r\n    }\r\n\r\n    h4 {\r\n        margin-top: 10px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport const LoadingDiv = styled.div`\r\n    align-items: center;\r\n    color: green;\r\n    font-size: 19px;\r\n    font-weight: 600;\r\n`;\r\n","import { useState } from 'react';\r\n\r\nexport const useFormError = (initialState) => {\r\n    const [errors, setErrors] = useState(initialState);\r\n\r\n    const handleErrors = (errorObject) => {\r\n        let errorList = {};\r\n        if (typeof errorObject[Symbol.iterator] === 'function') {\r\n            errorObject.forEach((error) => {\r\n                errorList['' + error.path] = error.message;\r\n            });\r\n        } else {\r\n            errorList[errorObject.path] = errorObject.message;\r\n        }\r\n        setErrors({ ...errorList });\r\n    };\r\n\r\n    return { errors, handleErrors, setErrors };\r\n};\r\n","const validateSchema = async (data, schema) => {\r\n    let errors = [];\r\n\r\n    try {\r\n        await schema.validate(data, { abortEarly: false });\r\n    } catch (error) {\r\n        error.inner.forEach((err) => {\r\n            errors.push({\r\n                path: err.path,\r\n                message: err.message,\r\n            });\r\n        });\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default validateSchema;\r\n","import { useState } from 'react';\r\nimport { useFormError } from 'hooks/formError';\r\nimport { ErrorAlert } from 'components/CommonLayout/form.layout';\r\nimport validateSchema from 'utils/validateSchema';\r\n\r\nexport const useForm = ({\r\n    initialState,\r\n    action,\r\n    createResource,\r\n    editResource,\r\n    deleteResource,\r\n    schema,\r\n    onSubmitSuccess,\r\n    submitSuccessMessage,\r\n    onDeleteSuccess,\r\n}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [formData, setFormData] = useState(initialState);\r\n    const { errors, handleErrors, setErrors } = useFormError([]);\r\n\r\n    let successMessage = submitSuccessMessage || {\r\n        create: 'El recurso fue creado con éxito',\r\n        edit: 'El recurso fue actualizado con éxito',\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        let targetName = event.target.name;\r\n\r\n        if (event.target.type === 'file') {\r\n            setFormData({ ...formData, [targetName]: event.target.files[0] });\r\n        } else {\r\n            setFormData({ ...formData, [targetName]: event.target.value });\r\n        }\r\n    };\r\n\r\n    const handleNestedChange = (selector, index, key, value) => {\r\n        let data = JSON.stringify(formData);\r\n        data = JSON.parse(data);\r\n        data[selector][index][key] = value;\r\n\r\n        setFormData({ ...data });\r\n    };\r\n\r\n    const handleNumericInput = (value, selector) => {\r\n        let data = JSON.stringify(formData);\r\n        data = JSON.parse(data);\r\n        data[selector] = value;\r\n        setFormData({ ...data });\r\n    };\r\n\r\n    const printError = (path) => {\r\n        if (errors[path]) {\r\n            return <ErrorAlert>{errors[path]}</ErrorAlert>;\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const hasError = (path) => {\r\n        return errors[path];\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const errors = await validateSchema(formData, schema);\r\n        handleErrors(errors);\r\n\r\n        if (!errors.length) {\r\n            let response = {};\r\n\r\n            if (!loading) {\r\n                setLoading(true);\r\n                try {\r\n                    if (action === 'create') {\r\n                        response = await createResource(formData);\r\n                    } else if (action === 'edit') {\r\n                        response = await editResource(formData.id, formData);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n\r\n                if (response.error) {\r\n                    handleErrors(response.error);\r\n                } else {\r\n                    onSubmitSuccess && onSubmitSuccess(successMessage[action], formData);\r\n                }\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        if (deleteResource) {\r\n            const response = await deleteResource(id);\r\n\r\n            if (response.error) {\r\n                handleErrors(response.error);\r\n            } else {\r\n                onDeleteSuccess();\r\n            }\r\n        }\r\n    };\r\n\r\n    return {\r\n        loading,\r\n        handleNestedChange,\r\n        handleChange,\r\n        handleNumericInput,\r\n        handleSubmit,\r\n        handleDelete,\r\n        formData,\r\n        setFormData,\r\n        submitErrors: errors,\r\n        setSubmitErrors: setErrors,\r\n        printError,\r\n        hasError,\r\n        onDeleteSuccess,\r\n    };\r\n};\r\n","import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('El campo nombre es requerido'),\r\n    cedula: yup.string().min(7, 'Cédula inválida').max(8, 'Cédula inválida').required('El campo cédula es requerido'),\r\n    phoneNumber: yup.string().test('is-invalid', 'El teléfono debe contener 11 caracteres', async (value) => {\r\n        return value.length === 0 || value.length === 11;\r\n    }),\r\n});\r\n\r\nexport default schema;\r\n","import {\r\n    Form,\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    InputContainer,\r\n    ButtonContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    ErrorContainer,\r\n} from 'components/CommonLayout/form.layout';\r\n\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport Button from 'components/Button';\r\nimport NumberFormatInput from 'react-number-format';\r\nimport { colors } from 'styles/theme';\r\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { createClient, updateClient } from 'api/clients';\r\nimport clientSchema from 'validations/schemas/client';\r\n\r\nconst ClientForm = ({ client, action, handleClose, onSubmit, autoFocus = 'name' }) => {\r\n    const { handleChange, handleNumericInput, handleSubmit, formData, printError, hasError } = useForm({\r\n        initialState: {\r\n            name: '',\r\n            cedula: '',\r\n            phoneNumber: '',\r\n            ...client,\r\n        },\r\n        action,\r\n        createResource: createClient,\r\n        editResource: updateClient,\r\n        schema: clientSchema,\r\n        onSubmitSuccess: onSubmit,\r\n    });\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <HeaderContainer>\r\n                <CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <TitleContainer>{action === 'create' ? 'Crear cliente' : 'Editar cliente'}</TitleContainer>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onChange={handleChange}\r\n                        placeholder='Nombre'\r\n                        name='name'\r\n                        value={formData.name}\r\n                        autoFocus={autoFocus === 'name'}\r\n                        capitalize\r\n                        required\r\n                        errorborder={hasError('name')}\r\n                    />\r\n                    {printError('name')}\r\n                </InputContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onValueChange={(values) => handleNumericInput(values.value, 'cedula')}\r\n                        placeholder='Cédula'\r\n                        name='cedula'\r\n                        value={formData.cedula}\r\n                        autoFocus={autoFocus === 'cedula'}\r\n                        thousandSeparator='.'\r\n                        decimalSeparator=','\r\n                        decimalScale={0}\r\n                        as={NumberFormatInput}\r\n                        required\r\n                        errorborder={hasError('cedula')}\r\n                    />\r\n                    {printError('cedula')}\r\n                </InputContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onValueChange={(values) => handleNumericInput(values.value, 'phoneNumber')}\r\n                        placeholder='Teléfono'\r\n                        name='phoneNumber'\r\n                        value={formData.phoneNumber}\r\n                        autoFocus={autoFocus === 'phoneNumber'}\r\n                        format='( #### ) - ### - ####'\r\n                        allowEmptyFormatting\r\n                        mask='_'\r\n                        type='tel'\r\n                        as={NumberFormatInput}\r\n                        errorborder={hasError('phoneNumber')}\r\n                    />\r\n                    {printError('phoneNumber')}\r\n                </InputContainer>\r\n            </BodyContainer>\r\n            <FooterWrapper>\r\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\r\n                <FooterContainer>\r\n                    <ButtonContainer color={colors.primary}>\r\n                        <Button type='submit'>\r\n                            <BookBookmark size={24} />\r\n                            Enviar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <ButtonContainer color='red'>\r\n                        <Button onClick={handleClose}>\r\n                            <XCircle size={24} />\r\n                            Cancelar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                </FooterContainer>\r\n            </FooterWrapper>\r\n        </Form>\r\n    );\r\n};\r\nexport default ClientForm;\r\n","import styled from 'styled-components';\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const Container = styled.div`\r\n    flex: 1;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    flex: 0 1 auto;\r\n    border-bottom: 1px solid ${colors.shadow};\r\n`;\r\n\r\nexport const Title = styled.span`\r\n    margin-left: 10px;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    padding: 5px 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    flex: 1 1 auto;\r\n    padding: 20px 0;\r\n`;\r\n\r\nexport const Description = styled.span`\r\n    margin-left: 10px;\r\n    font-size: 19px;\r\n    font-weight: 400;\r\n`;\r\nexport const Footer = styled.div`\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    flex: 0 1 auto;\r\n    height: 50px;\r\n    border-top: 1px solid ${colors.shadow};\r\n    padding: 5px 0;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n    background: ${(props) => props.color};\r\n    margin-right: 10px;\r\n\r\n    > button {\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const CloseButtonContainer = styled.div`\r\n    align-items: flex-end;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n","import { Container, Header, Title, Body, Description, Footer, ButtonContainer, CloseButtonContainer } from './styles';\r\n\r\nimport Button from 'components/Button';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nimport { X } from 'phosphor-react';\r\n\r\nconst ConfirmAlert = ({ size = 'sm', message, additionalActions = [], handleClose, callback }) => {\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <Title>Confirmación</Title>\r\n            </Header>\r\n            <Body>\r\n                <Description>{message || '¿Está seguro que desea realizar esta acción?'}</Description>\r\n            </Body>\r\n            <Footer>\r\n                {additionalActions.length > 0 &&\r\n                    additionalActions.map((action, index) => {\r\n                        return (\r\n                            <ButtonContainer key={index} color={action.color}>\r\n                                <Button onClick={action.callback}>{action.name}</Button>\r\n                            </ButtonContainer>\r\n                        );\r\n                    })}\r\n                <ButtonContainer color={colors.primary}>\r\n                    <Button onClick={callback} autoFocus>\r\n                        Aceptar\r\n                    </Button>\r\n                </ButtonContainer>\r\n                <ButtonContainer color='red'>\r\n                    <Button onClick={handleClose}>Cancelar</Button>\r\n                </ButtonContainer>\r\n            </Footer>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ConfirmAlert;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    Wrapper,\r\n    SeparatorWrapper,\r\n    ContentContainer,\r\n    ToolbarContainer,\r\n    TableContainer,\r\n    FormContainer,\r\n    ConfirmContainer,\r\n} from 'components/CommonLayout/main.layout';\r\n\r\nimport ClientWidgets from 'components/Widgets/ClientWidgets';\r\nimport ClientsTable from 'components/ModuleTables/ClientsTable';\r\nimport Toolbar from 'components/Toolbar';\r\nimport Modal from 'components/Modal';\r\nimport ClientForm from './CRUDForm';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport { deleteClient } from 'api/clients';\r\nimport Notification from 'components/Notification';\r\nimport { useNotification } from 'hooks/notification';\r\n\r\nconst Clients = () => {\r\n    const [selectedClient, setSelectedClient] = useState(null);\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const [showWidgets, setShowWidgets] = useState(false);\r\n    const { notification, showNotification } = useNotification(null);\r\n\r\n    useEffect(() => {\r\n        setShowWidgets(selectedClient ? true : false);\r\n    }, [selectedClient]);\r\n\r\n    useEffect(() => {\r\n        if (CRUDAction === 'refresh') setSelectedClient(null);\r\n    }, [CRUDAction]);\r\n\r\n    const handleCRUD = (event) => {\r\n        if (event.currentTarget.name === 'ToolbarCreate') {\r\n            setCRUDAction('create');\r\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\r\n            setCRUDAction('edit');\r\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\r\n            setCRUDAction('delete');\r\n        }\r\n        setShowWidgets(false);\r\n    };\r\n\r\n    const handleSubmit = (submitMessage) => {\r\n        showNotification('success', submitMessage, 2000);\r\n        setCRUDAction('refresh');\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteClient(selectedClient.id);\r\n        setCRUDAction('refresh');\r\n        setSelectedClient(null);\r\n        return response;\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SeparatorWrapper>\r\n                <ContentContainer>\r\n                    <ToolbarContainer>\r\n                        <Toolbar recordSelected={selectedClient} onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} />\r\n                    </ToolbarContainer>\r\n                    <TableContainer>\r\n                        <ClientsTable\r\n                            shouldRefresh={CRUDAction === 'refresh'}\r\n                            selectedRows={selectedClient}\r\n                            onClientSelect={setSelectedClient}\r\n                            showNotification={showNotification}\r\n                        />\r\n                    </TableContainer>\r\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\r\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\r\n                            <FormContainer>\r\n                                <ClientForm\r\n                                    onSubmit={handleSubmit}\r\n                                    action={CRUDAction}\r\n                                    client={CRUDAction === 'edit' && selectedClient}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                />\r\n                            </FormContainer>\r\n                        )}\r\n                        {CRUDAction === 'delete' && (\r\n                            <ConfirmContainer>\r\n                                <ConfirmAlert\r\n                                    showNotification={showNotification}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                    callback={handleDelete}\r\n                                />\r\n                            </ConfirmContainer>\r\n                        )}\r\n                    </Modal>\r\n                </ContentContainer>\r\n                <ClientWidgets\r\n                    activeRecord={selectedClient}\r\n                    show={showWidgets}\r\n                    onClose={() => {\r\n                        setShowWidgets(false);\r\n                        setSelectedClient(null);\r\n                    }}\r\n                />\r\n            </SeparatorWrapper>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Clients;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/users';\r\n\r\nexport const getUsers = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createUser = async (userData) => {\r\n    const response = await axios.post(BASE_URL, userData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateUser = async (id, userData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, userData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteUser = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Nombre de usuario',\r\n        accessor: 'username',\r\n    },\r\n    {\r\n        Header: 'Nivel de permiso',\r\n        accessor: 'permissions',\r\n    },\r\n    {\r\n        Header: 'Creado',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n];\r\n","import { useState, useMemo, useEffect } from 'react';\r\n\r\nimport Table from 'components/Table';\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getUsers } from 'api/users';\r\n\r\nimport { COLUMNS } from './columns';\r\n\r\nconst UsersTable = ({ onUserSelect, selectedRows, shouldRefresh, showNotification }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [filter, setFilter] = useState('');\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getUsers });\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) showNotification('error', error.message, 3000);\r\n    }, [error, showNotification]);\r\n\r\n    return (\r\n        <Table\r\n            selectedRows={selectedRows}\r\n            onRowSelect={onUserSelect}\r\n            loading={loading}\r\n            data={data.records}\r\n            columns={memoizedColumns}\r\n            onFilter={setFilter}\r\n            filterPlaceholder='Buscar...'\r\n            onPaginate={setPage}\r\n            pageCount={data.pageCount}\r\n        />\r\n    );\r\n};\r\n\r\nexport default UsersTable;\r\n","import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup.string().required('El campo nombre de usuario es requerido'),\r\n    password: yup.string().nullable(true),\r\n    permissions: yup\r\n        .number()\r\n        .required('El campo Nivel de permiso es requerido')\r\n        .min(0, 'El nivel de permiso debe tener un valor entre 0 y 2')\r\n        .max(2, 'El nivel de permiso debe tener un valor entre 0 y 2'),\r\n});\r\n\r\nexport default schema;\r\n","import {\r\n    Form,\r\n    HeaderContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    ButtonContainer,\r\n    ErrorContainer,\r\n    InputContainer,\r\n} from 'components/CommonLayout/form.layout';\r\n\r\nimport Button from 'components/Button';\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport NumericFormatInput from 'react-number-format';\r\nimport { X } from 'phosphor-react';\r\nimport { colors } from 'styles/theme';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { createUser, updateUser } from 'api/users';\r\nimport userSchema from 'validations/schemas/user';\r\n\r\nconst UserForm = ({ user, action, handleClose, onSubmit }) => {\r\n    const { handleChange, handleNumericInput, handleSubmit, formData, printError, hasError } = useForm({\r\n        initialState: {\r\n            username: '',\r\n            permissions: '',\r\n            ...user,\r\n            password: '',\r\n        },\r\n        action,\r\n        createResource: createUser,\r\n        editResource: updateUser,\r\n        schema: userSchema,\r\n        onSubmitSuccess: onSubmit,\r\n    });\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <HeaderContainer>\r\n                <CloseButtonContainer>\r\n                    <Button>\r\n                        <X onClick={handleClose} />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <TitleContainer>\r\n                    {action === 'create' && 'Crear usuario'}\r\n                    {action === 'edit' && 'Editar usuario'}\r\n                </TitleContainer>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onChange={handleChange}\r\n                        value={formData.username}\r\n                        name='username'\r\n                        placeholder='Nombre de usuario'\r\n                        autoFocus\r\n                        errorborder={hasError('username')}\r\n                        required\r\n                    />\r\n                    {printError('username')}\r\n                </InputContainer>\r\n                {action !== 'edit' && (\r\n                    <InputContainer>\r\n                        <LabeledInput\r\n                            onChange={handleChange}\r\n                            value={formData.password}\r\n                            name='password'\r\n                            placeholder='Contraseña'\r\n                            type='password'\r\n                            errorborder={hasError('password')}\r\n                            required\r\n                        />\r\n                        {printError('password')}\r\n                    </InputContainer>\r\n                )}\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onValueChange={(value) => handleNumericInput(value.floatValue, 'permissions')}\r\n                        value={formData.permissions}\r\n                        placeholder='Nivel de permiso'\r\n                        isAllowed={(inputObj) => {\r\n                            if (inputObj.value < 3) return inputObj;\r\n                        }}\r\n                        allowDecimalSeparators={false}\r\n                        format='#'\r\n                        errorborder={hasError('permissions')}\r\n                        as={NumericFormatInput}\r\n                        required\r\n                    />\r\n                    <small>0: Empleado 1: Administrador 2: Master</small>\r\n                    {printError('permissions')}\r\n                </InputContainer>\r\n            </BodyContainer>\r\n            <FooterWrapper>\r\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\r\n                <FooterContainer>\r\n                    <ButtonContainer color={colors.primary}>\r\n                        <Button type='submit'>Enviar</Button>\r\n                    </ButtonContainer>\r\n                    <ButtonContainer color='red'>\r\n                        <Button>Cancelar</Button>\r\n                    </ButtonContainer>\r\n                </FooterContainer>\r\n            </FooterWrapper>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n    Wrapper,\r\n    SeparatorWrapper,\r\n    ContentContainer,\r\n    ToolbarContainer,\r\n    TableContainer,\r\n    FormContainer,\r\n    ConfirmContainer,\r\n} from 'components/CommonLayout/main.layout';\r\n\r\nimport Modal from 'components/Modal';\r\nimport Toolbar from 'components/Toolbar';\r\nimport UsersTable from 'components/ModuleTables/UsersTable';\r\nimport { useNotification } from 'hooks/notification';\r\nimport Notification from 'components/Notification';\r\nimport UserForm from './CRUDForm';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport { deleteUser } from 'api/users';\r\n\r\nconst Users = () => {\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const { notification, showNotification } = useNotification(null);\r\n\r\n    useEffect(() => {\r\n        if (CRUDAction === 'refresh') setSelectedUser(null);\r\n    }, [CRUDAction]);\r\n\r\n    const handleCRUD = (event) => {\r\n        if (event.currentTarget.name === 'ToolbarCreate') {\r\n            setCRUDAction('create');\r\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\r\n            setCRUDAction('edit');\r\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\r\n            setCRUDAction('delete');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (submitMessage) => {\r\n        showNotification('success', submitMessage, 2000);\r\n        setCRUDAction('refresh');\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteUser(selectedUser.id);\r\n        setCRUDAction('refresh');\r\n        setSelectedUser(null);\r\n        return response;\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SeparatorWrapper>\r\n                <ContentContainer>\r\n                    <ToolbarContainer>\r\n                        <Toolbar onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} recordSelected={selectedUser} />\r\n                    </ToolbarContainer>\r\n                    <TableContainer>\r\n                        <UsersTable\r\n                            onUserSelect={setSelectedUser}\r\n                            selectedRows={selectedUser }\r\n                            showNotification={showNotification}\r\n                            shouldRefresh={CRUDAction === 'refresh'}\r\n                        />\r\n                    </TableContainer>\r\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\r\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\r\n                            <FormContainer>\r\n                                <UserForm\r\n                                    onSubmit={handleSubmit}\r\n                                    action={CRUDAction}\r\n                                    user={CRUDAction === 'edit' && selectedUser}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                />\r\n                            </FormContainer>\r\n                        )}\r\n                        {CRUDAction === 'delete' && (\r\n                            <ConfirmContainer>\r\n                                <ConfirmAlert\r\n                                    showNotification={showNotification}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                    callback={handleDelete}\r\n                                />\r\n                            </ConfirmContainer>\r\n                        )}\r\n                    </Modal>\r\n                </ContentContainer>\r\n            </SeparatorWrapper>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/suppliers';\r\n\r\nexport const getSuppliers = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createSupplier = async (supplierData) => {\r\n    const response = await axios.post(BASE_URL, supplierData).catch((error) => error.response);\r\n    console.log(response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateSupplier = async (id, supplierData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, supplierData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteSupplier = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import NumericInput from 'react-number-format';\r\nimport formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'RIF',\r\n        accessor: 'rif',\r\n    },\r\n    {\r\n        Header: 'Teléfono',\r\n        accessor: 'phoneNumber',\r\n        Cell: (props) => {\r\n            if (props.value !== '') {\r\n                return <NumericInput displayType='text' value={props.value} format='(####) ###-####' />;\r\n            } else {\r\n                return 'No registrado';\r\n            }\r\n        },\r\n    },\r\n    {\r\n        Header: 'Dirección',\r\n        accessor: 'address',\r\n    },\r\n    {\r\n        Header: 'Creado',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n];\r\n","import { useState, useMemo, useEffect } from 'react';\r\n\r\nimport Table from 'components/Table';\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getSuppliers } from 'api/suppliers';\r\n\r\nimport { COLUMNS } from './columns';\r\n\r\nconst SuppliersTable = ({ onSupplierSelect, selectedRows, shouldRefresh, showNotification }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [filter, setFilter] = useState('');\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getSuppliers });\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) showNotification('error', error.message, 3000);\r\n    }, [error, showNotification]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                selectedRows={selectedRows}\r\n                onRowSelect={onSupplierSelect}\r\n                loading={loading}\r\n                data={data.records}\r\n                columns={memoizedColumns}\r\n                onFilter={setFilter}\r\n                filterPlaceholder='Buscar...'\r\n                onPaginate={setPage}\r\n                pageCount={data.pageCount}\r\n                capitalize={[1, 3]}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SuppliersTable;\r\n","import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('El campo nombre es requerido'),\r\n    rif: yup.string().required('El campo RIF es requerido'),\r\n    address: yup.string().required('El campo dirección es requerido'),\r\n    phoneNumber: yup.string().test('is-invalid', 'El teléfono debe contener 11 caracteres', async (value) => {\r\n        return value.length === 0 || value.length === 11;\r\n    }),\r\n});\r\n\r\nexport default schema;\r\n","import {\r\n    Form,\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    InputContainer,\r\n    ButtonContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    ErrorContainer,\r\n} from 'components/CommonLayout/form.layout';\r\n\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport Button from 'components/Button';\r\nimport NumberFormatInput from 'react-number-format';\r\nimport { colors } from 'styles/theme';\r\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { createSupplier, updateSupplier } from 'api/suppliers';\r\nimport supplierSchema from 'validations/schemas/supplier';\r\n\r\nconst SupplierForm = ({ supplier, action, handleClose, onSubmit }) => {\r\n    const { handleChange, loading, handleNumericInput, handleSubmit, formData, printError, hasError } = useForm({\r\n        initialState: {\r\n            name: '',\r\n            rif: '',\r\n            address: '',\r\n            phoneNumber: '',\r\n            ...supplier,\r\n        },\r\n        action,\r\n        createResource: createSupplier,\r\n        editResource: updateSupplier,\r\n        schema: supplierSchema,\r\n        onSubmitSuccess: onSubmit,\r\n    });\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <HeaderContainer>\r\n                <CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <TitleContainer>{action === 'create' ? 'Crear proveedor' : 'Editar proveedor'}</TitleContainer>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onChange={handleChange}\r\n                        placeholder='Nombre'\r\n                        name='name'\r\n                        value={formData.name}\r\n                        autoFocus\r\n                        capitalize\r\n                        required\r\n                        errorborder={hasError('name')}\r\n                    />\r\n                    {printError('name')}\r\n                </InputContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onChange={handleChange}\r\n                        placeholder='RIF'\r\n                        name='rif'\r\n                        value={formData.rif}\r\n                        thousandSeparator='.'\r\n                        decimalSeparator=','\r\n                        decimalScale={0}\r\n                        errorborder={hasError('rif')}\r\n                        capitalize\r\n                        required\r\n                    />\r\n                    {printError('rif')}\r\n                </InputContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onChange={handleChange}\r\n                        placeholder='Dirección'\r\n                        name='address'\r\n                        value={formData.address}\r\n                        errorborder={hasError('address')}\r\n                        required\r\n                    />\r\n                    {printError('address')}\r\n                </InputContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onValueChange={(values) => handleNumericInput(values.value, 'phoneNumber')}\r\n                        placeholder='Teléfono'\r\n                        name='phoneNumber'\r\n                        value={formData.phoneNumber}\r\n                        format='( #### ) - ### - ####'\r\n                        allowEmptyFormatting\r\n                        mask='_'\r\n                        type='tel'\r\n                        as={NumberFormatInput}\r\n                        errorborder={hasError('phoneNumber')}\r\n                        required\r\n                    />\r\n                    {printError('phoneNumber')}\r\n                </InputContainer>\r\n            </BodyContainer>\r\n            <FooterWrapper>\r\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\r\n                <FooterContainer>\r\n                    <ButtonContainer color={colors.primary}>\r\n                        <Button loading={loading} type='submit'>\r\n                            <BookBookmark size={24} />\r\n                            Enviar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <ButtonContainer color='red'>\r\n                        <Button onClick={handleClose}>\r\n                            <XCircle size={24} />\r\n                            Cancelar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                </FooterContainer>\r\n            </FooterWrapper>\r\n        </Form>\r\n    );\r\n};\r\nexport default SupplierForm;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n    Wrapper,\r\n    SeparatorWrapper,\r\n    ContentContainer,\r\n    ToolbarContainer,\r\n    TableContainer,\r\n    FormContainer,\r\n    ConfirmContainer,\r\n} from 'components/CommonLayout/main.layout';\r\n\r\nimport Modal from 'components/Modal';\r\nimport Toolbar from 'components/Toolbar';\r\nimport SuppliersTable from 'components/ModuleTables/SuppliersTable';\r\nimport { useNotification } from 'hooks/notification';\r\nimport Notification from 'components/Notification';\r\nimport SupplierForm from './CRUDForm';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport { deleteSupplier } from 'api/suppliers';\r\n\r\nconst Suppliers = () => {\r\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const { notification, showNotification } = useNotification(null);\r\n\r\n    useEffect(() => {\r\n        if (CRUDAction === 'refresh') setSelectedSupplier(null);\r\n    }, [CRUDAction]);\r\n\r\n    const handleCRUD = (event) => {\r\n        if (event.currentTarget.name === 'ToolbarCreate') {\r\n            setCRUDAction('create');\r\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\r\n            setCRUDAction('edit');\r\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\r\n            setCRUDAction('delete');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (submitMessage) => {\r\n        showNotification('success', submitMessage, 2000);\r\n        setCRUDAction('refresh');\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteSupplier(selectedSupplier.id);\r\n        setCRUDAction('refresh');\r\n        setSelectedSupplier(null);\r\n        return response;\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SeparatorWrapper>\r\n                <ContentContainer>\r\n                    <ToolbarContainer>\r\n                        <Toolbar onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} recordSelected={selectedSupplier} />\r\n                    </ToolbarContainer>\r\n                    <TableContainer>\r\n                        <SuppliersTable\r\n                            onSupplierSelect={setSelectedSupplier}\r\n                            selectedRows={selectedSupplier}\r\n                            showNotification={showNotification}\r\n                            shouldRefresh={CRUDAction === 'refresh'}\r\n                        />\r\n                    </TableContainer>\r\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\r\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\r\n                            <FormContainer>\r\n                                <SupplierForm\r\n                                    onSubmit={handleSubmit}\r\n                                    action={CRUDAction}\r\n                                    supplier={CRUDAction === 'edit' && selectedSupplier}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                />\r\n                            </FormContainer>\r\n                        )}\r\n                        {CRUDAction === 'delete' && (\r\n                            <ConfirmContainer>\r\n                                <ConfirmAlert\r\n                                    showNotification={showNotification}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                    callback={handleDelete}\r\n                                />\r\n                            </ConfirmContainer>\r\n                        )}\r\n                    </Modal>\r\n                </ContentContainer>\r\n            </SeparatorWrapper>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Suppliers;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/categories';\r\n\r\nexport const getCategories = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createCategory = async (categoryData) => {\r\n    const response = await axios.post(BASE_URL, categoryData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateCategory = async (id, categoryData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, categoryData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteCategory = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Creado',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n];\r\n","import { useState, useMemo, useEffect } from 'react';\r\n\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getCategories } from 'api/categories';\r\n\r\nimport Table from 'components/Table';\r\n\r\nimport { COLUMNS } from './columns.js';\r\n\r\nconst CategoriesTable = ({ onCategorySelect, selectedRows, shouldRefresh, showNotification }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getCategories });\r\n\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) showNotification('error', error.message, 3000);\r\n    }, [error, showNotification]);\r\n\r\n    return (\r\n        <Table\r\n            selectedRows={selectedRows}\r\n            onRowSelect={onCategorySelect}\r\n            loading={loading}\r\n            data={data.records}\r\n            columns={memoizedColumns}\r\n            onFilter={setFilter}\r\n            filterPlaceholder='Buscar por id o nombre'\r\n            onPaginate={setPage}\r\n            pageCount={data.pageCount}\r\n            capitalize={[1]}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CategoriesTable;\r\n","import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('El campo nombre es requerido'),\r\n});\r\n\r\nexport default schema;\r\n","import {\r\n    Form,\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    InputContainer,\r\n    ButtonContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    ErrorContainer,\r\n} from 'components/CommonLayout/form.layout';\r\n\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport Button from 'components/Button';\r\nimport { colors } from 'styles/theme';\r\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { createCategory, updateCategory } from 'api/categories';\r\nimport categorySchema from 'validations/schemas/category';\r\n\r\nconst CategoryForm = ({ category, action, handleClose, onSubmit }) => {\r\n    const { handleChange, handleSubmit, formData, printError, hasError } = useForm({\r\n        initialState: {\r\n            name: '',\r\n            ...category,\r\n        },\r\n        action,\r\n        createResource: createCategory,\r\n        editResource: updateCategory,\r\n        schema: categorySchema,\r\n        onSubmitSuccess: onSubmit,\r\n    });\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <HeaderContainer>\r\n                <CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <TitleContainer>{action === 'create' ? 'Crear categoría' : 'Editar categoría'}</TitleContainer>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onChange={handleChange}\r\n                        placeholder='Nombre'\r\n                        name='name'\r\n                        value={formData.name}\r\n                        autoFocus\r\n                        capitalize\r\n                        required\r\n                        errorborder={hasError('name')}\r\n                    />\r\n                    {printError('name')}\r\n                </InputContainer>\r\n            </BodyContainer>\r\n            <FooterWrapper>\r\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\r\n                <FooterContainer>\r\n                    <ButtonContainer color={colors.primary}>\r\n                        <Button type='submit'>\r\n                            <BookBookmark size={24} />\r\n                            Enviar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <ButtonContainer color='red'>\r\n                        <Button onClick={handleClose}>\r\n                            <XCircle size={24} />\r\n                            Cancelar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                </FooterContainer>\r\n            </FooterWrapper>\r\n        </Form>\r\n    );\r\n};\r\nexport default CategoryForm;\r\n","import { useState } from 'react';\r\n\r\nimport {\r\n    Wrapper,\r\n    SeparatorWrapper,\r\n    ContentContainer,\r\n    ToolbarContainer,\r\n    TableContainer,\r\n    FormContainer,\r\n    ConfirmContainer,\r\n} from 'components/CommonLayout/main.layout';\r\n\r\nimport CategoriesTable from 'components/ModuleTables/CategoriesTable';\r\nimport Toolbar from 'components/Toolbar';\r\nimport Modal from 'components/Modal';\r\nimport CategoryForm from './CRUDForm';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport { useEffect } from 'react';\r\nimport { deleteCategory } from 'api/categories';\r\nimport Notification from 'components/Notification';\r\nimport { useNotification } from 'hooks/notification';\r\n\r\nconst Categories = () => {\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const { notification, showNotification } = useNotification(null);\r\n\r\n    useEffect(() => {\r\n        if (CRUDAction === 'refresh') setSelectedCategory(null);\r\n    }, [CRUDAction]);\r\n\r\n    const handleCRUD = (event) => {\r\n        if (event.currentTarget.name === 'ToolbarCreate') {\r\n            setCRUDAction('create');\r\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\r\n            setCRUDAction('edit');\r\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\r\n            setCRUDAction('delete');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (submitMessage) => {\r\n        showNotification('success', submitMessage, 2000);\r\n        setCRUDAction('refresh');\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteCategory(selectedCategory.id);\r\n        setCRUDAction('refresh');\r\n        setSelectedCategory(null);\r\n        return response;\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SeparatorWrapper>\r\n                <ContentContainer>\r\n                    <ToolbarContainer>\r\n                        <Toolbar\r\n                            recordSelected={selectedCategory ? true : false}\r\n                            onCreate={handleCRUD}\r\n                            onEdit={handleCRUD}\r\n                            onDelete={handleCRUD}\r\n                        />\r\n                    </ToolbarContainer>\r\n                    <TableContainer>\r\n                        <CategoriesTable\r\n                            shouldRefresh={CRUDAction === 'refresh'}\r\n                            selectedRows={selectedCategory}\r\n                            onCategorySelect={setSelectedCategory}\r\n                            showNotification={showNotification}\r\n                        />\r\n                    </TableContainer>\r\n                    <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\r\n                        {(CRUDAction === 'create' || CRUDAction === 'edit') && (\r\n                            <FormContainer>\r\n                                <CategoryForm\r\n                                    onSubmit={handleSubmit}\r\n                                    action={CRUDAction}\r\n                                    category={CRUDAction === 'edit' && selectedCategory}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                />\r\n                            </FormContainer>\r\n                        )}\r\n                        {CRUDAction === 'delete' && (\r\n                            <ConfirmContainer>\r\n                                <ConfirmAlert\r\n                                    showNotification={showNotification}\r\n                                    handleClose={() => setCRUDAction(null)}\r\n                                    callback={handleDelete}\r\n                                />\r\n                            </ConfirmContainer>\r\n                        )}\r\n                    </Modal>\r\n                </ContentContainer>\r\n            </SeparatorWrapper>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/product_variants';\r\n\r\nexport const getProductVariants = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n\r\n    return response.data;\r\n};\r\n\r\nexport const getProductVariantById = async (id) => {\r\n    const response = await axios.get(`${BASE_URL}/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const getRecentSupplyings = async ({ page, filter, count, product_variant_id }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n    let countParam = count ? `&count=${count}` : '';\r\n    const response = await axios\r\n        .get(`${BASE_URL}/${product_variant_id}/supplyings${pageParam}${countParam}${filterParams}`)\r\n        .catch((error) => error.response);\r\n\r\n    return response.data;\r\n};\r\n\r\nexport const createProductVariant = async (productData) => {\r\n    const response = await axios.post(BASE_URL, productData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateProductVariant = async (id, productData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, productData).catch((error) => error.response);\r\n\r\n    return response.data;\r\n};\r\n\r\nexport const deleteProductVariantApi = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n\r\n    return response.data;\r\n};\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Precio $',\r\n        accessor: 'price',\r\n        id: 'price',\r\n    },\r\n    {\r\n        Header: 'Precio VES',\r\n        accessor: 'converted_price.PRICE_VES',\r\n        id: 'converted_price.PRICE_VES',\r\n        Cell: (props) => {\r\n            return props.value ? props.value.toLocaleString('es-VE') : '0';\r\n        },\r\n    },\r\n    {\r\n        Header: '% Ganancia',\r\n        accessor: 'profitPercent',\r\n    },\r\n    {\r\n        Header: 'Valor Unidad',\r\n        accessor: 'unitValue',\r\n    },\r\n    {\r\n        Header: 'Stock',\r\n        accessor: 'stock',\r\n    },\r\n    {\r\n        Header: 'Creado',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n];\r\n","import { useState, useMemo, useEffect } from 'react';\r\n\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getProductVariants } from 'api/product_variants';\r\n\r\nimport Table from 'components/Table';\r\n\r\nimport { COLUMNS } from './columns.js';\r\n\r\nconst ProductsTable = ({ onProductSelect, selectedRows, shouldRefresh, showNotification }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getProductVariants });\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) showNotification('error', error.message, 3000);\r\n    }, [error, showNotification]);\r\n\r\n    return (\r\n        <Table\r\n            selectedRows={selectedRows}\r\n            onRowSelect={onProductSelect}\r\n            loading={loading}\r\n            data={data.records}\r\n            columns={memoizedColumns}\r\n            onFilter={setFilter}\r\n            filterPlaceholder='Buscar por id, nombre, precio'\r\n            onPaginate={setPage}\r\n            pageCount={data.pageCount}\r\n            capitalize={[1, 3]}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProductsTable;\r\n","import styled from 'styled-components';\r\n\r\nexport const GeneralInfoContainer = styled.div`\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nexport const VariantsContainer = styled.div`\r\n    flex: 1;\r\n    gap: 10px;\r\n`;\r\n\r\nexport const InputsWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 3fr 3fr 0.5fr;\r\n    grid-auto-columns: auto;\r\n    gap: 10px;\r\n`;\r\n\r\nexport const InputsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: 1fr 1fr;\r\n    gap: 8px;\r\n\r\n    div {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const FileInputContainer = styled.div`\r\n    label {\r\n        height: 100%;\r\n        > label {\r\n            overflow: hidden;\r\n            white-space: pre-wrap;\r\n            text-overflow: ellipsis;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }\r\n`;\r\nexport const InputContainer = styled.div`\r\n    flex: 1;\r\n`;\r\n\r\nexport const VariantButtonContainer = styled.div`\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n\r\n    button {\r\n        background: ${(props) => (props.color ? props.color : 'transparent')};\r\n        flex: 0 1 40px;\r\n        border-radius: 4px;\r\n        color: white;\r\n\r\n        svg {\r\n            margin: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ProductImageContainer = styled.div`\r\n    flex: 0 1 100%;\r\n    background-image: url(${(props) => props.url});\r\n    background-repeat: no-repeat;\r\n    background-position-x: center;\r\n    background-position-y: center;\r\n    background-size: 48px;\r\n`;\r\n\r\nexport const VariantNameContainer = styled.div`\r\n    grid-column: 1/3;\r\n`;\r\n\r\nexport const PriceContainer = styled.div`\r\n    grid-row: 2;\r\n    grid-column: 1/1;\r\n    input {\r\n        text-align: right;\r\n    }\r\n`;\r\n\r\nexport const UnitValueContainer = styled.div`\r\n    grid-row: 2;\r\n    grid-column: 2/2;\r\n    input {\r\n        text-align: right;\r\n    }\r\n`;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/products';\r\n\r\nexport const getProducts = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const getProductById = async (id) => {\r\n    const response = await axios.get(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createProduct = async (productData) => {\r\n    let formData = new FormData();\r\n    let variantsWithImage = [];\r\n\r\n    productData.product_variant.forEach((variant, index) => {\r\n        if (variant.imagePath != null && typeof variant.imagePath === 'object') {\r\n            formData.append('images', variant.imagePath);\r\n            variantsWithImage.push(index);\r\n        } else {\r\n            variantsWithImage.push(-1);\r\n        }\r\n    });\r\n\r\n    formData.append('variantsWithImage', JSON.stringify(variantsWithImage));\r\n    formData.append('name', productData.name);\r\n    formData.append('brand', productData.brand);\r\n    formData.append('product_variant', JSON.stringify(productData.product_variant));\r\n\r\n    const response = await axios({\r\n        method: 'post',\r\n        url: BASE_URL,\r\n        data: formData,\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n    }).catch((error) => error.response);\r\n    console.log(response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateProduct = async (id, productData) => {\r\n    let formData = new FormData();\r\n    let variantsWithImage = [];\r\n    console.log('from updateProduct API', productData);\r\n\r\n    productData.product_variant.forEach((variant, index) => {\r\n        if (variant.imagePath != null && typeof variant.imagePath === 'object') {\r\n            formData.append('images', variant.imagePath);\r\n            variantsWithImage.push(index);\r\n        } else if (typeof variant.imagePath === 'string') {\r\n            variantsWithImage.push(variant.imagePath);\r\n        } else {\r\n            variantsWithImage.push(-1);\r\n        }\r\n    });\r\n\r\n    formData.append('variantsWithImage', JSON.stringify(variantsWithImage));\r\n    formData.append('name', productData.name);\r\n    formData.append('brand', productData.brand);\r\n    formData.append('product_variant', JSON.stringify(productData.product_variant));\r\n\r\n    if (productData.reasons && productData.reasons.trim().length > 0) {\r\n        formData.append('reasons', productData.reasons.trim());\r\n    }\r\n\r\n    const response = await axios({\r\n        method: 'patch',\r\n        url: BASE_URL + `/${id}`,\r\n        data: formData,\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n    }).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required('El campo nombre es requerido'),\r\n    brand: yup.string(),\r\n    product_variant: yup.array().of(\r\n        yup.object().shape({\r\n            name: yup.string().required('El nombre de la variante es requerido'),\r\n            price: yup.number().required('El precio de la variante es requerido').typeError('El precio de la variante debe ser un número'),\r\n            profitPercent: yup\r\n                .number()\r\n                .required('El % de ganancia de la variante es requerido')\r\n                .typeError('El % de ganancia de la variante debe ser un número'),\r\n            unitValue: yup\r\n                .number()\r\n                .required('El valor unidad de la variante es requerido')\r\n                .typeError('El valor unidad de la variante debe ser un número'),\r\n            imagePath: yup.object().nullable(true),\r\n        })\r\n    ),\r\n});\r\n\r\nexport default schema;\r\n","import NumberFormatInput from 'react-number-format';\r\n\r\nimport { MinusCircle, PlusCircle } from 'phosphor-react';\r\n\r\nimport LabeledInput from 'components/LabeledInput';\r\n\r\nimport { InputContainer } from 'components/CommonLayout/form.layout';\r\n\r\nimport Button from 'components/Button';\r\nimport {\r\n    InputsWrapper,\r\n    InputsContainer,\r\n    FileInputContainer,\r\n    VariantButtonContainer,\r\n    ProductImageContainer,\r\n    VariantNameContainer,\r\n    PriceContainer,\r\n    UnitValueContainer,\r\n} from './layout.styles';\r\n\r\nconst VariantForm = ({ CRUDAction, formData, setFormData, product_variant, index, handleNestedChange, printError, hasError }) => {\r\n    const addProductVariant = () => {\r\n        let productVariantList = [\r\n            ...formData['product_variant'],\r\n            {\r\n                name: '',\r\n                price: 0,\r\n                profitPercent: 30,\r\n                unitValue: '',\r\n                imagePath: null,\r\n            },\r\n        ];\r\n\r\n        setFormData({\r\n            ...formData,\r\n            product_variant: productVariantList,\r\n        });\r\n    };\r\n\r\n    const deleteProductVariant = async (index) => {\r\n        let productVariantList = formData['product_variant'].filter((variant, i) => i !== index);\r\n\r\n        if (productVariantList.length !== 0) {\r\n            setFormData({\r\n                ...formData,\r\n                product_variant: productVariantList,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <InputsWrapper>\r\n            <InputsContainer>\r\n                <VariantNameContainer>\r\n                    <LabeledInput\r\n                        onChange={(event) => handleNestedChange('product_variant', index, 'name', event.target.value)}\r\n                        placeholder='* Nombre'\r\n                        value={product_variant.name}\r\n                        allowDecimalSeparators\r\n                        capitalize\r\n                        errorborder={hasError(`product_variant[${index}].name`)}\r\n                        errormessage={printError(`product_variant[${index}].name`)}\r\n                        active\r\n                    />\r\n                    {printError(`product_variant[${index}].name`)}\r\n                </VariantNameContainer>\r\n                <PriceContainer>\r\n                    <LabeledInput\r\n                        onValueChange={(values) => handleNestedChange('product_variant', index, 'price', values.floatValue)}\r\n                        placeholder='* Precio $'\r\n                        value={product_variant.price}\r\n                        defaultValue={product_variant.price}\r\n                        allowDecimalSeparators\r\n                        as={NumberFormatInput}\r\n                        errorborder={hasError(`product_variant[${index}].price`)}\r\n                        active\r\n                    />\r\n                    {printError(`product_variant[${index}].price`)}\r\n                </PriceContainer>\r\n                <InputContainer>\r\n                    {/*\r\n                    <LabeledInput\r\n                    placeholder='% Ganancia'\r\n                    //onValueChange={(values) => handleNestedChange('product_variant', index, 'profitPercent', values.floatValue)}\r\n                    value={product_variant.profitPercent}\r\n                    allowDecimalSeparators\r\n                    as={NumberFormatInput}\r\n                    errorborder={hasError(`product_variant[${index}].profitPercent`)}\r\n                    active\r\n                    disabled\r\n                    title='No se puede editar'\r\n                    />\r\n                    {printError(`product_variant[${index}].profitPercent`)}\r\n\r\n                    */}\r\n                </InputContainer>\r\n                <UnitValueContainer>\r\n                    <LabeledInput\r\n                        placeholder='* Valor Unidad'\r\n                        onValueChange={(values) => handleNestedChange('product_variant', index, 'unitValue', values.floatValue)}\r\n                        value={product_variant.unitValue}\r\n                        allowDecimalSeparators\r\n                        as={NumberFormatInput}\r\n                        errorborder={hasError(`product_variant[${index}].unitValue`)}\r\n                        active\r\n                    />\r\n                    {printError(`product_variant[${index}].unitValue`)}\r\n                </UnitValueContainer>\r\n            </InputsContainer>\r\n            <FileInputContainer>\r\n                <LabeledInput\r\n                    file\r\n                    type='file'\r\n                    onChange={(event) => handleNestedChange('product_variant', index, 'imagePath', event.target.files[0])}\r\n                    placeholder={product_variant.imagePath ? product_variant.imagePath.name : 'Seleccione Imagen'}\r\n                >\r\n                    {product_variant.imagePath && CRUDAction === 'edit' && <ProductImageContainer url={product_variant.imagePath} />}\r\n                    {product_variant.imagePath && CRUDAction === 'create' && (\r\n                        <ProductImageContainer url={product_variant.imagePath && URL.createObjectURL(product_variant.imagePath)} />\r\n                    )}\r\n                </LabeledInput>\r\n            </FileInputContainer>\r\n            {printError(`product_variant[${index}].imagePath`)}\r\n            {index !== formData.product_variant.length - 1 && (\r\n                <VariantButtonContainer color='red'>\r\n                    <Button onClick={() => deleteProductVariant(index)}>\r\n                        <MinusCircle size={24} />\r\n                    </Button>\r\n                </VariantButtonContainer>\r\n            )}\r\n            {index === formData.product_variant.length - 1 && (\r\n                <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '5px' }}>\r\n                    <VariantButtonContainer color='red'>\r\n                        <Button onClick={() => deleteProductVariant(index)}>\r\n                            <MinusCircle size={24} />\r\n                        </Button>\r\n                    </VariantButtonContainer>\r\n                    <VariantButtonContainer color='green'>\r\n                        <Button onClick={addProductVariant}>\r\n                            <PlusCircle size={24} />\r\n                        </Button>\r\n                    </VariantButtonContainer>\r\n                </div>\r\n            )}\r\n        </InputsWrapper>\r\n    );\r\n};\r\nexport default VariantForm;\r\n","import {\r\n    Form,\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    ButtonContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    ErrorContainer,\r\n} from 'components/CommonLayout/form.layout';\r\n\r\nimport { GeneralInfoContainer, VariantsContainer, InputContainer } from './layout.styles';\r\n\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport Button from 'components/Button';\r\nimport { colors } from 'styles/theme';\r\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { createProduct, updateProduct } from 'api/products';\r\nimport productSchema from 'validations/schemas/product';\r\nimport VariantForm from './variantForm';\r\n\r\nconst ProductForm = ({ product, action, handleClose, onSubmit }) => {\r\n    const { handleChange, handleNestedChange, handleSubmit, formData, setFormData, submitErrors, printError, hasError } = useForm({\r\n        initialState: {\r\n            name: '',\r\n            brand: '',\r\n            product_variant: [\r\n                {\r\n                    name: '',\r\n                    price: 0,\r\n                    profitPercent: 30,\r\n                    unitValue: 1,\r\n                    imagePath: null,\r\n                },\r\n            ],\r\n            ...product,\r\n        },\r\n        action,\r\n        createResource: createProduct,\r\n        editResource: updateProduct,\r\n        schema: productSchema,\r\n        onSubmitSuccess: onSubmit,\r\n    });\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <HeaderContainer>\r\n                <CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <TitleContainer>{action === 'create' ? 'Crear producto' : 'Editar producto'}</TitleContainer>\r\n            </HeaderContainer>\r\n            <BodyContainer overflow={1}>\r\n                <h4>Información General</h4>\r\n                <GeneralInfoContainer>\r\n                    <InputContainer>\r\n                        <LabeledInput\r\n                            placeholder='* Tipo'\r\n                            onChange={handleChange}\r\n                            name='name'\r\n                            value={formData.name}\r\n                            autoFocus\r\n                            capitalize\r\n                            errorborder={hasError('name')}\r\n                        />\r\n                        {printError('name')}\r\n                    </InputContainer>\r\n                    <InputContainer>\r\n                        <LabeledInput\r\n                            placeholder='Marca'\r\n                            onChange={handleChange}\r\n                            name='brand'\r\n                            value={formData.brand}\r\n                            capitalize\r\n                            errorborder={hasError('brand')}\r\n                        />\r\n                        {printError('brand')}\r\n                    </InputContainer>\r\n                </GeneralInfoContainer>\r\n                <h4>Variantes</h4>\r\n                <VariantsContainer>\r\n                    {formData.product_variant.length > 0 &&\r\n                        formData.product_variant.map((variant, index) => {\r\n                            return (\r\n                                <VariantForm\r\n                                    key={index}\r\n                                    CRUDAction={action}\r\n                                    formData={formData}\r\n                                    setFormData={setFormData}\r\n                                    product_variant={variant}\r\n                                    index={index}\r\n                                    handleNestedChange={handleNestedChange}\r\n                                    submitErrors={submitErrors}\r\n                                    printError={printError}\r\n                                    hasError={hasError}\r\n                                />\r\n                            );\r\n                        })}\r\n                </VariantsContainer>\r\n            </BodyContainer>\r\n            <FooterWrapper>\r\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\r\n                <FooterContainer>\r\n                    <ButtonContainer color={colors.primary}>\r\n                        <Button type='submit'>\r\n                            <BookBookmark size={24} />\r\n                            Enviar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <ButtonContainer color='red'>\r\n                        <Button onClick={handleClose}>\r\n                            <XCircle size={24} />\r\n                            Cancelar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                </FooterContainer>\r\n            </FooterWrapper>\r\n        </Form>\r\n    );\r\n};\r\nexport default ProductForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Variants = styled.div`\r\n    font-size: 19px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    text-align: center;\r\n\r\n    strong:first-child {\r\n        grid-column: 1/3;\r\n    }\r\n\r\n    > * {\r\n        border: 1px solid grey;\r\n        padding: 5px 0;\r\n    }\r\n`;\r\nexport const VariantContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n\r\n    text-align: center;\r\n    label:first-child {\r\n        grid-column: 1/3;\r\n    }\r\n\r\n    > * {\r\n        border: 1px solid grey;\r\n        padding: 5px 0;\r\n    }\r\n    input {\r\n        text-align: center;\r\n        font-size: 14px;\r\n    }\r\n`;\r\nexport const Label = styled.label`\r\n    text-transform: capitalize;\r\n`;\r\n\r\nexport const StockInfo = styled.div`\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const FreeStock = styled.label`\r\n    padding: 5px 0;\r\n    span {\r\n        color: green;\r\n    }\r\n`;\r\n\r\nexport const TotalStock = styled.label`\r\n    padding: 5px 0;\r\n`;\r\n","import styled from 'styled-components';\r\nimport Button from 'components/Button';\r\nimport NumericInput from 'react-number-format';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-direction: row;\r\n    justify-content: center;\r\n`;\r\nexport const MinusButton = styled(Button)`\r\n    max-width: 50px;\r\n    min-width: 0;\r\n    background: red;\r\n`;\r\nexport const PlusButton = styled(Button)`\r\n    max-width: 50px;\r\n    min-width: 0;\r\n    background: ${colors.primary};\r\n`;\r\nexport const Input = styled(NumericInput)`\r\n    max-width: 50px;\r\n    min-width: 0;\r\n`;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useInterval = (callback, delay = null) => {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            tick();\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n};\r\n\r\nexport default useInterval;\r\n","import { useState } from 'react';\r\nimport { Wrapper, MinusButton, PlusButton, Input } from './styles';\r\nimport useInterval from 'hooks/useInterval';\r\n\r\nconst NumberInput = ({ value, onChange, onCtrlClick }) => {\r\n    const [running, setRunning] = useState({\r\n        plus: false,\r\n        minus: false,\r\n    });\r\n\r\n    useInterval(\r\n        () => {\r\n            handleClick();\r\n        },\r\n        running.plus || running.minus ? 100 : null\r\n    );\r\n\r\n    const handleClick = () => {\r\n        if (running.minus) {\r\n            if (value >= 1) {\r\n                onChange(value - 1);\r\n                setRunning({ ...running, minus: true });\r\n            }\r\n        } else if (running.plus) {\r\n            onChange(Number(value) + 1);\r\n            setRunning({ ...running, plus: true });\r\n        }\r\n    };\r\n\r\n    const handleCtrlClick = (event) => {\r\n        if (event.ctrlKey) {\r\n            const buttonName = event.target.name;\r\n            onCtrlClick(buttonName);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MinusButton\r\n                name='minus'\r\n                title='Ctrl + Click para restar todo'\r\n                onClick={handleCtrlClick}\r\n                onMouseDown={(event) => {\r\n                    if (!event.ctrlKey) setRunning({ ...running, minus: true });\r\n                }}\r\n                onMouseUp={(event) => {\r\n                    if (!event.ctrlKey) setRunning({ ...running, minus: false });\r\n                }}\r\n                onMouseLeave={(event) => {\r\n                    if (!event.ctrlKey) setRunning({ ...running, minus: false });\r\n                }}\r\n            >\r\n                -\r\n            </MinusButton>\r\n            <Input value={value} min={0} onValueChange={({ floatValue }) => onChange(floatValue)} />\r\n            <PlusButton\r\n                name='plus'\r\n                title='Ctrl + Click para sumar todo'\r\n                onClick={handleCtrlClick}\r\n                onMouseDown={(event) => {\r\n                    if (!event.ctrlKey) setRunning({ ...running, plus: true });\r\n                }}\r\n                onMouseUp={(event) => {\r\n                    if (!event.ctrlKey) setRunning({ ...running, plus: false });\r\n                }}\r\n                onMouseLeave={(event) => {\r\n                    if (!event.ctrlKey) setRunning({ ...running, plus: false });\r\n                }}\r\n            >\r\n                +\r\n            </PlusButton>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default NumberInput;\r\n","export const releaseOrAssign = ({ freeStock = 0, currentStock = 0, unitValue = 0, value = 0 }) => {\r\n    let releasingStock = (value - currentStock) * unitValue;\r\n    if (releasingStock < 0) releasingStock = releasingStock * -1;\r\n\r\n    let currentStockValue = currentStock * unitValue;\r\n\r\n    let newProductStock = value;\r\n    let newFreeStock = freeStock;\r\n\r\n    if (value === 0) {\r\n        newFreeStock = freeStock + currentStockValue;\r\n    } else if (value < currentStock) {\r\n        newFreeStock = freeStock + releasingStock;\r\n    } else if (value > currentStock && freeStock - releasingStock >= 0) {\r\n        newFreeStock = freeStock - releasingStock;\r\n    } else {\r\n        newProductStock = currentStock;\r\n    }\r\n    return { newFreeStock, newProductStock };\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { StockInfo, TotalStock, FreeStock, Header, Variants, VariantContainer, Label } from './styles';\r\n\r\nimport {\r\n    Form,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    ButtonContainer,\r\n    ErrorContainer,\r\n} from 'components/CommonLayout/form.layout';\r\n\r\nimport Button from 'components/Button';\r\nimport { X, BookBookmark, XCircle } from 'phosphor-react';\r\nimport { colors } from 'styles/theme';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { updateProduct } from 'api/products';\r\nimport productSchema from 'validations/schemas/product';\r\nimport NumberInput from 'components/NumberInput';\r\nimport { releaseOrAssign } from 'utils/stockManipulation';\r\n\r\nconst StockForm = ({ product, handleClose, onSubmit }) => {\r\n    const [freeStock, setFreeStock] = useState(0);\r\n    const [stockTotal, setStockTotal] = useState(0);\r\n\r\n    const { formData, handleChange, handleNestedChange, handleSubmit, submitErrors, setSubmitErrors, printError } = useForm({\r\n        initialState: {\r\n            product_variant: [],\r\n            reasons: '',\r\n            ...product,\r\n        },\r\n        action: 'edit',\r\n        editResource: updateProduct,\r\n        schema: productSchema,\r\n        onSubmitSuccess: onSubmit,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (product) {\r\n            console.log(product);\r\n            const total = product.product_variant.reduce((old, current) => old + current.stock * current.unitValue, 0);\r\n            setStockTotal(total);\r\n        }\r\n    }, [product]);\r\n\r\n    const onChangeHandler = (selector, index, key, value) => {\r\n        value = parseFloat(value);\r\n\r\n        if (isNaN(value)) {\r\n            value = 0;\r\n        }\r\n        const product = formData.product_variant[index];\r\n        const currentStock = product.stock;\r\n        const unitValue = product.unitValue;\r\n\r\n        const { newFreeStock, newProductStock } = releaseOrAssign({ freeStock, currentStock, unitValue, value });\r\n        setFreeStock(newFreeStock);\r\n        handleNestedChange(selector, index, key, newProductStock);\r\n    };\r\n\r\n    const ctrlClickHandler = (selector, index, key, action) => {\r\n        const product = formData.product_variant[index];\r\n        const currentStock = product.stock;\r\n        const unitValue = product.unitValue;\r\n        let stockToAsign = 0;\r\n\r\n        if (action === 'plus') {\r\n            stockToAsign = Math.floor(freeStock / Number(product.unitValue)) + Number(product.stock);\r\n        }\r\n        const { newFreeStock, newProductStock } = releaseOrAssign({\r\n            freeStock,\r\n            currentStock,\r\n            unitValue,\r\n            value: stockToAsign,\r\n        });\r\n\r\n        handleNestedChange(selector, index, key, newProductStock);\r\n        setFreeStock(newFreeStock);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (freeStock > 0 && formData.reasons.trim().length === 0) {\r\n            setSubmitErrors({\r\n                ...submitErrors,\r\n                reasons: 'Debe proveer las razones del cambio arbitrario del stock',\r\n            });\r\n        } else {\r\n            handleSubmit(event);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler}>\r\n            <HeaderContainer>\r\n                <CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <TitleContainer>Reasignar stock</TitleContainer>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n                <Variants>\r\n                    <StockInfo>\r\n                        <TotalStock>{`Stock total: ${stockTotal} unidades`}</TotalStock>\r\n                        <FreeStock>\r\n                            {'Stock liberado: '}\r\n                            <span>{`${freeStock.toFixed(4)} `}</span>\r\n                            unidades\r\n                        </FreeStock>\r\n                    </StockInfo>\r\n                    <Header>\r\n                        <strong>Nombre</strong>\r\n                        <strong>Stock</strong>\r\n                    </Header>\r\n                    {formData &&\r\n                        formData.product_variant.map((productVariant, index) => {\r\n                            return (\r\n                                <VariantContainer key={productVariant.id}>\r\n                                    <Label>{product.name + ' ' + productVariant.name}</Label>\r\n                                    <NumberInput\r\n                                        value={formData['product_variant'][index].stock}\r\n                                        onChange={(value) => onChangeHandler('product_variant', index, 'stock', value)}\r\n                                        onCtrlClick={(action) => ctrlClickHandler('product_variant', index, 'stock', action)}\r\n                                    />\r\n                                </VariantContainer>\r\n                            );\r\n                        })}\r\n                </Variants>\r\n                {freeStock > 0 && (\r\n                    <div>\r\n                        <textarea\r\n                            style={{ minHeight: '50px' }}\r\n                            value={formData.reasons}\r\n                            placeholder='Escriba las razones del cambio arbitrario del stock...'\r\n                            name='reasons'\r\n                            onChange={handleChange}\r\n                        ></textarea>\r\n                    </div>\r\n                )}\r\n            </BodyContainer>\r\n            <FooterWrapper>\r\n                <ErrorContainer>\r\n                    {printError('freeStock')}\r\n                    {printError('stockLimit')}\r\n                    {printError('reasons')}\r\n                </ErrorContainer>\r\n                <FooterContainer>\r\n                    <ButtonContainer color={colors.primary}>\r\n                        <Button type='submit'>\r\n                            <BookBookmark size={24} />\r\n                            Enviar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <ButtonContainer color='red'>\r\n                        <Button onClick={handleClose}>\r\n                            <XCircle size={24} />\r\n                            Cancelar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                </FooterContainer>\r\n            </FooterWrapper>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default StockForm;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    Wrapper,\r\n    ContentContainer,\r\n    ToolbarContainer,\r\n    TableContainer,\r\n    FormContainer,\r\n    ConfirmContainer,\r\n} from 'components/CommonLayout/main.layout';\r\n\r\nimport Modal from 'components/Modal';\r\nimport Toolbar from 'components/Toolbar';\r\nimport { ButtonContainer } from 'components/Toolbar/styles';\r\nimport Button from 'components/Button';\r\nimport { colors } from 'styles/theme';\r\nimport { Package } from 'phosphor-react';\r\nimport ProductsTable from 'components/ModuleTables/ProductsTable';\r\nimport { useNotification } from 'hooks/notification';\r\nimport Notification from 'components/Notification';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport ProductForm from './CRUDForm';\r\nimport StockForm from './stockForm';\r\nimport { deleteProductVariantApi } from 'api/product_variants';\r\n\r\nconst Products = () => {\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const { notification, showNotification } = useNotification(null);\r\n\r\n    useEffect(() => {\r\n        if (CRUDAction === 'refresh') setSelectedProduct(null);\r\n    }, [CRUDAction]);\r\n\r\n    const handleCRUD = (event) => {\r\n        if (event.currentTarget.name === 'ToolbarCreate') {\r\n            setCRUDAction('create');\r\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\r\n            setCRUDAction('edit');\r\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\r\n            setCRUDAction('delete');\r\n        } else if (event.currentTarget.name === 'reassignStock') {\r\n            setCRUDAction('reassignStock');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (submitMessage) => {\r\n        showNotification('success', submitMessage, 2000);\r\n        setCRUDAction('refresh');\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteProductVariantApi(selectedProduct.id);\r\n        setCRUDAction('refresh');\r\n        setSelectedProduct(null);\r\n        return response;\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <ContentContainer>\r\n                <ToolbarContainer>\r\n                    <Toolbar\r\n                        recordSelected={selectedProduct ? true : false}\r\n                        onCreate={handleCRUD}\r\n                        onEdit={handleCRUD}\r\n                        onDelete={handleCRUD}\r\n                    >\r\n                        <ButtonContainer color={colors.brown}>\r\n                            <Button name='reassignStock' onClick={handleCRUD} disabled={!selectedProduct}>\r\n                                <Package size='24' />\r\n                                Reasignar Stock\r\n                            </Button>\r\n                        </ButtonContainer>\r\n                    </Toolbar>\r\n                </ToolbarContainer>\r\n                <TableContainer>\r\n                    <ProductsTable\r\n                        shouldRefresh={CRUDAction === 'refresh'}\r\n                        selectedRows={selectedProduct}\r\n                        onProductSelect={setSelectedProduct}\r\n                        showNotification={showNotification}\r\n                    />\r\n                </TableContainer>\r\n                <Modal\r\n                    show={CRUDAction && CRUDAction !== 'refresh'}\r\n                    handleClose={() => {\r\n                        setCRUDAction(null);\r\n                    }}\r\n                >\r\n                    {(CRUDAction === 'create' || CRUDAction === 'edit') && (\r\n                        <FormContainer width='650px'>\r\n                            <ProductForm\r\n                                product={CRUDAction === 'edit' && selectedProduct && selectedProduct.product}\r\n                                action={CRUDAction}\r\n                                handleClose={() => setCRUDAction(null)}\r\n                                onSubmit={handleSubmit}\r\n                            />\r\n                        </FormContainer>\r\n                    )}\r\n                    {CRUDAction === 'reassignStock' && (\r\n                        <FormContainer width='500px' top='100px'>\r\n                            <StockForm\r\n                                product={selectedProduct && selectedProduct.product}\r\n                                handleClose={() => setCRUDAction(null)}\r\n                                onSubmit={handleSubmit}\r\n                            />\r\n                        </FormContainer>\r\n                    )}\r\n                    {CRUDAction === 'delete' && (\r\n                        <ConfirmContainer>\r\n                            <ConfirmAlert\r\n                                showNotification={showNotification}\r\n                                handleClose={() => setCRUDAction(null)}\r\n                                callback={handleDelete}\r\n                            />\r\n                        </ConfirmContainer>\r\n                    )}\r\n                </Modal>\r\n            </ContentContainer>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/supplyings';\r\n\r\nexport const getSupplyings = async ({ page, filter, count }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n    let countParam = count ? `&count=${count}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + countParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createSupplying = async (supplyingData) => {\r\n    const response = await axios.post(BASE_URL, supplyingData).catch((error) => error.response);\r\n    console.log(response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateSupplying = async (id, supplyingData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, supplyingData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteSupplying = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Proveedor',\r\n        accessor: 'supplier.name',\r\n    },\r\n    {\r\n        Header: 'Producto',\r\n        accessor: 'product_variant.name',\r\n    },\r\n    {\r\n        Header: 'Precio',\r\n        accessor: 'buyPrice',\r\n        Cell: ({ value }) => {\r\n            return `$${value}`;\r\n        },\r\n    },\r\n    {\r\n        Header: 'Cantidad',\r\n        accessor: 'quantity',\r\n    },\r\n    {\r\n        Header: 'Creado',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n];\r\n","import { useState, useMemo, useEffect } from 'react';\r\n\r\nimport Table from 'components/Table';\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getSupplyings } from 'api/supplyings';\r\n\r\nimport { COLUMNS } from './columns';\r\n\r\nconst SupplyingsTable = ({ onSupplyingSelect, selectedRows, shouldRefresh, showNotification }) => {\r\n    const [page, setPage] = useState(1);\r\n    const [filter, setFilter] = useState('');\r\n    const memoizedColumns = useMemo(() => COLUMNS || [], []);\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getSupplyings });\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) showNotification('error', error.message, 3000);\r\n    }, [error, showNotification]);\r\n\r\n    return (\r\n        <Table\r\n            selectedRows={selectedRows}\r\n            onRowSelect={onSupplyingSelect}\r\n            loading={loading}\r\n            data={data.records}\r\n            columns={memoizedColumns}\r\n            onFilter={setFilter}\r\n            filterPlaceholder='Buscar por id, proveedor, producto.'\r\n            onPaginate={setPage}\r\n            pageCount={data.pageCount}\r\n            capitalize={[1, 2]}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SupplyingsTable;\r\n","import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    product_variant_id: yup.number().required('El campo producto es requerido').typeError('Debe elegir un producto'),\r\n    supplierId: yup.number().required('El campo proveedor es requerido').typeError('Debe elegir un proveedor'),\r\n    buyPrice: yup.number().required('El campo precio de compra es requerido').typeError('El precio de compra debe tener un valor numérico'),\r\n    quantity: yup.number().required('El campo cantidad es requerido').typeError('La cantidad debe tener un valor numérico'),\r\n});\r\n\r\nexport default schema;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    div {\r\n        flex-direction: row;\r\n    }\r\n    input,\r\n    div {\r\n        text-transform: capitalize;\r\n    }\r\n`;\r\n\r\nexport const SuggestionBox = styled.div`\r\n    display: ${(props) => (props.shouldOpen ? 'flex' : 'none')};\r\n    position: absolute;\r\n    padding: 5px;\r\n    top: 100%;\r\n    max-height: 100px;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    border-radius: 4px;\r\n    box-shadow: rgba(101 119 134 / 20%) 0px 0px 15px, rgba(101 119 134 / 25%) 0px 0px 3px 1px;\r\n    background: white;\r\n`;\r\n\r\nexport const OptionLabel = styled.option`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    padding: 5px 0;\r\n\r\n    :focus {\r\n        background: blue;\r\n        color: white;\r\n    }\r\n`;\r\n","import { Wrapper } from './styles';\r\nimport AsyncSelect from 'react-select/async-creatable';\r\nimport { colors } from 'styles/theme';\r\nimport debounce from 'debounce-promise';\r\n\r\nconst SearchInput = ({\r\n    innerRef,\r\n    size,\r\n    styles,\r\n    isError,\r\n    value,\r\n    autoFocus,\r\n    onSelect,\r\n    placeholder,\r\n    isDisabled,\r\n    loadOptions,\r\n    onCreateOption,\r\n    defaultOptions = true,\r\n    cacheOptions = true,\r\n}) => {\r\n    return (\r\n        <Wrapper>\r\n            <AsyncSelect\r\n                styles={{\r\n                    menu: (provided) => ({\r\n                        ...provided,\r\n                        flexDirection: 'column !important',\r\n                    }),\r\n                    menuList: (provided) => ({\r\n                        ...provided,\r\n                        flexDirection: 'column !important',\r\n                    }),\r\n                    container: (provided) => ({\r\n                        ...provided,\r\n                    }),\r\n                    control: (provided, state) => {\r\n                        return {\r\n                            ...provided,\r\n                            width: '100%',\r\n                            boxShadow: state.selectProps.isError\r\n                                ? '0 0 0 2px red'\r\n                                : state.isFocused\r\n                                ? '0 0 0 2px ' + colors.secondary\r\n                                : '0 0 0 1px ' + colors.lightBlack,\r\n                            color: colors.secondary + ' !important',\r\n                            border: 'none',\r\n                            padding: size === 'medium' ? '5px 0px' : size === 'large' ? '10px 0px' : 'auto',\r\n                        };\r\n                    },\r\n                    option: (provided) => ({\r\n                        ...provided,\r\n                    }),\r\n                    ...styles,\r\n                }}\r\n                loadOptions={debounce((inputValue, callback) => loadOptions(inputValue, callback), 150)}\r\n                defaultOptions={defaultOptions}\r\n                cacheOptions={cacheOptions}\r\n                value={value}\r\n                autoFocus={autoFocus}\r\n                placeholder={placeholder}\r\n                isDisabled={isDisabled}\r\n                onChange={onSelect}\r\n                ref={innerRef}\r\n                loadingMessage={() => {\r\n                    return 'Cargando...';\r\n                }}\r\n                onCreateOption={onCreateOption}\r\n                isClearable\r\n                isError={isError}\r\n            />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useState, useEffect } from 'react';\r\nimport SearchInput from 'components/SearchInput';\r\nimport { getSuppliers } from 'api/suppliers';\r\n\r\nconst SupplierSearch = ({ value, autoFocus, onSelect }) => {\r\n    const [selectedSupplier, setSelectedSupplier] = useState();\r\n\r\n    useEffect(() => {\r\n        if (value) setSelectedSupplier({ label: value.name, value });\r\n    }, [value]);\r\n\r\n    const loadSuppliers = async (inputValue) => {\r\n        const suppliers = await getSuppliers({ page: 0, filter: inputValue });\r\n        if (suppliers && suppliers.records.length > 0) {\r\n            const records = suppliers.records.map((record) => {\r\n                const supplier = {\r\n                    label: record.name,\r\n                    value: record,\r\n                };\r\n                return supplier;\r\n            });\r\n\r\n            return records;\r\n        }\r\n    };\r\n\r\n    const handleSelect = (option, { action }) => {\r\n        if (action === 'select-option') {\r\n            setSelectedSupplier({ label: option.label, value: option.value });\r\n            onSelect(option.value, action);\r\n        } else {\r\n            setSelectedSupplier(null);\r\n            onSelect(null, action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SearchInput\r\n            loadOptions={loadSuppliers}\r\n            placeholder='Proveedor'\r\n            value={selectedSupplier}\r\n            onSelect={handleSelect}\r\n            autoFocus={autoFocus}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SupplierSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport SearchInput from 'components/SearchInput';\r\nimport { getProductVariants } from 'api/product_variants';\r\n\r\nconst ProductSearch = ({ hideOutOfStock, innerRef, value, autoFocus = false, isDisabled, showPriceOnName = false, onSelect }) => {\r\n    const [selectedProduct, setSelectedProduct] = useState();\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            setSelectedProduct({ label: value.name, value });\r\n        } else {\r\n            setSelectedProduct(null);\r\n        }\r\n    }, [value]);\r\n\r\n    const loadProductVariants = async (inputValue) => {\r\n        let products = await getProductVariants({ page: 0, filter: inputValue });\r\n\r\n        if (products && products.records.length > 0) {\r\n            if (hideOutOfStock) products.records = products.records.filter((p) => p.stock > 0);\r\n\r\n            const records = products.records.map((record) => {\r\n                let product_name = record.name;\r\n                if (showPriceOnName) {\r\n                    product_name = `${record.name} - ${record.converted_price['PRICE_VES']} Bs`;\r\n                }\r\n                const product = {\r\n                    key: record.id,\r\n                    label: product_name,\r\n                    value: record,\r\n                };\r\n                return product;\r\n            });\r\n\r\n            return records;\r\n        }\r\n    };\r\n\r\n    const handleSelect = (option, { action }) => {\r\n        if (action === 'select-option') {\r\n            setSelectedProduct({ label: option.value.name, value: option.value });\r\n            onSelect(option.value, action);\r\n        } else if (action === 'clear') {\r\n            setSelectedProduct(null);\r\n            onSelect(null, action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SearchInput\r\n            loadOptions={loadProductVariants}\r\n            placeholder='Buscar...'\r\n            value={selectedProduct}\r\n            onSelect={handleSelect}\r\n            autoFocus={autoFocus}\r\n            innerRef={innerRef}\r\n            isDisabled={isDisabled}\r\n            styles={{\r\n                option: (provided, state) => {\r\n                    const stock = state.data.value.stock;\r\n                    const color = stock > 0 ? 'green' : 'red';\r\n\r\n                    return {\r\n                        ...provided,\r\n                        color,\r\n                    };\r\n                },\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProductSearch;\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'Nombre',\r\n        accessor: 'product_variant.name',\r\n    },\r\n    {\r\n        Header: '$',\r\n        accessor: 'buyPrice',\r\n    },\r\n    {\r\n        Header: 'Cantidad',\r\n        accessor: 'quantity',\r\n    },\r\n    {\r\n        Header: 'Fecha',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return <span title={formatDate(value)}>{formatDate(value)}</span>;\r\n        },\r\n    },\r\n];\r\n","import { useMemo } from 'react';\r\n\r\nimport Table from 'components/Table';\r\n\r\nimport { COLUMNS } from './columns.js';\r\n\r\nconst RecentSupplyingsTable = ({ supplyings, loading }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    return <Table loading={loading} data={supplyings} columns={memoizedColumns} capitalize={[0]} />;\r\n};\r\n\r\nexport default RecentSupplyingsTable;\r\n","import { useEffect, useState, useRef } from 'react';\r\n\r\nimport * as L from 'components/CommonLayout/form.layout';\r\n\r\nimport Button from 'components/Button';\r\nimport { colors } from 'styles/theme';\r\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { createSupplying, updateSupplying } from 'api/supplyings';\r\nimport { getRecentSupplyings } from 'api/product_variants';\r\nimport NumericInput from 'react-number-format';\r\n\r\nimport supplyingSchema from 'validations/schemas/supplying';\r\n\r\nimport SupplierSearch from 'components/SupplierSearch';\r\nimport ProductSearch from 'components/ProductSearch';\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport RecentSupplyingsTable from 'components/ModuleTables/RecentSupplyingsTable';\r\n\r\nconst SupplyingForm = ({ supplying, action, handleClose, onSubmit }) => {\r\n    const { handleNumericInput, loading, handleSubmit, formData, setFormData, printError, hasError } = useForm({\r\n        initialState: {\r\n            supplierId: null,\r\n            product_variant_id: null,\r\n            buyPrice: null,\r\n            quantity: null,\r\n        },\r\n        action,\r\n        createResource: createSupplying,\r\n        editResource: updateSupplying,\r\n        schema: supplyingSchema,\r\n        onSubmitSuccess: onSubmit,\r\n    });\r\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const [loadingRecentSupplyings, setLoadingRecentSupplyings] = useState(false);\r\n    const [recentSupplyings, setRecentSupplyings] = useState(null);\r\n    const [productSearchDisabled, setProductSearchDisabled] = useState(false);\r\n\r\n    const supplierRef = useRef(null);\r\n    const productRef = useRef(null);\r\n    const buyPriceRef = useRef(null);\r\n    const quantityRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (supplying) {\r\n            //fetchRecentSupplyings(supplying.product_variant.id);\r\n            setFormData({\r\n                id: supplying.id,\r\n                supplierId: supplying.supplier.id,\r\n                product_variant_id: supplying.product_variant.id,\r\n                buyPrice: supplying.buyPrice,\r\n                quantity: supplying.quantity,\r\n            });\r\n            setSelectedProduct(supplying.product_variant);\r\n            setSelectedSupplier(supplying.supplier);\r\n        }\r\n    }, [supplying, setFormData]);\r\n\r\n    const fetchRecentSupplyings = async (product_variant_id) => {\r\n        setLoadingRecentSupplyings(true);\r\n        setProductSearchDisabled(true);\r\n        const response = await getRecentSupplyings({ page: 1, count: 5, product_variant_id });\r\n        setRecentSupplyings(response.records);\r\n        setLoadingRecentSupplyings(false);\r\n        setProductSearchDisabled(false);\r\n        return response;\r\n    };\r\n\r\n    const onProductSelect = async (product, select_action) => {\r\n        if (!loadingRecentSupplyings && action === 'create' && select_action === 'select-option') {\r\n            const response = await fetchRecentSupplyings(product.id);\r\n\r\n            if (response && response.records.length > 0) {\r\n                const mostRecentSupplying = response.records[0];\r\n                setFormData({\r\n                    ...formData,\r\n                    product_variant_id: product.id,\r\n                    buyPrice: mostRecentSupplying.buyPrice,\r\n                    quantity: mostRecentSupplying.quantity,\r\n                });\r\n                setTimeout(() => quantityRef.current.focus());\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    product_variant_id: product.id,\r\n                    buyPrice: '',\r\n                    quantity: '',\r\n                });\r\n                setTimeout(() => buyPriceRef.current.focus());\r\n            }\r\n            setSelectedProduct(product);\r\n        } else {\r\n            setFormData({ ...formData, product_variant_id: product ? product.id : null });\r\n        }\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        setTimeout(() => productRef.current.focus());\r\n        handleSubmit(event);\r\n    };\r\n\r\n    return (\r\n        <L.Form onSubmit={submitHandler}>\r\n            <L.HeaderContainer>\r\n                <L.CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </L.CloseButtonContainer>\r\n                <L.TitleContainer>{action === 'create' ? 'Crear abastecimiento' : 'Editar abastecimiento'}</L.TitleContainer>\r\n            </L.HeaderContainer>\r\n            <L.BodyContainer>\r\n                <L.InputContainer>\r\n                    <SupplierSearch\r\n                        innerRef={supplierRef}\r\n                        onSelect={(supplier, action) => {\r\n                            setSelectedSupplier(supplier);\r\n                            setFormData({ ...formData, supplierId: supplier ? supplier.id : null });\r\n                            productRef.current.focus();\r\n                        }}\r\n                        value={selectedSupplier}\r\n                        autoFocus\r\n                    />\r\n                    {printError('supplierId')}\r\n                </L.InputContainer>\r\n                <L.InputContainer>\r\n                    <ProductSearch\r\n                        onSelect={onProductSelect}\r\n                        isDisabled={productSearchDisabled}\r\n                        innerRef={productRef}\r\n                        value={selectedProduct}\r\n                    />\r\n                    {printError('product_variant_id')}\r\n                </L.InputContainer>\r\n                <L.InlineContainer>\r\n                    <L.InputContainer>\r\n                        <LabeledInput\r\n                            innerRef={buyPriceRef}\r\n                            onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'buyPrice')}\r\n                            value={formData.buyPrice}\r\n                            placeholder='Precio/Unidad'\r\n                            prefix='$ '\r\n                            as={NumericInput}\r\n                            errorborder={hasError('buyPrice')}\r\n                            required\r\n                        />\r\n                        {printError('buyPrice')}\r\n                    </L.InputContainer>\r\n                    <L.InputContainer>\r\n                        <LabeledInput\r\n                            innerRef={quantityRef}\r\n                            onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'quantity')}\r\n                            value={formData.quantity}\r\n                            placeholder='Cantidad'\r\n                            as={NumericInput}\r\n                            errorborder={hasError('quantity')}\r\n                            required\r\n                        />\r\n                        {printError('quantity')}\r\n                    </L.InputContainer>\r\n                </L.InlineContainer>\r\n                {selectedProduct && (\r\n                    <L.TableContainer>\r\n                        <h4>Abastecimientos recientes</h4>\r\n                        <RecentSupplyingsTable supplyings={recentSupplyings || []} loading={loadingRecentSupplyings} />\r\n                    </L.TableContainer>\r\n                )}\r\n            </L.BodyContainer>\r\n            <L.FooterWrapper>\r\n                <L.ErrorContainer>{printError('undefined')}</L.ErrorContainer>\r\n                <L.FooterContainer>\r\n                    <L.ButtonContainer color={colors.primary}>\r\n                        <Button loading={loading} type='submit'>\r\n                            <BookBookmark size={24} />\r\n                            Enviar\r\n                        </Button>\r\n                    </L.ButtonContainer>\r\n                    <L.ButtonContainer color='red'>\r\n                        <Button onClick={handleClose}>\r\n                            <XCircle size={24} />\r\n                            Cancelar\r\n                        </Button>\r\n                    </L.ButtonContainer>\r\n                </L.FooterContainer>\r\n            </L.FooterWrapper>\r\n        </L.Form>\r\n    );\r\n};\r\nexport default SupplyingForm;\r\n","import { useState } from 'react';\r\nimport * as L from 'components/CommonLayout/main.layout';\r\nimport Toolbar from 'components/Toolbar';\r\nimport SupplyingsTable from 'components/ModuleTables/SupplyingsTable';\r\nimport { useNotification } from 'hooks/notification';\r\nimport SupplyingForm from './CRUDForm';\r\nimport Modal from 'components/Modal';\r\nimport { deleteSupplying } from 'api/supplyings';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport Notification from 'components/Notification';\r\n\r\nconst Supplyings = () => {\r\n    const [selectedSupplying, setSelectedSupplying] = useState(null);\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const { notification, showNotification } = useNotification();\r\n\r\n    function handleCRUD(event) {\r\n        if (event.currentTarget.name === 'ToolbarCreate') {\r\n            setCRUDAction('create');\r\n        } else if (event.currentTarget.name === 'ToolbarEdit') {\r\n            setCRUDAction('edit');\r\n        } else if (event.currentTarget.name === 'ToolbarDelete') {\r\n            setCRUDAction('delete');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (submitMessage) => {\r\n        showNotification('success', submitMessage, 2000);\r\n        const crudAction = CRUDAction;\r\n        setCRUDAction('refresh');\r\n        setCRUDAction(crudAction);\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteSupplying(selectedSupplying.id);\r\n        if (response.error) {\r\n            showNotification('error', response.error.message);\r\n            setCRUDAction(null);\r\n        } else {\r\n            refreshTable();\r\n        }\r\n    };\r\n\r\n    const refreshTable = () => {\r\n        setCRUDAction('refresh');\r\n        setCRUDAction(null);\r\n    };\r\n\r\n    return (\r\n        <L.Wrapper>\r\n            <L.ToolbarContainer>\r\n                <Toolbar onCreate={handleCRUD} onEdit={handleCRUD} onDelete={handleCRUD} recordSelected={selectedSupplying} />\r\n            </L.ToolbarContainer>\r\n            <L.ContentContainer>\r\n                <L.TableContainer>\r\n                    <SupplyingsTable\r\n                        onSupplyingSelect={setSelectedSupplying}\r\n                        selectedRows={selectedSupplying}\r\n                        shouldRefresh={CRUDAction === 'refresh'}\r\n                        showNotification={showNotification}\r\n                    />\r\n                </L.TableContainer>\r\n                <Modal backdrop show={CRUDAction ? true : false} handleClose={() => setCRUDAction(null)}>\r\n                    {(CRUDAction === 'create' || CRUDAction === 'edit' || CRUDAction === 'refresh') && (\r\n                        <L.FormContainer>\r\n                            <SupplyingForm\r\n                                onSubmit={handleSubmit}\r\n                                action={CRUDAction}\r\n                                supplying={CRUDAction === 'edit' && selectedSupplying}\r\n                                handleClose={() => setCRUDAction(null)}\r\n                            />\r\n                        </L.FormContainer>\r\n                    )}\r\n                    {CRUDAction === 'delete' && (\r\n                        <L.ConfirmContainer>\r\n                            <ConfirmAlert\r\n                                showNotification={showNotification}\r\n                                handleClose={() => setCRUDAction(null)}\r\n                                callback={handleDelete}\r\n                            />\r\n                        </L.ConfirmContainer>\r\n                    )}\r\n                </Modal>\r\n            </L.ContentContainer>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </L.Wrapper>\r\n    );\r\n};\r\nexport default Supplyings;\r\n","import styled from 'styled-components';\r\nimport { colors, breakpoints } from 'styles/theme';\r\n\r\nexport const MainContainer = styled.div`\r\n    height: 100%;\r\n    border: 1px solid black;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport const MetadataContainer = styled.div`\r\n    flex: 0 0 40%;\r\n    border-top: 1px solid black;\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        flex-direction: row;\r\n        flex: 0 0 auto;\r\n        max-height: 25%;\r\n    }\r\n`;\r\n\r\nexport const InvoiceFormContainer = styled.div`\r\n    flex: 1 0 60%;\r\n    overflow: auto;\r\n    max-height: 100%;\r\n`;\r\n\r\nexport const ClientContainer = styled.div`\r\n    flex: 0 0 auto;\r\n    border-bottom: 1px solid black;\r\n    gap: 5px;\r\n    padding-bottom: 10px;\r\n\r\n    h3 {\r\n        margin: 5px 0 0 0;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        padding: 10px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        flex: 1 0 50%;\r\n        border-bottom: none;\r\n        border-right: 1px solid black;\r\n    }\r\n`;\r\n\r\nexport const PaymentsContainer = styled.div`\r\n    flex: 1 1 50%;\r\n\r\n    border-top: 1px solid black;\r\n    gap: 5px;\r\n    overflow: auto;\r\n    padding-bottom: 10px;\r\n\r\n    h3 {\r\n        margin: 5px 0 0 0;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        padding: 10px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.laptop}) {\r\n        border-top: none;\r\n    }\r\n`;\r\n\r\nexport const InvoiceTotalContainer = styled.div`\r\n    flex: 0 1 auto;\r\n    flex-direction: row;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    margin-bottom: 5px;\r\n    width: 100%;\r\n\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n`;\r\n\r\nexport const ClientNameContainer = styled.div`\r\n    flex: 1;\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const ClientPhoneNumberContainer = styled.div`\r\n    flex: 1;\r\n    display: none;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const OrderDetailsContainer = styled.div`\r\n    flex: 1;\r\n\r\n    overflow-y: auto;\r\n\r\n    border-top: 1px solid black;\r\n\r\n    @media (min-width: ${breakpoints.mobile}) {\r\n        flex-direction: row;\r\n    }\r\n`;\r\n\r\nexport const ProductFormContainer = styled.div``;\r\n\r\nexport const TableContainer = styled.div`\r\n    flex: 1 1 100%;\r\n    overflow: auto;\r\n\r\n    margin-bottom: 10px;\r\n\r\n    td {\r\n        padding: 5px;\r\n    }\r\n`;\r\n\r\nexport const FooterContainer = styled.div`\r\n    flex-direction: row-reverse;\r\n    justify-content: space-between;\r\n\r\n    button {\r\n        padding: 5px 10px;\r\n        color: white;\r\n        font-size: 16px;\r\n        background: ${(props) => props.color || 'transparent'};\r\n    }\r\n`;\r\n\r\nexport const ActionsContainer = styled.div`\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 5px 0;\r\n\r\n    button {\r\n        padding: 10px;\r\n    }\r\n`;\r\n\r\nexport const TotalContainer = styled.fieldset`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n\r\n    place-items: end;\r\n\r\n    padding: 2px;\r\n    min-height: 100%;\r\n    width: 100%;\r\n\r\n    legend {\r\n        color: ${colors.primary};\r\n    }\r\n\r\n    label {\r\n        padding: 5px;\r\n    }\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n        font-size: 22px;\r\n    }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport SearchInput from 'components/SearchInput';\r\nimport { getClients } from 'api/clients';\r\n\r\nconst ClientSearch = ({ size, innerRef, value, autoFocus, onSelect, onCreate }) => {\r\n    const [selectedClient, setSelectedClient] = useState();\r\n\r\n    useEffect(() => {\r\n        if (value) setSelectedClient({ label: value.name, value });\r\n    }, [value]);\r\n\r\n    const loadClients = async (inputValue) => {\r\n        const clients = await getClients({ page: 1, filter: inputValue });\r\n\r\n        if (clients && clients.records.length > 0) {\r\n            const records = clients.records.map((client) => {\r\n                const formattedClient = {\r\n                    key: client.id,\r\n                    label: `${client.name} - ${Number(client.cedula).toLocaleString()}`,\r\n                    value: client,\r\n                };\r\n                return formattedClient;\r\n            });\r\n\r\n            return records;\r\n        }\r\n    };\r\n\r\n    const handleSelect = (option, { action }) => {\r\n        if (action === 'select-option') {\r\n            setSelectedClient({ label: option.value.name, value });\r\n            onSelect(option.value, action);\r\n        } else if (action === 'clear') {\r\n            setSelectedClient(null);\r\n            onSelect(null, action);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SearchInput\r\n            onCreateOption={onCreate}\r\n            innerRef={innerRef}\r\n            loadOptions={loadClients}\r\n            defaultOptions={false}\r\n            cacheOptions={false}\r\n            placeholder='Cliente'\r\n            value={selectedClient}\r\n            onSelect={handleSelect}\r\n            autoFocus={autoFocus}\r\n            isError={selectedClient && selectedClient.value.sale && selectedClient.value.sale.length > 0}\r\n            size={size}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ClientSearch;\r\n","import NumberFormat from 'react-number-format';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'Producto',\r\n        accessor: (row) => {\r\n            return row.name || row.product_variant.name;\r\n        },\r\n        minWidth: 10,\r\n        maxWidth: 20,\r\n        width: 15,\r\n    },\r\n    {\r\n        Header: 'Precio',\r\n        accessor: (row) => {\r\n            return (\r\n                <NumberFormat\r\n                    decimalSeparator=','\r\n                    thousandSeparator='.'\r\n                    suffix=' Bs'\r\n                    displayType='text'\r\n                    value={row.converted_price.PRICE_VES}\r\n                />\r\n            );\r\n        },\r\n    },\r\n    {\r\n        Header: 'Cantidad',\r\n        accessor: 'quantity',\r\n    },\r\n    {\r\n        Header: 'Total',\r\n        accessor: (row) => {\r\n            return (\r\n                <NumberFormat\r\n                    decimalSeparator=','\r\n                    thousandSeparator='.'\r\n                    suffix=' Bs'\r\n                    displayType='text'\r\n                    value={Number((row.converted_price['PRICE_VES'] * row.quantity).toFixed(2))}\r\n                />\r\n            );\r\n        },\r\n    },\r\n];\r\n","import { useMemo } from 'react';\r\n\r\nimport Table from 'components/Table';\r\n\r\nimport { COLUMNS } from './columns.js';\r\n\r\nconst SalesControlTable = ({ onDeleteRow, onProductSelect, selectedRows, onFilter, maxHeight, products = [] }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    return (\r\n        <Table\r\n            onRowSelect={onProductSelect}\r\n            selectedRows={selectedRows}\r\n            async={false}\r\n            data={products}\r\n            columns={memoizedColumns}\r\n            capitalize={[0]}\r\n            theme='dark'\r\n            onDeleteRow={onDeleteRow}\r\n            onFilter={onFilter}\r\n            filterPlaceholder='Buscar...'\r\n            maxHeight={maxHeight}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SalesControlTable;\r\n","import styled from 'styled-components';\r\nimport { colors } from 'styles/theme';\r\nimport NumberInput from 'react-number-format';\r\n\r\nexport const FormContainer = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr 10% auto;\r\n    text-align: center;\r\n    gap: 10px;\r\n    padding: 10px;\r\n\r\n    button {\r\n        border-radius: 5px;\r\n        color: white;\r\n        font-size: 16px;\r\n        background: ${colors.primary};\r\n    }\r\n\r\n    h4 {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const QuantityInput = styled(NumberInput)`\r\n    border-radius: 5px;\r\n    border: 1px solid grey;\r\n\r\n    :focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px ${colors.secondary};\r\n    }\r\n`;\r\n","import { useState, createContext } from 'react';\r\n\r\nexport const DolarContext = createContext(null);\r\n\r\nconst DolarContextProvider = ({ children }) => {\r\n    const [currencyRates, setCurrencyRates] = useState();\r\n\r\n    return <DolarContext.Provider value={{ currencyRates, setCurrencyRates }}>{children}</DolarContext.Provider>;\r\n};\r\nexport default DolarContextProvider;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/currencyRates';\r\n\r\nexport const getCurrencyRate = async (currency) => {\r\n    const response = await axios.get(`${BASE_URL}/${currency}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const getCurrencyRates = async () => {\r\n    const response = await axios.get(BASE_URL).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateCurrencyRateRequest = async (data) => {\r\n    const response = await axios.patch(`${BASE_URL}/${data.currency}`, data).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import { useContext, useEffect, useCallback } from 'react';\r\nimport { DolarContext } from 'context/dolar';\r\nimport { getCurrencyRates, updateCurrencyRateRequest } from 'api/currencyRate';\r\nimport { useNotification } from 'hooks/notification';\r\n\r\nexport const useCurrencyRates = (fetchOnMount = false) => {\r\n    const { currencyRates, setCurrencyRates } = useContext(DolarContext);\r\n    const { notification, showNotification } = useNotification();\r\n\r\n    const getCurrencyRatesFromLocalStorage = () => {\r\n        return window.localStorage.getItem('dolarValue');\r\n    };\r\n\r\n    const updateCurrencyRate = useCallback(\r\n        async (data) => {\r\n            const response = await updateCurrencyRateRequest(data);\r\n            if (response.error) {\r\n                showNotification('error', response.error.message);\r\n            } else {\r\n                setCurrencyRates(response);\r\n            }\r\n        },\r\n        [setCurrencyRates, showNotification]\r\n    );\r\n\r\n    const fetchCurrencyRates = useCallback(async () => {\r\n        const response = await getCurrencyRates();\r\n        if (response.error) {\r\n            showNotification('error', response.error.message);\r\n        } else {\r\n            setCurrencyRates(response);\r\n        }\r\n    }, [setCurrencyRates, showNotification]);\r\n\r\n    useEffect(() => {\r\n        if (fetchOnMount) fetchCurrencyRates();\r\n    }, [fetchCurrencyRates, fetchOnMount]);\r\n\r\n    return { currencyRates, notification, showNotification, fetchCurrencyRates, updateCurrencyRate, getCurrencyRatesFromLocalStorage };\r\n};\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport * as L from './styles';\r\n\r\nimport Button from 'components/Button';\r\nimport ProductSearch from 'components/ProductSearch';\r\nimport { getProductVariantById } from 'api/product_variants';\r\nimport Notification from 'components/Notification';\r\nimport { useNotification } from 'hooks/notification';\r\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\r\n\r\nconst SaleProductForm = ({ productToEdit, productSearchRef, onSubmit }) => {\r\n    const { currencyRates } = useCurrencyRates(false);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const { notification, showNotification } = useNotification();\r\n    let quantityInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (productToEdit) {\r\n            setSelectedProduct(productToEdit);\r\n            setQuantity(productToEdit.quantity);\r\n            quantityInputRef.current.focus();\r\n        } else {\r\n            setSelectedProduct(null);\r\n            setQuantity(1);\r\n            productSearchRef.current.focus();\r\n        }\r\n    }, [productToEdit, productSearchRef]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!currencyRates) {\r\n            showNotification('error', 'Debe asignar el valor del dolar');\r\n            return;\r\n        }\r\n        if (!selectedProduct || !quantity) {\r\n            showNotification('error', 'Producto o cantidad vacia');\r\n            return;\r\n        }\r\n\r\n        const product = await getProductVariantById(selectedProduct.id);\r\n        const stock = Number(product.stock);\r\n\r\n        if (stock < quantity) {\r\n            showNotification('error', `No hay suficiente stock. Queda(n) ${stock} producto(s).`);\r\n            return;\r\n        }\r\n\r\n        if (!loading) {\r\n            setLoading(true);\r\n            onSubmit({\r\n                ...product,\r\n                name: product.name,\r\n                price: Number(product.price),\r\n                quantity,\r\n                profitPercent: Number(product.profitPercent),\r\n                stock: Number(product.stock),\r\n            });\r\n            setLoading(false);\r\n\r\n            setQuantity(1);\r\n            setSelectedProduct(null);\r\n            productSearchRef.current.focus();\r\n        }\r\n    };\r\n\r\n    const onProductSelect = (product, action) => {\r\n        setSelectedProduct(product);\r\n        if (action === 'select-option') quantityInputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <L.FormContainer onSubmit={handleSubmit}>\r\n            <h4>Producto</h4>\r\n            <h4>Cantidad</h4>\r\n            <label></label>\r\n            <ProductSearch\r\n                hideOutOfStock\r\n                innerRef={productSearchRef}\r\n                value={selectedProduct}\r\n                onSelect={onProductSelect}\r\n                showPriceOnName\r\n                autoFocus\r\n            />\r\n            <L.QuantityInput\r\n                style={{ textAlign: 'center', fontSize: '16px' }}\r\n                onFocus={(event) => {\r\n                    setTimeout(() => event.target.select());\r\n                }}\r\n                getInputRef={(ref) => (quantityInputRef.current = ref)}\r\n                onValueChange={(values) => setQuantity(values.floatValue)}\r\n                value={quantity}\r\n            />\r\n            <Button loading={loading} type='submit'>\r\n                Enviar\r\n            </Button>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </L.FormContainer>\r\n    );\r\n};\r\n\r\nexport default SaleProductForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div``;\r\nexport const TableContainer = styled.div`\r\n    max-height: 400px;\r\n    overflow: auto;\r\n`;\r\n\r\nexport const ActionsContainer = styled.div`\r\n    flex: 1 0 75px;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    padding: 10px 0;\r\n`;\r\n","import { useMemo } from 'react';\r\n\r\nimport Table from 'components/Table';\r\nimport formatDate from 'utils/formatDate';\r\n\r\nconst DebtSelectionTable = ({ selectedRows, onDebtSelect, onShowDetailsClick, data }) => {\r\n    const memoizedColumns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'ID',\r\n                accessor: 'id',\r\n                Cell: (props) => {\r\n                    return (\r\n                        <button style={{ cursor: 'pointer' }} onClick={() => onShowDetailsClick(props.row.original)}>\r\n                            {props.value}\r\n                        </button>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                Header: 'Deuda Bs',\r\n                accessor: 'debt.converted_amount.PAYMENT_VES',\r\n                Cell: ({ value }) => {\r\n                    return value.toLocaleString() + ' Bs';\r\n                },\r\n            },\r\n            {\r\n                Header: 'Creado',\r\n                accessor: 'createdAt',\r\n                Cell: ({ value }) => {\r\n                    return formatDate(value);\r\n                },\r\n            },\r\n        ],\r\n        [onShowDetailsClick]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                selectedRows={selectedRows}\r\n                onRowSelect={onDebtSelect}\r\n                data={data}\r\n                columns={memoizedColumns}\r\n                capitalize={[1]}\r\n                async={false}\r\n                multiSelect\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DebtSelectionTable;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const TableContainer = styled.div`\r\n    td {\r\n        padding: 5px;\r\n    }\r\n    max-height: 150px;\r\n    overflow: auto;\r\n`;\r\n\r\nexport const MetadataContainer = styled.div`\r\n    flex-direction: row;\r\n    max-height: 160px;\r\n    border-bottom: 1px solid ${colors.shadow};\r\n    padding-bottom: 10px;\r\n`;\r\nexport const ClientContainer = styled.fieldset`\r\n    width: 50%;\r\n    padding: 5px;\r\n    overflow: auto;\r\n`;\r\n\r\nexport const PaymentsContainer = styled.fieldset`\r\n    display: grid;\r\n    width: 50%;\r\n    padding: 5px;\r\n    overflow: auto;\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n    flex-direction: row;\r\n    place-content: space-around;\r\n    min-height: 100%;\r\n\r\n    border-top: 1px solid ${colors.shadow};\r\n`;\r\n\r\nexport const SaleInfoTotal = styled.div`\r\n    flex-direction: row;\r\n`;\r\n\r\nexport const DebtInfoTotal = styled.fieldset`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    gap: 5px;\r\n    width: 100%;\r\n\r\n    legend {\r\n        color: ${colors.primary};\r\n        font-size: 22px;\r\n    }\r\n`;\r\n\r\nexport const DebtLabel = styled.div`\r\n    place-items: end;\r\n`;\r\n\r\nexport const DebtValue = styled.div`\r\n    flex-direction: row;\r\n    gap: 10px;\r\n    place-items: start;\r\n`;\r\n\r\nexport const DebtOriginal = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    align-content: end;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n\r\n    justify-content: start;\r\n\r\n    label,\r\n    span {\r\n        padding: 5px;\r\n    }\r\n\r\n    label {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n","import * as L from './styles';\r\nimport NumericInput from 'react-number-format';\r\n\r\nconst ClientDetails = ({ name = '', cedula = '', phoneNumber = '' }) => {\r\n    return (\r\n        <L.Wrapper>\r\n            <label>Nombre:</label>\r\n            <span>{name || 'Anónimo'}</span>\r\n            <label>Cédula:</label>\r\n            <span>{(cedula && Number(cedula).toLocaleString()) || 'Anónimo'}</span>\r\n            <label>Teléfono:</label>\r\n            {(phoneNumber && <NumericInput displayType='text' value={phoneNumber} format='( #### ) - ### - ####' />) || (\r\n                <span>Anónimo</span>\r\n            )}\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default ClientDetails;\r\n","const Selector = ({ paymentList = [], onChange, value }) => {\r\n    return (\r\n        <select value={value} onChange={onChange}>\r\n            {paymentList.map((payment, index) => {\r\n                return (\r\n                    <option key={payment.id} value={payment.id}>\r\n                        {payment.display_name}\r\n                    </option>\r\n                );\r\n            })}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default Selector;\r\n","import styled from 'styled-components';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nexport const NameContainer = styled.button`\r\n    border: none;\r\n    color: white;\r\n\r\n    place-content: center;\r\n    place-items: center;\r\n\r\n    padding: 0 5px;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background: red !important;\r\n    }\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n    flex: 0 1 100%;\r\n\r\n    input {\r\n        text-align: right;\r\n    }\r\n\r\n    select {\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const CodeContainer = styled.div`\r\n    flex: 0 1 auto;\r\n\r\n    input {\r\n        text-align: right;\r\n    }\r\n`;\r\n\r\nexport const SelectContainer = styled.div`\r\n    select {\r\n        height: 100%;\r\n        cursor: pointer;\r\n    }\r\n\r\n    select:disabled {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const CurrencyContainer = styled.div`\r\n    place-content: center;\r\n    place-items: center;\r\n    padding: 0 5px;\r\n    pointer-events: none;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-direction: row;\r\n    * {\r\n        border-radius: 0;\r\n    }\r\n\r\n    ${SelectContainer} > select, ${NameContainer}, ${CurrencyContainer} {\r\n        color: white;\r\n        ${(props) => (props.ischange ? { background: colors.brown } : { background: colors.primary })}\r\n    }\r\n`;\r\n","import Selector from './Selector';\r\nimport POS from './POS';\r\nimport Transfer from './Transfer';\r\nimport Cash from './Cash';\r\n\r\nconst PaymentMethods = { Selector, POS, Transfer, Cash, Paypal: 'div' };\r\n\r\nexport const paymentList = [\r\n    { cod: 'Cash', name: 'Efectivo' },\r\n    { cod: 'Transfer', name: 'Transferencia' },\r\n    { cod: 'POS', name: 'POS' },\r\n];\r\n\r\nexport default PaymentMethods;\r\n","import * as L from '../styles';\r\nimport NumericInput from 'react-number-format';\r\nimport LabeledInput from 'components/LabeledInput';\r\n\r\nconst POS = ({ inputValue, onChange, onDelete, disabled }) => {\r\n    return (\r\n        <L.Wrapper ischange={inputValue.isChange}>\r\n            <L.NameContainer onClick={onDelete}>POS</L.NameContainer>\r\n            <L.InputContainer>\r\n                <LabeledInput\r\n                    value={inputValue.amount || ''}\r\n                    onValueChange={({ value }) => onChange && onChange(value, 'amount')}\r\n                    placeholder='Monto'\r\n                    thousandSeparator='.'\r\n                    decimalSeparator=','\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                    isNumericString={true}\r\n                    disabled={disabled}\r\n                    as={NumericInput}\r\n                />\r\n            </L.InputContainer>\r\n            <L.CurrencyContainer>Bs</L.CurrencyContainer>\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default POS;\r\n","import * as L from '../styles';\r\nimport NumericInput from 'react-number-format';\r\nimport LabeledInput from 'components/LabeledInput';\r\n\r\nconst Transfer = ({ inputValue, onChange, onDelete, disabled }) => {\r\n    return (\r\n        <L.Wrapper ischange={inputValue.isChange}>\r\n            <L.NameContainer onClick={onDelete}>Transfer</L.NameContainer>\r\n            <L.InputContainer>\r\n                <LabeledInput\r\n                    value={inputValue.amount || ''}\r\n                    onValueChange={({ value }) => onChange && onChange(value, 'amount')}\r\n                    placeholder='Monto'\r\n                    thousandSeparator='.'\r\n                    decimalSeparator=','\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                    isNumericString={true}\r\n                    disabled={disabled}\r\n                    autoFocus\r\n                    as={NumericInput}\r\n                />\r\n            </L.InputContainer>\r\n            <L.CodeContainer>\r\n                <LabeledInput\r\n                    value={inputValue.transaction_code}\r\n                    onValueChange={({ value }) => onChange && onChange(value, 'transaction_code')}\r\n                    placeholder='COD'\r\n                    disabled={disabled}\r\n                    as={NumericInput}\r\n                />\r\n            </L.CodeContainer>\r\n            <L.SelectContainer>\r\n                <select\r\n                    onChange={(event) => onChange && onChange(event.target.value, 'bankId')}\r\n                    value={inputValue.bankId}\r\n                    disabled={disabled}\r\n                >\r\n                    <option value='1'>BDV</option>\r\n                    <option value='2'>BBVA</option>\r\n                </select>\r\n            </L.SelectContainer>\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default Transfer;\r\n","import * as L from '../styles';\r\nimport NumericInput from 'react-number-format';\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\r\n\r\nconst Cash = ({ inputValue, onChange, onDelete, disabled }) => {\r\n    const { currencyRates } = useCurrencyRates();\r\n\r\n    return (\r\n        <L.Wrapper ischange={inputValue.isChange}>\r\n            <L.NameContainer onClick={onDelete}>Cash</L.NameContainer>\r\n            <L.InputContainer>\r\n                <LabeledInput\r\n                    value={inputValue.amount || ''}\r\n                    onValueChange={({ value }) => onChange && onChange(value, 'amount')}\r\n                    placeholder={\r\n                        inputValue.currency && inputValue.currency === 'USD'\r\n                            ? `Monto - ${\r\n                                  currencyRates && currencyRates['PAYMENT_VES'] && currencyRates['PAYMENT_VES'].value\r\n                                      ? ((inputValue.amount || 0) * currencyRates['PAYMENT_VES'].value).toLocaleString()\r\n                                      : ''\r\n                              } Bs`\r\n                            : 'Monto'\r\n                    }\r\n                    thousandSeparator='.'\r\n                    decimalSeparator=','\r\n                    decimalScale={2}\r\n                    fixedDecimalScale={true}\r\n                    isNumericString={true}\r\n                    disabled={disabled}\r\n                    autoFocus\r\n                    as={NumericInput}\r\n                />\r\n            </L.InputContainer>\r\n            <L.SelectContainer>\r\n                <select value={inputValue.currency} onChange={(event) => onChange(event.target.value, 'currency')} disabled={disabled}>\r\n                    <option value='VES'>Bs</option>\r\n                    <option value='USD'>USD</option>\r\n                </select>\r\n            </L.SelectContainer>\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default Cash;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const PaymentName = styled.div``;\r\n","import React from 'react';\r\n\r\nimport PaymentMethods from 'components/PaymentMethod';\r\nimport * as L from './styles';\r\n\r\nconst PaymentDetails = ({ paymentInfo = [] }) => {\r\n    return (\r\n        <L.Wrapper style={{ gap: '1px', marginTop: '0' }}>\r\n            {paymentInfo.map((payment) => {\r\n                return React.createElement(PaymentMethods[payment.payment_method_name || payment.name], {\r\n                    key: payment.id,\r\n                    disabled: true,\r\n                    inputValue: {\r\n                        amount: payment.amount,\r\n                        transaction_code: payment.transaction_code,\r\n                        bankId: payment.bankId,\r\n                        currency: payment.currency,\r\n                        isChange: payment.isChange,\r\n                    },\r\n                });\r\n            })}\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default PaymentDetails;\r\n","import styled from 'styled-components';\r\n\r\nexport const PaymentTitleContainer = styled.div`\r\n    flex-direction: row;\r\n    flex: 0 0 30px;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const AddPaymentContainer = styled.div`\r\n    flex-direction: row;\r\n    gap: 5px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as L from './styles';\r\nimport { colors } from 'styles/theme';\r\n\r\nimport PaymentMethods from 'components/PaymentMethod';\r\nimport Button from 'components/Button';\r\n\r\nconst PaymentsForm = ({\r\n    onPaymentInfoChange,\r\n    onPaymentAdd,\r\n    onPaymentDelete,\r\n    selectedPaymentMethod,\r\n    onPaymentMethodSelect,\r\n    paymentInfo,\r\n    paymentMethods,\r\n    showTitle = true,\r\n}) => {\r\n    return (\r\n        <>\r\n            <L.PaymentTitleContainer>\r\n                <h3>{showTitle ? 'Datos de pago' : ''}</h3>\r\n                <L.AddPaymentContainer>\r\n                    <PaymentMethods.Selector\r\n                        paymentList={paymentMethods}\r\n                        onChange={(event) =>\r\n                            onPaymentMethodSelect({\r\n                                id: event.target.value,\r\n                                name: paymentMethods.find((p) => p.id === Number(event.target.value)).name,\r\n                            })\r\n                        }\r\n                    ></PaymentMethods.Selector>\r\n                    <Button onClick={() => onPaymentAdd(selectedPaymentMethod)} background={colors.primary} color='white'>\r\n                        +\r\n                    </Button>\r\n                    <Button onClick={() => onPaymentAdd(selectedPaymentMethod, true)} background={colors.brown} color='white'>\r\n                        +\r\n                    </Button>\r\n                </L.AddPaymentContainer>\r\n            </L.PaymentTitleContainer>\r\n            {paymentInfo &&\r\n                paymentInfo.length > 0 &&\r\n                paymentInfo.map((paymentInfo) => {\r\n                    return React.createElement(PaymentMethods[paymentInfo.name], {\r\n                        key: paymentInfo.id,\r\n                        onChange: (value, key) => onPaymentInfoChange(value, key, paymentInfo.id),\r\n                        onDelete: () => onPaymentDelete(paymentInfo.id),\r\n                        inputValue: {\r\n                            amount: paymentInfo.amount,\r\n                            transaction_code: paymentInfo.transaction_code,\r\n                            bankId: paymentInfo.bankId,\r\n                            currency: paymentInfo.currency,\r\n                            isChange: paymentInfo.isChange,\r\n                        },\r\n                    });\r\n                })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PaymentsForm;\r\n","import { TotalContainer } from 'pages/SalesControl/layout.styles';\r\nimport React from 'react';\r\n\r\nconst PaymentTotal = ({ paymentTotal = {}, twoRowsOnly }) => {\r\n    return (\r\n        <TotalContainer style={{ borderLeft: '1px solid black' }}>\r\n            <legend>Total pago</legend>\r\n            {Object.keys(paymentTotal).map((key, index) => {\r\n                const total = paymentTotal[key];\r\n                const green = key === 'Total' ? { style: { color: 'green' } } : {};\r\n\r\n                if (twoRowsOnly && Object.keys(paymentTotal).length > 2) {\r\n                    return (\r\n                        <div key={index} style={{ flexDirection: 'row' }}>\r\n                            <label>{key}: </label>\r\n                            <label {...green}>{total.toLocaleString()}</label>\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                            <label>{key}: </label>\r\n                            <label {...green}>{total.toLocaleString()}</label>\r\n                        </React.Fragment>\r\n                    );\r\n                }\r\n            })}\r\n        </TotalContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentTotal;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/payments';\r\n\r\nexport const create_payment_for_sale = async (paymentInfo, saleId) => {\r\n    const response = await axios.post(`${BASE_URL}/sale/${saleId}`, { paymentInfo, saleId }).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import { useState, useMemo } from 'react';\r\n\r\nexport const useConfirm = () => {\r\n    const INITIAL_CONFIRM_STATE = useMemo(\r\n        () => ({\r\n            message: null,\r\n            actions: [],\r\n            state: null,\r\n            callback: null,\r\n            show: false,\r\n        }),\r\n        []\r\n    );\r\n\r\n    const [confirmState, setConfirmState] = useState(INITIAL_CONFIRM_STATE);\r\n\r\n    return { confirmState, setConfirmState, INITIAL_CONFIRM_STATE };\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/payment-methods';\r\n\r\nexport const getPaymentMethods = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createPaymentMethod = async (paymentMethodData) => {\r\n    const response = await axios.post(BASE_URL, paymentMethodData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const updatePaymentMethod = async (id, paymentMethodData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, paymentMethodData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deletePaymentMethod = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","export default function mapPaymentMethods(paymentMethodsArray = []) {\r\n    const paymentMethods = paymentMethodsArray.map((paymentMethod) => {\r\n        let display_name = paymentMethod.name;\r\n\r\n        if (paymentMethod.name === 'Cash') {\r\n            display_name = 'Efectivo';\r\n        } else if (paymentMethod.name === 'Transfer') {\r\n            display_name = 'Transferencia';\r\n        }\r\n\r\n        return {\r\n            ...paymentMethod,\r\n            display_name,\r\n        };\r\n    });\r\n    paymentMethods.sort();\r\n\r\n    return paymentMethods;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getPaymentMethods } from 'api/payment_methods';\r\nimport mapPaymentMethods from 'utils/mapPaymentMethods';\r\n\r\nexport const usePaymentMethod = ({ loadOnMount = false }) => {\r\n    const [paymentMethodsLoading, setPaymentMethodsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [paymentMethods, setPaymentMethods] = useState([]);\r\n    const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (loadOnMount) loadPaymentMethods();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loadOnMount]);\r\n\r\n    const loadPaymentMethods = async () => {\r\n        if (!paymentMethodsLoading) {\r\n            setPaymentMethodsLoading(true);\r\n            const response = await getPaymentMethods({});\r\n            if (response.error) {\r\n                setError(response.error);\r\n            } else {\r\n                const paymentMethods = mapPaymentMethods(response.records);\r\n                setPaymentMethods(paymentMethods);\r\n                if (paymentMethods.length) setSelectedPaymentMethod({ id: paymentMethods[0].id, name: paymentMethods[0].name });\r\n            }\r\n            setPaymentMethodsLoading(false);\r\n        }\r\n    };\r\n\r\n    return {\r\n        paymentMethodsLoading,\r\n        setPaymentMethodsLoading,\r\n        paymentMethods,\r\n        selectedPaymentMethod,\r\n        setSelectedPaymentMethod,\r\n        loadPaymentMethods,\r\n        error,\r\n    };\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport function useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            // Get from local storage by key\r\n            const item = window.localStorage.getItem(key);\r\n            // Parse stored json or if none return initialValue\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            // If error also return initialValue\r\n            console.log(error);\r\n            return initialValue;\r\n        }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n        try {\r\n            // Allow value to be a function so we have same API as useState\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            // Save state\r\n            setStoredValue(valueToStore);\r\n            // Save to local storage\r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n            // A more advanced implementation would handle the error case\r\n            console.log(error);\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\n","export default function groupBy(array, key) {\r\n    return array.reduce((acc, obj) => {\r\n        const property = obj[key];\r\n        acc[property] = acc[property] || [];\r\n        acc[property].push(obj);\r\n        return acc;\r\n    }, {});\r\n}\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { usePaymentMethod } from './usePaymentMethod';\r\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\r\nimport { useLocalStorage } from 'hooks/useLocalStorage';\r\n\r\nimport groupBy from 'utils/arrayGroup';\r\n\r\nexport const usePayment = (defaultPayment, persistToLocalStorage = false) => {\r\n    const { currencyRates } = useCurrencyRates();\r\n\r\n    const { paymentMethods, selectedPaymentMethod, setSelectedPaymentMethod } = usePaymentMethod({ loadOnMount: true });\r\n\r\n    const [paymentTotal, setPaymentTotal] = useState({});\r\n    const [persistedPaymentTotal, setPersistedPaymentTotal] = useLocalStorage('paymentTotal', {});\r\n\r\n    const [persistedPaymentInfo, setPersistedPaymentInfo] = useLocalStorage('paymentInfo', []);\r\n    const [paymentInfo, setPaymentInfo] = useState([]);\r\n\r\n    const summarizePaymentInfo = useCallback(\r\n        (paymentInfo) => {\r\n            if (currencyRates) {\r\n                const paymentsGroupedByName = groupBy(paymentInfo, 'name');\r\n\r\n                for (let key of Object.keys(paymentsGroupedByName)) {\r\n                    const paymentsInfo = paymentsGroupedByName[key];\r\n\r\n                    paymentsGroupedByName[key] = paymentsInfo.reduce((accumulator, payment) => {\r\n                        if ((payment.currency && payment.currency === 'VES') || !payment.currency) {\r\n                            accumulator += payment.isChange ? -Number(payment.amount) || 0 : Number(payment.amount) || 0;\r\n                        } else if (payment.currency && payment.currency === 'USD') {\r\n                            accumulator +=\r\n                                (payment.isChange ? -payment.amount || 0 : payment.amount || 0) * (currencyRates['PAYMENT_VES'].value || 0);\r\n                        }\r\n                        return accumulator;\r\n                    }, 0);\r\n                }\r\n                const totalPayment = Object.keys(paymentsGroupedByName).reduce((accumulator, key) => {\r\n                    return accumulator + paymentsGroupedByName[key];\r\n                }, 0);\r\n\r\n                paymentsGroupedByName['Total'] = totalPayment;\r\n                return paymentsGroupedByName;\r\n            }\r\n        },\r\n        [currencyRates]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (defaultPayment) {\r\n            if (paymentMethods.length > 0) {\r\n                const addDefaultPayment = {\r\n                    id: paymentInfo.length + new Date().getTime(),\r\n                    payment_method_id: paymentMethods.find((p) => p.name === defaultPayment.name).id,\r\n                    name: defaultPayment.name,\r\n                    amount: null,\r\n                    currency: defaultPayment.currency,\r\n                    isChange: false,\r\n                };\r\n                if (persistToLocalStorage) {\r\n                    if (persistedPaymentInfo.length === 0) {\r\n                        setPersistedPaymentInfo([addDefaultPayment]);\r\n                    }\r\n                } else {\r\n                    if (paymentInfo.length === 0) {\r\n                        setPaymentInfo([addDefaultPayment]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [defaultPayment, paymentInfo.length, paymentMethods, persistToLocalStorage, persistedPaymentInfo, setPersistedPaymentInfo]);\r\n\r\n    useEffect(() => {\r\n        if (persistToLocalStorage) {\r\n            const paymentTotals = summarizePaymentInfo(persistedPaymentInfo);\r\n            setPersistedPaymentTotal(paymentTotals);\r\n        } else {\r\n            const paymentTotals = summarizePaymentInfo(paymentInfo);\r\n            setPaymentTotal(paymentTotals);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [paymentInfo, persistToLocalStorage, persistedPaymentInfo, summarizePaymentInfo]);\r\n\r\n    const onPaymentInfoChange = (value, key, id) => {\r\n        let actual_payment_info = persistToLocalStorage ? persistedPaymentInfo : paymentInfo;\r\n        let set_actual_payment_info = persistToLocalStorage ? setPersistedPaymentInfo : setPaymentInfo;\r\n\r\n        const newPaymentInfo = actual_payment_info.map((info) => {\r\n            if (info.id === id) {\r\n                info[key] = value;\r\n            }\r\n            return info;\r\n        });\r\n        set_actual_payment_info(newPaymentInfo);\r\n    };\r\n\r\n    const onPaymentAdd = (paymentMethod = { id: null, name: null }, isChange = false) => {\r\n        let actual_payment_info = persistToLocalStorage ? persistedPaymentInfo : paymentInfo;\r\n        let set_actual_payment_info = persistToLocalStorage ? setPersistedPaymentInfo : setPaymentInfo;\r\n\r\n        const id = actual_payment_info.length + new Date().getTime();\r\n        let newPaymentInfo = [];\r\n\r\n        if (paymentMethod.name === 'POS') {\r\n            newPaymentInfo = [\r\n                ...actual_payment_info,\r\n                { id, payment_method_id: Number(paymentMethod.id), name: paymentMethod.name, amount: null, currency: 'VES', isChange },\r\n            ];\r\n        } else if (paymentMethod.name === 'Cash') {\r\n            newPaymentInfo = [\r\n                ...actual_payment_info,\r\n                { id, payment_method_id: paymentMethod.id, name: paymentMethod.name, amount: null, currency: 'VES', isChange },\r\n            ];\r\n        } else if (paymentMethod.name === 'Transfer') {\r\n            newPaymentInfo = [\r\n                ...actual_payment_info,\r\n                {\r\n                    id,\r\n                    payment_method_id: paymentMethod.id,\r\n                    name: paymentMethod.name,\r\n                    amount: null,\r\n                    currency: 'VES',\r\n                    transaction_code: null,\r\n                    bankId: 1,\r\n                    isChange,\r\n                },\r\n            ];\r\n        } else if (paymentMethod.name === 'Paypal') {\r\n            newPaymentInfo = [\r\n                ...actual_payment_info,\r\n                { id, payment_method_id: paymentMethod.id, name: paymentMethod.name, amount: null, currency: 'USD', code: null, isChange },\r\n            ];\r\n        }\r\n        set_actual_payment_info(newPaymentInfo);\r\n    };\r\n\r\n    const onPaymentDelete = (id) => {\r\n        let actual_payment_info = persistToLocalStorage ? persistedPaymentInfo : paymentInfo;\r\n        let set_actual_payment_info = persistToLocalStorage ? setPersistedPaymentInfo : setPaymentInfo;\r\n\r\n        const newPaymentInfo = actual_payment_info.filter((info) => info.id !== id);\r\n        set_actual_payment_info(newPaymentInfo);\r\n    };\r\n\r\n    return {\r\n        paymentTotal,\r\n        setPaymentTotal,\r\n        persistedPaymentTotal,\r\n        setPersistedPaymentTotal,\r\n        paymentInfo,\r\n        setPaymentInfo,\r\n        persistedPaymentInfo,\r\n        setPersistedPaymentInfo,\r\n        onPaymentInfoChange,\r\n        onPaymentAdd,\r\n        onPaymentDelete,\r\n        paymentMethods,\r\n        selectedPaymentMethod,\r\n        setSelectedPaymentMethod,\r\n    };\r\n};\r\n","import Modal from 'components/Modal';\r\nimport { FormContainer, ConfirmContainer } from 'components/CommonLayout/main.layout';\r\nimport {\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    ButtonContainer,\r\n    ErrorAlert,\r\n} from 'components/CommonLayout/form.layout';\r\nimport Button from 'components/Button';\r\nimport { X } from 'phosphor-react';\r\nimport PaymentsForm from 'components/PaymentsForm';\r\nimport PaymentTotal from 'components/SaleDetails/TotalDetails/Payment';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\n\r\nimport { colors } from 'styles/theme';\r\n\r\nimport { create_payment_for_sale } from 'api/payments';\r\nimport { useConfirm } from 'hooks/useConfirm';\r\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\r\nimport { usePayment } from 'hooks/usePayment';\r\nimport { useFormError } from 'hooks/formError';\r\n\r\nconst PaymentFormModal = ({ show, handleClose, backdrop, onSubmit, sale }) => {\r\n    const { currencyRates } = useCurrencyRates(false);\r\n    const { confirmState, setConfirmState } = useConfirm();\r\n    const { errors, handleErrors } = useFormError();\r\n\r\n    const {\r\n        paymentTotal,\r\n        paymentInfo,\r\n        onPaymentInfoChange,\r\n        onPaymentAdd,\r\n        onPaymentDelete,\r\n        paymentMethods,\r\n        selectedPaymentMethod,\r\n        setSelectedPaymentMethod,\r\n    } = usePayment({ name: 'POS', currency: 'VES' });\r\n\r\n    const submitPayment = async () => {\r\n        const response = await create_payment_for_sale(paymentInfo, sale.id);\r\n        if (response.error) {\r\n            handleErrors(response.error);\r\n        } else {\r\n            onSubmit();\r\n        }\r\n    };\r\n\r\n    const paymentSubmitHandler = async () => {\r\n        const total_payment = paymentTotal['Total'];\r\n        const debt_total = Number((sale.debt.current_amount * currencyRates['PAYMENT_VES'].value).toFixed(2));\r\n\r\n        if (total_payment > debt_total) {\r\n            setConfirmState({\r\n                ...confirmState,\r\n                message: 'El monto a pagar es MAYOR al de la deuda. ¿Desea continuar?',\r\n                callback: submitPayment,\r\n            });\r\n        } else {\r\n            submitPayment();\r\n        }\r\n    };\r\n\r\n    return (\r\n        show && (\r\n            <>\r\n                <Modal show={show} handleClose={handleClose} backdrop={backdrop} zindex={4}>\r\n                    <FormContainer width='500px'>\r\n                        <HeaderContainer>\r\n                            <CloseButtonContainer>\r\n                                <Button onClick={handleClose}>\r\n                                    <X />\r\n                                </Button>\r\n                            </CloseButtonContainer>\r\n                            <TitleContainer>Formulario de pago</TitleContainer>\r\n                        </HeaderContainer>\r\n                        <BodyContainer overflow={1}>\r\n                            <PaymentsForm\r\n                                showTitle={false}\r\n                                onPaymentInfoChange={onPaymentInfoChange}\r\n                                onPaymentAdd={onPaymentAdd}\r\n                                onPaymentDelete={onPaymentDelete}\r\n                                selectedPaymentMethod={selectedPaymentMethod}\r\n                                onPaymentMethodSelect={setSelectedPaymentMethod}\r\n                                paymentInfo={paymentInfo}\r\n                                paymentMethods={paymentMethods}\r\n                            />\r\n                            <div style={{ flexDirection: 'row', justifyContent: 'end' }}>\r\n                                <PaymentTotal paymentTotal={paymentTotal} twoRowsOnly />\r\n                            </div>\r\n                        </BodyContainer>\r\n                        <FooterWrapper>\r\n                            <FooterContainer>\r\n                                {errors && errors['paymentInfo'] && <ErrorAlert>{errors['paymentInfo']}</ErrorAlert>}\r\n                                <ButtonContainer color={colors.primary}>\r\n                                    <Button onClick={paymentSubmitHandler} type='submit'>\r\n                                        Enviar\r\n                                    </Button>\r\n                                </ButtonContainer>\r\n                                <ButtonContainer color='red'>\r\n                                    <Button>Cancelar</Button>\r\n                                </ButtonContainer>\r\n                            </FooterContainer>\r\n                        </FooterWrapper>\r\n                    </FormContainer>\r\n                </Modal>\r\n                {confirmState.show && (\r\n                    <Modal backdrop show={confirmState.show} handleClose={() => setConfirmState({ ...confirmState, show: false })}>\r\n                        <ConfirmContainer>\r\n                            <ConfirmAlert\r\n                                additionalActions={confirmState.actions}\r\n                                message={confirmState.message}\r\n                                handleClose={() => setConfirmState({ ...confirmState, show: false })}\r\n                                callback={confirmState.callback}\r\n                            />\r\n                        </ConfirmContainer>\r\n                    </Modal>\r\n                )}\r\n            </>\r\n        )\r\n    );\r\n};\r\n\r\nexport default PaymentFormModal;\r\n","import { TotalContainer } from 'pages/SalesControl/layout.styles';\r\n\r\nexport const InvoiceTotal = ({ subtotal = '', debtTotal = '', invoiceTotal = '' }) => {\r\n    return (\r\n        <TotalContainer>\r\n            <legend>Total factura</legend>\r\n            <>\r\n                <label>Subtotal: </label>\r\n                <label>{subtotal.toLocaleString()}</label>\r\n            </>\r\n            {debtTotal > 0 && (\r\n                <>\r\n                    <label>Deuda: </label>\r\n                    <label>{debtTotal.toLocaleString()}</label>\r\n                </>\r\n            )}\r\n            <>\r\n                <label>Total: </label>\r\n                <label style={{ color: 'green' }}>{invoiceTotal.toLocaleString()}</label>\r\n            </>\r\n        </TotalContainer>\r\n    );\r\n};\r\n\r\nexport default InvoiceTotal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useLocalStorage } from 'hooks/useLocalStorage';\r\n\r\nexport const useSaleProducts = (persistToLocalStorage = false) => {\r\n    const [invoiceProducts, setInvoiceProducts] = useState([]);\r\n    const [persistedInvoiceProducts, setPersistedInvoiceProducts] = useLocalStorage('invoiceProducts', []);\r\n\r\n    const [persistedSubtotal, setPersistedSubtotal] = useLocalStorage('subtotal', 0);\r\n    const [subtotal, setSubtotal] = useState(0);\r\n\r\n    const [persistedSaleTotal, setPersistedSaleTotal] = useLocalStorage('saleTotal', 0);\r\n    const [saleTotal, setSaleTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const currentProducts = persistToLocalStorage ? persistedInvoiceProducts : invoiceProducts;\r\n\r\n        const subtotal = currentProducts.reduce(\r\n            (accumulator, current) => Number((accumulator + (current.converted_price['PRICE_VES'] || 0) * current.quantity).toFixed(2)),\r\n            0\r\n        );\r\n        if (persistToLocalStorage) {\r\n            setPersistedSubtotal(subtotal);\r\n            setPersistedSaleTotal(subtotal);\r\n        } else {\r\n            setSubtotal(subtotal);\r\n            setSaleTotal(subtotal);\r\n        }\r\n    }, [invoiceProducts, persistToLocalStorage, persistedInvoiceProducts, setPersistedSaleTotal, setPersistedSubtotal]);\r\n\r\n    return {\r\n        invoiceProducts,\r\n        setInvoiceProducts,\r\n        persistedInvoiceProducts,\r\n        setPersistedInvoiceProducts,\r\n        subtotal,\r\n        setSubtotal,\r\n        persistedSubtotal,\r\n        setPersistedSubtotal,\r\n        saleTotal,\r\n        setSaleTotal,\r\n        persistedSaleTotal,\r\n        setPersistedSaleTotal,\r\n    };\r\n};\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/sales';\r\n\r\nexport const getSales = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const getSaleById = async (id) => {\r\n    const response = await axios.get(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createSale = async (saleData) => {\r\n    const response = await axios.post(BASE_URL, saleData).catch((error) => error.response);\r\n    return response;\r\n};\r\n\r\nexport const updateSale = async (id, saleData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, saleData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteSale = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { FormContainer } from 'components/CommonLayout/main.layout';\r\nimport {\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    ButtonContainer,\r\n    LoadingDiv,\r\n} from 'components/CommonLayout/form.layout';\r\nimport { colors } from 'styles/theme';\r\nimport * as L from './styles';\r\nimport Modal from 'components/Modal';\r\nimport Button from 'components/Button';\r\nimport SalesControlTable from 'components/ModuleTables/SalesControlTable';\r\nimport ClientDetails from 'components/SaleDetails/ClientDetails';\r\nimport PaymentDetails from 'components/SaleDetails/PaymentDetails';\r\nimport PaymentFormModal from '../PaymentFormModal';\r\nimport { ErrorAlert } from 'components/CommonLayout/form.layout';\r\nimport Notification from 'components/Notification';\r\n\r\nimport { X, BookBookmark, XCircle } from 'phosphor-react';\r\n\r\nimport InvoiceTotal from 'components/SaleDetails/TotalDetails/Invoice';\r\nimport PaymentTotal from 'components/SaleDetails/TotalDetails/Payment';\r\n\r\nimport { usePayment } from 'hooks/usePayment';\r\nimport { useSaleProducts } from 'hooks/useSaleProducts';\r\nimport { getSaleById } from 'api/sales';\r\nimport { useFormError } from 'hooks/formError';\r\nimport { useNotification } from 'hooks/notification';\r\n\r\nexport const SaleDetailsModal = ({ show, details, onClose, onPayment = () => {} }) => {\r\n    const { paymentInfo, setPaymentInfo, paymentTotal } = usePayment();\r\n    const { invoiceProducts, setInvoiceProducts, subtotal, saleTotal } = useSaleProducts();\r\n    const [showPaymentModal, setShowPaymentModal] = useState(false);\r\n    const [saleDetails, setSaleDetails] = useState({});\r\n    const { errors, handleErrors } = useFormError();\r\n    const [loading, setLoading] = useState(false);\r\n    const { notification, showNotification } = useNotification(null);\r\n\r\n    useEffect(() => {\r\n        if (details) {\r\n            setSaleDetails(details);\r\n            setPaymentInfo(details.payment || []);\r\n            setInvoiceProducts(details.products || []);\r\n        }\r\n    }, [details]);\r\n\r\n    const onPaymentSubmit = async () => {\r\n        showNotification('success', 'El pago se ha realizado con éxito');\r\n        setShowPaymentModal(false);\r\n        setLoading(true);\r\n        const sale = await getSaleById(saleDetails.id);\r\n        console.log('sale details', sale);\r\n        if (sale.error) {\r\n            handleErrors(sale.error);\r\n        } else {\r\n            setSaleDetails(sale[0]);\r\n            setPaymentInfo(sale[0].payment);\r\n            setInvoiceProducts(sale[0].products);\r\n            onPayment();\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    console.log(saleDetails);\r\n    return (\r\n        <>\r\n            <Modal backdrop show={show} handleClose={onClose}>\r\n                <FormContainer width='800px'>\r\n                    <HeaderContainer>\r\n                        <CloseButtonContainer>\r\n                            <Button onClick={onClose}>\r\n                                <X />\r\n                            </Button>\r\n                        </CloseButtonContainer>\r\n                        <TitleContainer>{`Detalles de la venta`}</TitleContainer>\r\n                    </HeaderContainer>\r\n                    <BodyContainer>\r\n                        {loading ? (\r\n                            <LoadingDiv>Cargando...</LoadingDiv>\r\n                        ) : (\r\n                            <>\r\n                                <L.MetadataContainer>\r\n                                    <L.ClientContainer>\r\n                                        <legend>Cliente</legend>\r\n                                        <ClientDetails\r\n                                            name={saleDetails.client && saleDetails.client.name}\r\n                                            cedula={saleDetails.client && saleDetails.client.cedula}\r\n                                            phoneNumber={saleDetails.client && saleDetails.client.phoneNumber}\r\n                                        />\r\n                                    </L.ClientContainer>\r\n                                    <L.PaymentsContainer>\r\n                                        <legend>Pagos</legend>\r\n                                        <PaymentDetails paymentInfo={paymentInfo} />\r\n                                    </L.PaymentsContainer>\r\n                                </L.MetadataContainer>\r\n                                <L.TableContainer>\r\n                                    <SalesControlTable products={invoiceProducts} />\r\n                                </L.TableContainer>\r\n                                <L.TotalContainer>\r\n                                    {saleDetails.debt && (\r\n                                        <L.DebtInfoTotal>\r\n                                            <legend>Deuda</legend>\r\n                                            <L.DebtLabel>\r\n                                                <label>Fecha:</label>\r\n                                            </L.DebtLabel>\r\n                                            <L.DebtValue>\r\n                                                <strong>\r\n                                                    {saleDetails &&\r\n                                                        saleDetails.debt &&\r\n                                                        new Date(saleDetails.debt.createdAt).toLocaleString()}\r\n                                                </strong>\r\n                                            </L.DebtValue>\r\n                                            <L.DebtLabel>\r\n                                                <label>Original:</label>\r\n                                            </L.DebtLabel>\r\n                                            <L.DebtValue>\r\n                                                <strong>\r\n                                                    ${saleDetails && saleDetails.debt && saleDetails.debt.original_amount.toFixed(2)}\r\n                                                </strong>\r\n                                            </L.DebtValue>\r\n                                            <L.DebtLabel>\r\n                                                <label>Actual:</label>\r\n                                            </L.DebtLabel>\r\n                                            <L.DebtValue>\r\n                                                <strong style={{ color: 'green' }}>\r\n                                                    ${saleDetails && saleDetails.debt && saleDetails.debt.current_amount.toFixed(2)}\r\n                                                </strong>\r\n                                                -\r\n                                                <strong>\r\n                                                    {saleDetails &&\r\n                                                        saleDetails.debt &&\r\n                                                        saleDetails.debt.converted_amount['PAYMENT_VES'].toFixed(2) + ' Bs'}\r\n                                                </strong>\r\n                                            </L.DebtValue>\r\n                                            <L.DebtLabel>\r\n                                                <label>Estado:</label>\r\n                                            </L.DebtLabel>\r\n                                            <L.DebtValue>\r\n                                                <strong>\r\n                                                    {saleDetails && saleDetails.debt && saleDetails.debt.paid ? (\r\n                                                        <span style={{ color: 'green' }}>Pagado</span>\r\n                                                    ) : (\r\n                                                        <span style={{ color: 'red' }}>No pagado</span>\r\n                                                    )}\r\n                                                </strong>\r\n                                            </L.DebtValue>\r\n                                        </L.DebtInfoTotal>\r\n                                    )}\r\n                                    <PaymentTotal twoRowsOnly paymentTotal={paymentTotal} />\r\n                                    <InvoiceTotal subtotal={subtotal} invoiceTotal={saleTotal} />\r\n                                </L.TotalContainer>\r\n                            </>\r\n                        )}\r\n                    </BodyContainer>\r\n                    <FooterWrapper>\r\n                        {errors && errors['undefined'] && <ErrorAlert>{errors['undefined']}</ErrorAlert>}\r\n                        <FooterContainer>\r\n                            <ButtonContainer color={colors.primary}>\r\n                                {saleDetails.debt && saleDetails.debt.paid === 0 && (\r\n                                    <Button onClick={() => setShowPaymentModal(true)} type='submit'>\r\n                                        <BookBookmark size={24} />\r\n                                        Pagar\r\n                                    </Button>\r\n                                )}\r\n                            </ButtonContainer>\r\n                            <ButtonContainer color='red'>\r\n                                <Button onClick={onClose}>\r\n                                    <XCircle size={24} />\r\n                                    Cancelar\r\n                                </Button>\r\n                            </ButtonContainer>\r\n                        </FooterContainer>\r\n                    </FooterWrapper>\r\n                </FormContainer>\r\n            </Modal>\r\n            {showPaymentModal && (\r\n                <PaymentFormModal\r\n                    show={showPaymentModal}\r\n                    backdrop\r\n                    handleClose={() => setShowPaymentModal(false)}\r\n                    onSubmit={onPaymentSubmit}\r\n                    sale={saleDetails}\r\n                />\r\n            )}\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SaleDetailsModal;\r\n","import { useState } from 'react';\r\nimport { FormContainer } from 'components/CommonLayout/main.layout';\r\nimport { HeaderContainer, BodyContainer, CloseButtonContainer, TitleContainer } from 'components/CommonLayout/form.layout';\r\nimport * as L from './styles';\r\nimport Modal from 'components/Modal';\r\nimport DebtSelectionTable from 'components/ModuleTables/DebtSelectionTable';\r\nimport Button from 'components/Button';\r\nimport { X } from 'phosphor-react';\r\nimport SaleDetailsModal from 'components/ModuleModals/SaleDetailsModal';\r\n\r\nexport const DebtsModal = ({ show, selectedDebts, client, onClose, onDebtSelect }) => {\r\n    const [showDebtDetails, setShowDebtDetails] = useState(false);\r\n    const [debtDetails, setDebtDetails] = useState({});\r\n\r\n    return (\r\n        <>\r\n            <Modal backdrop show={showDebtDetails ? false : show} handleClose={onClose}>\r\n                <FormContainer width='500px'>\r\n                    <HeaderContainer>\r\n                        <CloseButtonContainer>\r\n                            <Button onClick={onClose}>\r\n                                <X />\r\n                            </Button>\r\n                        </CloseButtonContainer>\r\n                        <TitleContainer>{`Deudas de ${client.name} - ${Number(client.cedula).toLocaleString('es-VE')}`}</TitleContainer>\r\n                    </HeaderContainer>\r\n                    <BodyContainer overflow={1}>\r\n                        {client && client.sale && client.sale.length > 0 ? (\r\n                            <L.Wrapper>\r\n                                <L.TableContainer>\r\n                                    <DebtSelectionTable\r\n                                        onShowDetailsClick={(debtDetails) => {\r\n                                            setShowDebtDetails(true);\r\n                                            setDebtDetails(debtDetails);\r\n                                        }}\r\n                                        data={client.sale}\r\n                                        selectedRows={selectedDebts}\r\n                                        onDebtSelect={onDebtSelect}\r\n                                    />\r\n                                </L.TableContainer>\r\n                            </L.Wrapper>\r\n                        ) : (\r\n                            'El cliente no posee deudas'\r\n                        )}\r\n                    </BodyContainer>\r\n                </FormContainer>\r\n            </Modal>\r\n            <SaleDetailsModal show={showDebtDetails} onClose={() => setShowDebtDetails(false)} details={debtDetails} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DebtsModal;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport * as L from './layout.styles';\r\nimport { colors } from 'styles/theme';\r\n\r\nimport { InlineContainer, ButtonContainer } from 'components/CommonLayout/form.layout';\r\nimport { FormContainer, ConfirmContainer, Wrapper, SeparatorWrapper, ContentContainer } from 'components/CommonLayout/main.layout';\r\n\r\nimport WidgetBox from 'components/WidgetBox';\r\nimport ClientSearch from 'components/ClientSearch';\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport SalesControlTable from 'components/ModuleTables/SalesControlTable';\r\nimport SaleProductForm from 'components/SaleProductForm';\r\nimport DebtsModal from 'components/ModuleModals/DebtsModal';\r\nimport Button from 'components/Button';\r\nimport Notification from 'components/Notification';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport NumberInput from 'react-number-format';\r\nimport Modal from 'components/Modal';\r\nimport ClientForm from 'pages/Clients/CRUDForm';\r\nimport PaymentsForm from 'components/PaymentsForm';\r\nimport InvoiceTotal from 'components/SaleDetails/TotalDetails/Invoice';\r\nimport PaymentTotal from 'components/SaleDetails/TotalDetails/Payment';\r\n\r\nimport { useSale } from 'hooks/useSale';\r\n\r\nconst SalesControl = () => {\r\n    const {\r\n        loading,\r\n        paymentMethods,\r\n        selectedPaymentMethod,\r\n        setSelectedPaymentMethod,\r\n        selectedClient,\r\n        selectedProduct,\r\n        selectedDebts,\r\n        invoiceProducts,\r\n        subtotal,\r\n        saleTotal,\r\n        debtTotal,\r\n        paymentTotal,\r\n        paymentInfo,\r\n        onProductSubmit,\r\n        onProductSelect,\r\n        onProductDelete,\r\n        onClientSelect,\r\n        onPaymentAdd,\r\n        onPaymentInfoChange,\r\n        onPaymentDelete,\r\n        onSaleSubmit,\r\n        onSaveDebtHandler,\r\n        notification,\r\n        showNotification,\r\n        resetFields,\r\n        confirmState,\r\n        onConfirmClose,\r\n    } = useSale({\r\n        onSubmitSuccess: () => {\r\n            productSearchRef.current.focus();\r\n        },\r\n    });\r\n    console.log(paymentInfo);\r\n\r\n    const [showDebts, setShowDebts] = useState(false);\r\n    const [clientSearchInput, setClientSearchInput] = useState('');\r\n    const [showClientForm, setShowClientForm] = useState(false);\r\n\r\n    const productSearchRef = useRef(null);\r\n    const clientSearchRef = useRef(null);\r\n    const clientCedulaRef = useRef(null);\r\n    const clientPhoneNumberRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const listener = (event) => {\r\n            if (event.ctrlKey && event.keyCode === 13) {\r\n                onSaleSubmit(event);\r\n            }\r\n        };\r\n        document.body.addEventListener('keyup', listener);\r\n\r\n        return function cleanUp() {\r\n            document.body.removeEventListener('keyup', listener);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <SeparatorWrapper>\r\n                <ContentContainer>\r\n                    <L.MainContainer>\r\n                        <L.ActionsContainer>\r\n                            <ButtonContainer color={colors.primary}>\r\n                                <Button loading={loading} onClick={onSaleSubmit}>\r\n                                    Enviar\r\n                                </Button>\r\n                            </ButtonContainer>\r\n                            <ButtonContainer color={colors.secondary}>\r\n                                <Button loading={loading} onClick={onSaveDebtHandler}>\r\n                                    Guardar Deuda\r\n                                </Button>\r\n                            </ButtonContainer>\r\n                            <ButtonContainer color='red'>\r\n                                <Button onClick={resetFields}>Reset</Button>\r\n                            </ButtonContainer>\r\n                        </L.ActionsContainer>\r\n                        <L.MetadataContainer>\r\n                            <L.ClientContainer>\r\n                                <h3>Datos del cliente</h3>\r\n                                <ClientSearch\r\n                                    innerRef={clientSearchRef}\r\n                                    value={selectedClient}\r\n                                    onSelect={onClientSelect}\r\n                                    onCreate={(input) => {\r\n                                        setShowClientForm(true);\r\n                                        setClientSearchInput(input);\r\n                                    }}\r\n                                />\r\n                                <InlineContainer>\r\n                                    <L.ClientNameContainer>\r\n                                        <LabeledInput\r\n                                            value={selectedClient.cedula || ''}\r\n                                            innerRef={clientCedulaRef}\r\n                                            placeholder='Cédula'\r\n                                            thousandSeparator='.'\r\n                                            decimalSeparator=','\r\n                                            disabled\r\n                                            errorborder={selectedClient && selectedClient.sale && selectedClient.sale.length > 0}\r\n                                            as={NumberInput}\r\n                                        />\r\n                                    </L.ClientNameContainer>\r\n                                    <L.ClientPhoneNumberContainer>\r\n                                        <LabeledInput\r\n                                            value={selectedClient.phoneNumber || ''}\r\n                                            innerRef={clientPhoneNumberRef}\r\n                                            placeholder='Teléfono'\r\n                                            disabled\r\n                                            format='( #### ) - ### - ####'\r\n                                            errorborder={selectedClient && selectedClient.sale && selectedClient.sale.length > 0}\r\n                                            as={NumberInput}\r\n                                        />\r\n                                    </L.ClientPhoneNumberContainer>\r\n                                </InlineContainer>\r\n                                {selectedClient && selectedClient.sale && selectedClient.sale.length > 0 && (\r\n                                    <div>\r\n                                        <Button onClick={() => setShowDebts(true)} background='red' color='white'>\r\n                                            Ver Deudas\r\n                                        </Button>\r\n                                    </div>\r\n                                )}\r\n                            </L.ClientContainer>\r\n                            <L.PaymentsContainer>\r\n                                <PaymentsForm\r\n                                    paymentInfo={paymentInfo}\r\n                                    paymentMethods={paymentMethods || []}\r\n                                    selectedPaymentMethod={selectedPaymentMethod}\r\n                                    onPaymentInfoChange={onPaymentInfoChange}\r\n                                    onPaymentAdd={onPaymentAdd}\r\n                                    onPaymentDelete={onPaymentDelete}\r\n                                    onPaymentMethodSelect={setSelectedPaymentMethod}\r\n                                />\r\n                            </L.PaymentsContainer>\r\n                        </L.MetadataContainer>\r\n                        <L.OrderDetailsContainer>\r\n                            <L.InvoiceFormContainer>\r\n                                <L.ProductFormContainer>\r\n                                    <SaleProductForm\r\n                                        productToEdit={selectedProduct}\r\n                                        productSearchRef={productSearchRef}\r\n                                        onSubmit={onProductSubmit}\r\n                                    />\r\n                                </L.ProductFormContainer>\r\n                                <L.TableContainer>\r\n                                    <SalesControlTable\r\n                                        onProductSelect={onProductSelect}\r\n                                        selectedRows={selectedProduct}\r\n                                        products={invoiceProducts}\r\n                                        onDeleteRow={onProductDelete}\r\n                                        maxHeight='2048px'\r\n                                    />\r\n                                </L.TableContainer>\r\n                                <L.FooterContainer>\r\n                                    <L.InvoiceTotalContainer>\r\n                                        <InvoiceTotal subtotal={subtotal} debtTotal={debtTotal} invoiceTotal={saleTotal} />\r\n                                        <PaymentTotal twoRowsOnly paymentTotal={paymentTotal} />\r\n                                    </L.InvoiceTotalContainer>\r\n                                </L.FooterContainer>\r\n                            </L.InvoiceFormContainer>\r\n                        </L.OrderDetailsContainer>\r\n                    </L.MainContainer>\r\n                </ContentContainer>\r\n                <WidgetBox onClose={() => {}}></WidgetBox>\r\n            </SeparatorWrapper>\r\n            <DebtsModal\r\n                show={showDebts}\r\n                client={selectedClient}\r\n                onClose={() => setShowDebts(false)}\r\n                selectedDebts={selectedDebts}\r\n                //onDebtSelect={onDebtSelect}\r\n            />\r\n            <Modal backdrop show={confirmState.show} handleClose={onConfirmClose}>\r\n                <ConfirmContainer>\r\n                    <ConfirmAlert\r\n                        additionalActions={confirmState.actions}\r\n                        message={confirmState.message}\r\n                        handleClose={onConfirmClose}\r\n                        callback={confirmState.callback}\r\n                    />\r\n                </ConfirmContainer>\r\n            </Modal>\r\n            <Modal backdrop show={showClientForm} handleClose={onConfirmClose}>\r\n                <FormContainer>\r\n                    <ClientForm\r\n                        onSubmit={(successMessage, newClient) => {\r\n                            showNotification('success', successMessage);\r\n                            setShowClientForm(false);\r\n                            clientSearchRef.current.focus();\r\n                        }}\r\n                        action='create'\r\n                        handleClose={() => setShowClientForm(false)}\r\n                        client={isNaN(Number(clientSearchInput)) ? { name: clientSearchInput } : { cedula: clientSearchInput }}\r\n                        autoFocus={isNaN(Number(clientSearchInput)) ? 'cedula' : 'name'}\r\n                    />\r\n                </FormContainer>\r\n            </Modal>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default SalesControl;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { useNotification } from 'hooks/notification';\r\nimport { usePayment } from './usePayment';\r\nimport { useSaleProducts } from 'hooks/useSaleProducts';\r\n\r\nimport { createSale } from 'api/sales';\r\nimport { useConfirm } from './useConfirm';\r\n\r\nexport const useSale = ({ onSubmitSuccess = () => {} }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [selectedClient, setSelectedClient] = useState({ id: null, cedula: null, phoneNumber: null });\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    const [selectedDebts, setSelectedDebts] = useState([]);\r\n    const [debtTotal, setDebtTotal] = useState(0);\r\n\r\n    const { invoiceProducts, setInvoiceProducts, subtotal, setSubtotal, saleTotal, setSaleTotal } = useSaleProducts();\r\n\r\n    const {\r\n        paymentMethods,\r\n        selectedPaymentMethod,\r\n        setSelectedPaymentMethod,\r\n        paymentTotal,\r\n        setPaymentTotal,\r\n        paymentInfo,\r\n        setPaymentInfo,\r\n        onPaymentInfoChange,\r\n        onPaymentAdd,\r\n        onPaymentDelete,\r\n    } = usePayment({ name: 'POS', currency: 'VES' });\r\n\r\n    const { confirmState, setConfirmState, INITIAL_CONFIRM_STATE } = useConfirm();\r\n\r\n    const { notification, showNotification } = useNotification();\r\n\r\n    useEffect(() => {\r\n        const dt = selectedDebts.reduce((accumulator, current) => accumulator + (current.debt.converted_amount['PAYMENT_VES'] || 0), 0);\r\n        setDebtTotal(dt);\r\n        setSaleTotal(subtotal + dt);\r\n    }, [selectedDebts, setDebtTotal, setSaleTotal, subtotal]);\r\n\r\n    useEffect(() => {\r\n        setSaleTotal(subtotal + debtTotal);\r\n    }, [subtotal, setSaleTotal, debtTotal]);\r\n\r\n    useEffect(() => {\r\n        if (paymentInfo.length === 1 && paymentInfo[0].name === 'POS') {\r\n            const payment = paymentInfo[0];\r\n            payment.amount = saleTotal;\r\n            setPaymentInfo([payment]);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [saleTotal]);\r\n\r\n    const onProductSelect = (product) => {\r\n        setSelectedProduct(product);\r\n    };\r\n\r\n    const onProductSubmit = (product) => {\r\n        const products = invoiceProducts.filter((invoiceProduct) => invoiceProduct.id !== product.id);\r\n        setInvoiceProducts([product, ...products]);\r\n        setSelectedProduct(null);\r\n    };\r\n\r\n    const onProductDelete = (product) => {\r\n        const products = invoiceProducts.filter((invoiceProduct) => invoiceProduct.id !== product.id);\r\n        setSelectedProduct(null);\r\n        setInvoiceProducts([...products]);\r\n    };\r\n\r\n    const onClientSelect = (client, action) => {\r\n        if (action === 'clear') {\r\n            setSelectedClient({ id: null, cedula: null, phoneNumber: null });\r\n            setSelectedDebts([]);\r\n        } else if (action === 'select-option') {\r\n            setSelectedClient({ id: null, cedula: null, phoneNumber: null, ...client });\r\n        }\r\n    };\r\n\r\n    const onDebtSelect = (debts) => {\r\n        setSelectedDebts(debts);\r\n    };\r\n\r\n    const validateSale = () => {\r\n        if (!invoiceProducts.length) {\r\n            showNotification('error', 'Tabla de productos vacía');\r\n            return false;\r\n        }\r\n        if (!paymentInfo.length || paymentTotal['Total'] < 0) {\r\n            showNotification('error', 'Información de pago es incorrecta');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const paymentValidation = () => {\r\n        const confirmActions = [{ name: 'Guardar Deuda', color: 'orange', callback: () => submitSale(true) }];\r\n        let message = '';\r\n\r\n        if (paymentTotal['Total'] < saleTotal) {\r\n            message = 'El pago total es MENOR al total de la factura. ¿Deseas continuar sin guardar la deuda?';\r\n        } else if (paymentTotal['Total'] > saleTotal) {\r\n            message = 'El pago total es MAYOR al total de la factura. ¿Deseas continuar sin guardar la deuda?';\r\n        }\r\n\r\n        if (paymentTotal['Total'] !== saleTotal) {\r\n            setConfirmState({ ...confirmState, actions: confirmActions, message, show: true, callback: () => submitSale() });\r\n        } else {\r\n            submitSale();\r\n        }\r\n    };\r\n\r\n    const onSaveDebtHandler = () => {\r\n        if (validateSale()) {\r\n            setConfirmState({\r\n                ...confirmState,\r\n                message: '¿Está seguro que desea guardar la venta como una DEUDA?',\r\n                show: true,\r\n                callback: () => submitSale(true, true),\r\n            });\r\n        }\r\n    };\r\n\r\n    const onSaleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (validateSale()) {\r\n            if (!selectedClient.id) {\r\n                setConfirmState({\r\n                    ...confirmState,\r\n                    message: 'No ha seleccionado un cliente, ¿está seguro que desea continuar?',\r\n                    show: true,\r\n                    callback: paymentValidation,\r\n                });\r\n            } else {\r\n                paymentValidation();\r\n            }\r\n        }\r\n    };\r\n\r\n    const submitSale = async (saveAsDebt = false, fullDebt = false) => {\r\n        if (!loading) {\r\n            try {\r\n                setLoading(true);\r\n                const response = await createSale({\r\n                    clientId: selectedClient.id,\r\n                    products: invoiceProducts.map((product) => ({ id: product.id, quantity: product.quantity })),\r\n                    paymentInfo: fullDebt ? [] : paymentInfo,\r\n                    status: 1,\r\n                    saveAsDebt,\r\n                    //paying_debts: selectedDebts.map((debt) => debt.id),\r\n                });\r\n                setLoading(false);\r\n\r\n                if (response.status === 200) {\r\n                    showNotification('success', 'La venta se ha procesado exitosamente.');\r\n                    resetFields();\r\n                    onSubmitSuccess();\r\n                } else {\r\n                    showNotification(\r\n                        'error',\r\n                        response.data.error.message || response.data.error[0].message || JSON.stringify(response.data.error)\r\n                    );\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const resetFields = () => {\r\n        setSelectedClient({ id: null, cedula: null, phoneNumber: null });\r\n        setSelectedDebts([]);\r\n        setSelectedProduct(null);\r\n        setInvoiceProducts([]);\r\n        setSubtotal(0);\r\n        setDebtTotal(0);\r\n        setSaleTotal(0);\r\n        setPaymentTotal(0);\r\n        setPaymentInfo([]);\r\n        setConfirmState(INITIAL_CONFIRM_STATE);\r\n    };\r\n\r\n    const onConfirmClose = () => {\r\n        setConfirmState(INITIAL_CONFIRM_STATE);\r\n    };\r\n\r\n    return {\r\n        loading,\r\n        paymentMethods,\r\n        selectedPaymentMethod,\r\n        setSelectedPaymentMethod,\r\n        selectedClient,\r\n        setSelectedClient,\r\n        selectedProduct,\r\n        selectedDebts,\r\n        invoiceProducts,\r\n        setInvoiceProducts,\r\n        subtotal,\r\n        saleTotal,\r\n        debtTotal,\r\n        paymentTotal,\r\n        paymentInfo,\r\n        setPaymentInfo,\r\n        onProductSelect,\r\n        onProductSubmit,\r\n        onProductDelete,\r\n        onClientSelect,\r\n        onDebtSelect,\r\n        onPaymentAdd,\r\n        onPaymentInfoChange,\r\n        onPaymentDelete,\r\n        onSaleSubmit,\r\n        onSaveDebtHandler,\r\n        resetFields,\r\n        notification,\r\n        showNotification,\r\n        confirmState,\r\n        onConfirmClose,\r\n    };\r\n};\r\n","export const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Moneda',\r\n        accessor: 'currency',\r\n    },\r\n    {\r\n        Header: 'Valor en bolívares',\r\n        accessor: 'value',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toLocaleString() : '';\r\n        },\r\n    },\r\n    {\r\n        Header: 'Redondeo',\r\n        accessor: 'rounding',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toLocaleString() : 'Sin redondeo';\r\n        },\r\n    },\r\n];\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/currencyRates';\r\n\r\nexport const getCurrencies = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    if (response.data) {\r\n        const currency_array = Object.entries(response.data).reduce(\r\n            (prev, current) => [\r\n                { id: current[1].id, currency: current[0], value: current[1].value, rounding: current[1].rounding },\r\n                ...prev,\r\n            ],\r\n            []\r\n        );\r\n        return currency_array;\r\n    }\r\n    return response.data;\r\n};\r\n\r\nexport const createCurrency = async (currencyData) => {\r\n    const response = await axios.post(BASE_URL, currencyData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const updateCurrency = async (id, currencyData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, currencyData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteCurrency = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import { useState, useMemo, useEffect } from 'react';\r\n\r\nimport Table from 'components/Table';\r\nimport { COLUMNS } from './columns';\r\n\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getCurrencies } from 'api/currencies';\r\n\r\nconst CurrenciesTable = ({ onCurrencySelect, selectedRows, shouldRefresh, showNotification }) => {\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ filter, fetching: getCurrencies });\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) showNotification('error', error.message, 3000);\r\n    }, [error, showNotification]);\r\n\r\n    return (\r\n        <Table\r\n            selectedRows={selectedRows}\r\n            onRowSelect={onCurrencySelect}\r\n            loading={loading}\r\n            data={data}\r\n            columns={memoizedColumns}\r\n            onFilter={setFilter}\r\n            filterPlaceholder='Buscar por nombre...'\r\n            pageCount={1}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CurrenciesTable;\r\n","import * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n    currency: yup.string(),\r\n    value: yup.number().required('El campo valor es requerido').typeError('El campo valor debe ser numérico'),\r\n    rounding: yup.number().nullable(true),\r\n});\r\n\r\nexport default schema;\r\n","import {\r\n    Form,\r\n    HeaderContainer,\r\n    BodyContainer,\r\n    FooterWrapper,\r\n    FooterContainer,\r\n    InputContainer,\r\n    ButtonContainer,\r\n    CloseButtonContainer,\r\n    TitleContainer,\r\n    ErrorContainer,\r\n} from 'components/CommonLayout/form.layout';\r\n\r\nimport LabeledInput from 'components/LabeledInput';\r\nimport Button from 'components/Button';\r\nimport NumberFormatInput from 'react-number-format';\r\nimport { colors } from 'styles/theme';\r\nimport { BookBookmark, XCircle, X } from 'phosphor-react';\r\nimport { useForm } from 'hooks/useForm';\r\nimport { createCurrency, updateCurrency } from 'api/currencies';\r\nimport currencySchema from 'validations/schemas/currency';\r\n\r\nconst CurrencyForm = ({ currency, action, handleClose, onSubmit }) => {\r\n    const { loading, handleChange, handleNumericInput, handleSubmit, formData, printError, submitErrors, setSubmitErrors, hasError } =\r\n        useForm({\r\n            initialState: {\r\n                currency: '',\r\n                value: 0,\r\n                rounding: null,\r\n                ...currency,\r\n            },\r\n            action,\r\n            createResource: createCurrency,\r\n            editResource: updateCurrency,\r\n            schema: currencySchema,\r\n            onSubmitSuccess: onSubmit,\r\n        });\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (action === 'create' && formData.currency === '') {\r\n            setSubmitErrors({ ...submitErrors, currency: 'Debe proveer el nombre de la moneda' });\r\n        } else {\r\n            handleSubmit(event);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler}>\r\n            <HeaderContainer>\r\n                <CloseButtonContainer>\r\n                    <Button onClick={handleClose}>\r\n                        <X />\r\n                    </Button>\r\n                </CloseButtonContainer>\r\n                <TitleContainer>{action === 'create' ? 'Crear moneda' : 'Editar moneda'}</TitleContainer>\r\n            </HeaderContainer>\r\n            <BodyContainer>\r\n                {action === 'create' && (\r\n                    <InputContainer>\r\n                        <LabeledInput\r\n                            onChange={handleChange}\r\n                            placeholder='Nombre'\r\n                            name='currency'\r\n                            value={formData.currency}\r\n                            autoFocus\r\n                            capitalize\r\n                            errorborder={hasError('currency')}\r\n                        />\r\n                        {printError('currency')}\r\n                    </InputContainer>\r\n                )}\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'value')}\r\n                        placeholder='Valor'\r\n                        name='value'\r\n                        value={formData.value}\r\n                        thousandSeparator='.'\r\n                        decimalSeparator=','\r\n                        as={NumberFormatInput}\r\n                        errorborder={hasError('value')}\r\n                        autoFocus={action === 'edit'}\r\n                    />\r\n                    {printError('value')}\r\n                </InputContainer>\r\n                <InputContainer>\r\n                    <LabeledInput\r\n                        onValueChange={({ floatValue }) => handleNumericInput(floatValue, 'rounding')}\r\n                        placeholder='Redondeo'\r\n                        name='rounding'\r\n                        value={formData.rounding}\r\n                        thousandSeparator='.'\r\n                        decimalSeparator=','\r\n                        as={NumberFormatInput}\r\n                        errorborder={hasError('rounding')}\r\n                    />\r\n                    {printError('rounding')}\r\n                </InputContainer>\r\n            </BodyContainer>\r\n            <FooterWrapper>\r\n                <ErrorContainer>{printError('undefined')}</ErrorContainer>\r\n                <FooterContainer>\r\n                    <ButtonContainer color={colors.primary}>\r\n                        <Button loading={loading} type='submit'>\r\n                            <BookBookmark size={24} />\r\n                            Enviar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                    <ButtonContainer color='red'>\r\n                        <Button onClick={handleClose}>\r\n                            <XCircle size={24} />\r\n                            Cancelar\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                </FooterContainer>\r\n            </FooterWrapper>\r\n        </Form>\r\n    );\r\n};\r\nexport default CurrencyForm;\r\n","import { useState } from 'react';\r\n\r\nimport {\r\n    Wrapper,\r\n    ContentContainer,\r\n    ToolbarContainer,\r\n    TableContainer,\r\n    FormContainer,\r\n    ConfirmContainer,\r\n} from 'components/CommonLayout/main.layout';\r\n\r\nimport Toolbar from 'components/Toolbar';\r\nimport CurrenciesTable from 'components/ModuleTables/CurrenciesTable';\r\nimport Modal from 'components/Modal';\r\nimport CurrencyForm from './CRUDForm/index';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\n\r\nimport Notification from 'components/Notification';\r\nimport { useNotification } from 'hooks/notification';\r\nimport { deleteCurrency } from 'api/currencies';\r\n\r\nconst Currencies = () => {\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const [selectedCurrency, setSelectedCurrency] = useState(null);\r\n    const { notification, showNotification } = useNotification(null);\r\n\r\n    const handleSubmit = (submitMessage) => {\r\n        showNotification('success', submitMessage, 2000);\r\n        setCRUDAction('refresh');\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteCurrency(selectedCurrency.id);\r\n        if (response.error) {\r\n            showNotification('error', response.error.message);\r\n        } else {\r\n            showNotification('success', 'Se ha eliminado con éxito');\r\n        }\r\n        setCRUDAction('refresh');\r\n        setSelectedCurrency(null);\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ContentContainer>\r\n                <ToolbarContainer>\r\n                    <Toolbar\r\n                        onCreate={() => setCRUDAction('create')}\r\n                        onEdit={() => setCRUDAction('edit')}\r\n                        onDelete={() => setCRUDAction('delete')}\r\n                        recordSelected={selectedCurrency}\r\n                    />\r\n                </ToolbarContainer>\r\n                <TableContainer>\r\n                    <CurrenciesTable\r\n                        selectedRows={selectedCurrency}\r\n                        onCurrencySelect={setSelectedCurrency}\r\n                        shouldRefresh={CRUDAction === 'refresh'}\r\n                        showNotification={showNotification}\r\n                    />\r\n                </TableContainer>\r\n                <Modal backdrop show={CRUDAction && CRUDAction !== 'refresh' ? true : false} handleClose={() => setCRUDAction(null)}>\r\n                    {(CRUDAction === 'create' || CRUDAction === 'edit') && (\r\n                        <FormContainer>\r\n                            <CurrencyForm\r\n                                onSubmit={handleSubmit}\r\n                                action={CRUDAction}\r\n                                currency={CRUDAction === 'edit' && selectedCurrency}\r\n                                handleClose={() => setCRUDAction(null)}\r\n                            />\r\n                        </FormContainer>\r\n                    )}\r\n                    {CRUDAction === 'delete' && (\r\n                        <ConfirmContainer>\r\n                            <ConfirmAlert handleClose={() => setCRUDAction(null)} callback={handleDelete} />\r\n                        </ConfirmContainer>\r\n                    )}\r\n                    {CRUDAction === 'delete' && <ConfirmContainer></ConfirmContainer>}\r\n                </Modal>\r\n            </ContentContainer>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Currencies;\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Cliente',\r\n        accessor: (row) => {\r\n            if (row.client) {\r\n                return (\r\n                    <div>\r\n                        <span>{row.client.name ? row.client.name : ''}</span>\r\n                        <span>{row.client.cedula ? Number(row.client.cedula).toLocaleString() : ''}</span>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return 'Anónimo';\r\n            }\r\n        },\r\n    },\r\n    {\r\n        Header: 'Total',\r\n        accessor: 'converted_amount.PAYMENT_VES',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toLocaleString() : value;\r\n        },\r\n    },\r\n    {\r\n        Header: 'Fecha',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n    {\r\n        Header: 'Estado',\r\n        accessor: (row) => {\r\n            return row.status === 0 ? <span style={{ color: 'red' }}>Anulada</span> : <span style={{ color: 'green' }}>Confirmada</span>;\r\n        },\r\n    },\r\n];\r\n","import { useMemo, useState, useEffect } from 'react';\r\n\r\nimport Table from 'components/Table';\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\nimport { getSales } from 'api/sales';\r\n\r\nimport { COLUMNS } from './columns';\r\n\r\nconst SalesTable = ({ onSaleSelect, selectedRows, shouldRefresh, onError }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n    const [filter, setFilter] = useState('');\r\n    const [page, setPage] = useState(1);\r\n\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getSales });\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) onError(error.message);\r\n    }, [error, onError]);\r\n\r\n    return (\r\n        <Table\r\n            loading={loading}\r\n            data={data.records}\r\n            onRowSelect={onSaleSelect}\r\n            selectedRows={selectedRows}\r\n            columns={memoizedColumns}\r\n            filterPlaceholder='Buscar por id, cliente, producto, fecha, COD transferencia...'\r\n            filter={filter}\r\n            onFilter={setFilter}\r\n            onPaginate={setPage}\r\n            pageCount={data.pageCount}\r\n            capitalize={[1]}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SalesTable;\r\n","import { useState } from 'react';\r\n\r\nimport Toolbar from 'components/Toolbar';\r\nimport * as L from 'components/CommonLayout/main.layout';\r\n\r\nimport Modal from 'components/Modal';\r\nimport WidgetBox from 'components/WidgetBox';\r\nimport SalesTable from 'components/ModuleTables/SalesTable';\r\nimport Button from 'components/Button';\r\nimport { colors } from 'styles/theme';\r\nimport { Eye } from 'phosphor-react';\r\nimport SaleDetailsModal from 'components/ModuleModals/SaleDetailsModal';\r\nimport ConfirmAlert from 'components/ConfirmAlert';\r\nimport { useNotification } from 'hooks/notification';\r\nimport Notification from 'components/Notification';\r\n\r\nimport { deleteSale } from 'api/sales';\r\n\r\nconst Sales = () => {\r\n    const [selectedSale, setSelectedSale] = useState();\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n    const { notification, showNotification } = useNotification();\r\n\r\n    const handleDelete = async () => {\r\n        const response = await deleteSale(selectedSale.id);\r\n        if (response.error) {\r\n            showNotification('error', response.error.message);\r\n        } else {\r\n            setCRUDAction('refresh');\r\n            setSelectedSale(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <L.Wrapper>\r\n            <L.SeparatorWrapper>\r\n                <L.ContentContainer>\r\n                    <L.ToolbarContainer>\r\n                        <Toolbar deleteText='Anular' recordSelected={selectedSale} onDelete={() => setCRUDAction('delete')}>\r\n                            <div>\r\n                                <Button\r\n                                    onClick={() => setCRUDAction('view')}\r\n                                    background={colors.primary}\r\n                                    color='white'\r\n                                    disabled={!selectedSale}\r\n                                >\r\n                                    <Eye size='24' />\r\n                                    Ver Detalles\r\n                                </Button>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </L.ToolbarContainer>\r\n                    <L.TableContainer>\r\n                        <SalesTable\r\n                            onSaleSelect={setSelectedSale}\r\n                            selectedRows={selectedSale}\r\n                            shouldRefresh={CRUDAction === 'refresh'}\r\n                            onError={() => {}}\r\n                        />\r\n                    </L.TableContainer>\r\n                    {CRUDAction === 'view' && (\r\n                        <SaleDetailsModal\r\n                            show={CRUDAction === 'view'}\r\n                            details={selectedSale}\r\n                            onClose={() => setCRUDAction(null)}\r\n                            onPayment={() => setCRUDAction('refresh')}\r\n                        />\r\n                    )}\r\n                    <Modal backdrop show={CRUDAction === 'delete'} handleClose={() => setCRUDAction(null)}>\r\n                        <L.ConfirmContainer>\r\n                            <ConfirmAlert handleClose={() => setCRUDAction(null)} callback={handleDelete} />\r\n                        </L.ConfirmContainer>\r\n                    </Modal>\r\n                </L.ContentContainer>\r\n                <WidgetBox></WidgetBox>\r\n            </L.SeparatorWrapper>\r\n            {notification && <Notification type={notification.type}>{notification.message}</Notification>}\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default Sales;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/debts';\r\n\r\nexport const getDebts = async ({ page, filter }) => {\r\n    let pageParam = page ? `?page=${page}` : '?';\r\n    let filterParams = filter ? `&filter=${filter}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + pageParam + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const createDebt = async (debtData) => {\r\n    const response = await axios.post(BASE_URL, debtData).catch((error) => error.response);\r\n    return response;\r\n};\r\n\r\nexport const updateDebt = async (id, debtData) => {\r\n    const response = await axios.patch(BASE_URL + `/${id}`, debtData).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteDebt = async (id) => {\r\n    const response = await axios.delete(BASE_URL + `/${id}`).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","import { useState, useEffect, useMemo } from 'react';\r\n\r\nimport Table from 'components/Table';\r\nimport formatDate from 'utils/formatDate';\r\n\r\nimport { getDebts } from 'api/debts';\r\nimport { usePaginatedResource } from 'hooks/paginatedResource';\r\n\r\nconst DebtsTable = ({\r\n    selectedRows,\r\n    onDebtSelect = () => {},\r\n    shouldRefresh = false,\r\n    onShowDetailsClick = () => {},\r\n    onError = () => {},\r\n}) => {\r\n    const memoizedColumns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'ID',\r\n                accessor: 'id',\r\n            },\r\n            {\r\n                Header: 'Cliente',\r\n                accessor: 'sale.client.name',\r\n            },\r\n            {\r\n                Header: 'Deuda Bs',\r\n                accessor: 'converted_amount.PAYMENT_VES',\r\n                Cell: ({ value }) => {\r\n                    return value;\r\n                },\r\n            },\r\n            {\r\n                Header: 'Creado',\r\n                accessor: 'createdAt',\r\n                Cell: ({ value }) => {\r\n                    return formatDate(value);\r\n                },\r\n            },\r\n            {\r\n                Header: 'Pagado',\r\n                accessor: 'paid_date',\r\n                Cell: ({ value }) => {\r\n                    return value ? formatDate(value) : 'No pagado';\r\n                },\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const { data, loading, error, fetchResource } = usePaginatedResource({ page, filter, fetching: getDebts });\r\n\r\n    useEffect(() => {\r\n        if (shouldRefresh) fetchResource();\r\n    }, [shouldRefresh, fetchResource]);\r\n\r\n    useEffect(() => {\r\n        if (error) onError(error);\r\n    }, [error, onError]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                loading={loading}\r\n                data={data.records}\r\n                selectedRows={selectedRows}\r\n                onRowSelect={onDebtSelect}\r\n                columns={memoizedColumns}\r\n                onPaginate={setPage}\r\n                onFilter={setFilter}\r\n                filterPlaceholder='Buscar por nombre, cedula o teléfono del cliente...'\r\n                pageCount={data.pageCount}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DebtsTable;\r\n","import { useState } from 'react';\r\n\r\nimport * as L from 'components/CommonLayout/main.layout';\r\nimport DebtsTable from 'components/ModuleTables/DebtsTable';\r\nimport SaleDetailsModal from 'components/ModuleModals/SaleDetailsModal';\r\nimport Toolbar from 'components/Toolbar';\r\nimport Button from 'components/Button';\r\nimport { colors } from 'styles/theme';\r\nimport { Eye } from 'phosphor-react';\r\n\r\nconst DebtsPage = () => {\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [debtDetails, setDebtDetails] = useState(null);\r\n    const [CRUDAction, setCRUDAction] = useState(null);\r\n\r\n    return (\r\n        <L.Wrapper>\r\n            <L.SeparatorWrapper>\r\n                <L.ContentContainer>\r\n                    <L.ToolbarContainer>\r\n                        <Toolbar recordSelected={debtDetails}>\r\n                            <div>\r\n                                <Button\r\n                                    onClick={() => setShowDetails(true)}\r\n                                    background={colors.primary}\r\n                                    color='white'\r\n                                    disabled={!debtDetails}\r\n                                >\r\n                                    <Eye size='24' />\r\n                                    Ver Detalles\r\n                                </Button>\r\n                            </div>\r\n                        </Toolbar>\r\n                    </L.ToolbarContainer>\r\n                    <L.TableContainer>\r\n                        <DebtsTable\r\n                            onShowDetailsClick={(debtDebtails) => {\r\n                                setDebtDetails(debtDebtails);\r\n                                setShowDetails(true);\r\n                            }}\r\n                            selectedRows={debtDetails}\r\n                            onDebtSelect={setDebtDetails}\r\n                            shouldRefresh={CRUDAction === 'refresh'}\r\n                            onError={() => {}}\r\n                        />\r\n                    </L.TableContainer>\r\n                </L.ContentContainer>\r\n            </L.SeparatorWrapper>\r\n            {showDetails && (\r\n                <SaleDetailsModal\r\n                    show={showDetails}\r\n                    details={debtDetails && debtDetails.sale}\r\n                    onClose={() => setShowDetails(false)}\r\n                    onPayment={() => {\r\n                        setCRUDAction('refresh');\r\n                        setDebtDetails(null);\r\n                    }}\r\n                />\r\n            )}\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default DebtsPage;\r\n","import styled from 'styled-components';\r\nimport { colors, breakpoints } from 'styles/theme';\r\n\r\nexport const ContentWrapper = styled.div`\r\n    flex: 1;\r\n    padding: 10px;\r\n    gap: 1%;\r\n\r\n    @media (min-width: ${breakpoints.desktop}) {\r\n        flex-direction: row;\r\n    }\r\n`;\r\n\r\nexport const ControlsWrapper = styled.div`\r\n    flex: 0 1 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ControlsContainer = styled.div`\r\n    flex-direction: row;\r\n    border-bottom: 1px solid black;\r\n    padding-bottom: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 5px;\r\n`;\r\n\r\nexport const LeftWrapper = styled.div`\r\n    gap: 10px;\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n        flex: 1 1 65%;\r\n    }\r\n`;\r\n\r\nexport const RightWrapper = styled.div`\r\n    gap: 20px;\r\n\r\n    @media (min-width: ${breakpoints.tablet}) {\r\n        flex: 1 1 34%;\r\n    }\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n    flex-grow: 1;\r\n    background: white;\r\n    box-shadow: rgb(101 119 134 / 20%) 0px 0px 15px, rgb(101 119 134 / 15%) 0px 0px 3px 1px;\r\n    border-radius: 16px;\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n    flex: 0 0 50px;\r\n    justify-content: center;\r\n    background: ${colors.superLightGray};\r\n\r\n    padding-left: 20px;\r\n\r\n    border-top-left-radius: 16px;\r\n    border-top-right-radius: 16px;\r\n    border-bottom: 1px solid ${colors.lightGray};\r\n\r\n    h2 {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const CardBody = styled.div`\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n`;\r\n\r\nexport const SalesContainer = styled.div``;\r\n\r\nexport const PaymentsContainer = styled.div`\r\n    flex-direction: column;\r\n    gap: 10px;\r\n\r\n    @media (min-width: ${breakpoints.desktop}) {\r\n        flex-direction: row;\r\n    }\r\n`;\r\n\r\nexport const DebtsContainer = styled.div``;\r\n\r\nexport const PaymentsChartContainer = styled.div``;\r\n\r\nexport const TopContainer = styled.div``;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = '/api/reports';\r\n\r\nexport const getSalesReport = async ({ from, to }) => {\r\n    let filterParams = from && to ? `?from=${from}&to=${to}` : '';\r\n\r\n    const response = await axios.get(BASE_URL + '/sale' + filterParams).catch((error) => error.response);\r\n    return response.data;\r\n};\r\n","export const COLUMNS = [\r\n    {\r\n        Header: 'Producto',\r\n        accessor: 'product',\r\n    },\r\n    {\r\n        Header: 'Cantidad',\r\n        accessor: 'quantity',\r\n    },\r\n    {\r\n        Header: 'Bruto $',\r\n        accessor: 'rawProfitUSD',\r\n        Cell: ({ value }) => {\r\n            return value ? '$' + value.toFixed(4) : 0;\r\n        },\r\n        Footer: ({ data }) => {\r\n            let total = data.reduce((acc, product) => {\r\n                return acc + product.rawProfitUSD;\r\n            }, 0);\r\n\r\n            return '$' + total.toFixed(4);\r\n        },\r\n    },\r\n    {\r\n        Header: 'Neto $',\r\n        accessor: 'netProfitUSD',\r\n        Cell: ({ value }) => {\r\n            return value ? '$' + value.toFixed(4) : 0;\r\n        },\r\n        Footer: ({ data }) => {\r\n            let total = data.reduce((acc, product) => {\r\n                return acc + product.netProfitUSD;\r\n            }, 0);\r\n\r\n            return '$' + total.toFixed(4);\r\n        },\r\n    },\r\n    {\r\n        Header: 'Bruto Bs',\r\n        accessor: 'rawProfitVES',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toFixed(2) + ' Bs' : 0;\r\n        },\r\n        Footer: ({ data }) => {\r\n            let total = data.reduce((acc, product) => {\r\n                return acc + product.rawProfitVES;\r\n            }, 0);\r\n\r\n            return total.toFixed(2) + ' Bs';\r\n        },\r\n    },\r\n    {\r\n        Header: 'Neto Bs',\r\n        accessor: 'netProfitVES',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toFixed(2) + ' Bs' : 0;\r\n        },\r\n        Footer: ({ data }) => {\r\n            let total = data.reduce((acc, product) => {\r\n                return acc + product.netProfitVES;\r\n            }, 0);\r\n\r\n            return total.toFixed(2) + ' Bs';\r\n        },\r\n    },\r\n];\r\n","import { useState, useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport { COLUMNS } from './columns';\r\n\r\nconst SalesReportTable = ({ data, maxHeight }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    const onFilter = (value) => {\r\n        console.log(value);\r\n        const filtered = data.filter((f) => f.product.toLowerCase().includes(value.toLowerCase()));\r\n        setFilteredData(filtered);\r\n    };\r\n\r\n    return (\r\n        <Table\r\n            data={filteredData.length ? filteredData : data}\r\n            columns={memoizedColumns}\r\n            onFilter={onFilter}\r\n            filterPlaceholder='Buscar...'\r\n            filterHeight='30px'\r\n            maxHeight={maxHeight}\r\n            capitalize={[0]}\r\n            showFooter\r\n        />\r\n    );\r\n};\r\n\r\nexport default SalesReportTable;\r\n","export const COLUMNS = [\r\n    {\r\n        Header: 'Método',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Total',\r\n        accessor: 'amount',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toFixed(2) : 0;\r\n        },\r\n    },\r\n    {\r\n        Header: 'Moneda',\r\n        accessor: 'currency',\r\n    },\r\n];\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport { COLUMNS } from './columns';\r\n\r\nconst PaymentsReportTable = ({ data, maxHeight }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n\r\n    return <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} />;\r\n};\r\n\r\nexport default PaymentsReportTable;\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'saleId',\r\n    },\r\n    {\r\n        Header: 'Nombre',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Original',\r\n        accessor: 'original_amount',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toFixed(2) : 0;\r\n        },\r\n    },\r\n    {\r\n        Header: 'Actual',\r\n        accessor: 'current_amount',\r\n        Cell: ({ value }) => {\r\n            return value ? value.toFixed(2) : 0;\r\n        },\r\n    },\r\n    {\r\n        Header: 'Creada',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n    },\r\n    {\r\n        Header: 'Pagado',\r\n        accessor: 'paid_date',\r\n        Cell: ({ value }) => {\r\n            return value ? formatDate(value) : 'No pagado';\r\n        },\r\n    },\r\n];\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport { COLUMNS } from './columns';\r\n\r\nconst DebtsReportTable = ({ data, maxHeight }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n    return <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} />;\r\n};\r\n\r\nexport default DebtsReportTable;\r\n","import formatDate from 'utils/formatDate';\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n    },\r\n    {\r\n        Header: 'Cliente',\r\n        accessor: 'name',\r\n    },\r\n    {\r\n        Header: 'Pagado',\r\n        accessor: (row) => {\r\n            return row.currency === 'VES' ? row.amount_VES + ' Bs' : '$' + row.amount_USD;\r\n        },\r\n    },\r\n    {\r\n        Header: 'Fecha',\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => {\r\n            return formatDate(value);\r\n        },\r\n        Footer: ({ data }) => {\r\n            let total_USD = data.reduce((acc, product) => {\r\n                return acc + product.amount_USD;\r\n            }, 0);\r\n            let total_VES = data.reduce((acc, product) => {\r\n                return acc + product.amount_VES;\r\n            }, 0);\r\n\r\n            return (\r\n                <span>\r\n                    USD: {total_USD.toFixed(2)} - VES: {total_VES.toFixed(2)}\r\n                </span>\r\n            );\r\n        },\r\n    },\r\n];\r\n","import { useMemo } from 'react';\r\nimport Table from 'components/Table';\r\nimport { COLUMNS } from './columns';\r\n\r\nconst DebtPaymentsTable = ({ data, maxHeight }) => {\r\n    const memoizedColumns = useMemo(() => COLUMNS, []);\r\n    return <Table data={data} columns={memoizedColumns} maxHeight={maxHeight} showFooter />;\r\n};\r\n\r\nexport default DebtPaymentsTable;\r\n","import { useState, useEffect } from 'react';\r\nimport { Wrapper, SeparatorWrapper, ContentContainer, ReportTableContainer } from 'components/CommonLayout/main.layout';\r\nimport * as L from './layout.styles.js';\r\nimport { DateTime } from 'luxon';\r\nimport Button from 'components/Button';\r\nimport { getSalesReport } from 'api/reports';\r\nimport Notification from 'components/Notification';\r\nimport { useNotification } from 'hooks/notification';\r\nimport SalesReportTable from 'components/ModuleTables/ReportTables/Sales';\r\nimport PaymentsReportTable from 'components/ModuleTables/ReportTables/Payments';\r\nimport DebtsReportTable from 'components/ModuleTables/ReportTables/Debts';\r\nimport DebtPaymentsTable from 'components/ModuleTables/ReportTables/DebtPayments';\r\n\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\nconst ReportsPage = () => {\r\n    const [dates, setDates] = useState({\r\n        from: DateTime.now().toISODate(),\r\n        to: DateTime.now().toISODate(),\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const { notification, showNotification } = useNotification();\r\n\r\n    const [reportDetails, setReportDetails] = useState();\r\n    const [chartData, setChartData] = useState();\r\n\r\n    const handleClick = async (event) => {\r\n        event.preventDefault();\r\n        if (!loading) {\r\n            setLoading(true);\r\n            const response = await getSalesReport({ from: dates.from, to: dates.to });\r\n            setLoading(false);\r\n\r\n            if (response.error) {\r\n                showNotification('error', response.error.message);\r\n            } else {\r\n                setReportDetails(null);\r\n                setReportDetails({ ...response });\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (reportDetails) {\r\n            const payment_chart_data = reportDetails.payment_report.reduce((acc, payment) => {\r\n                return [...acc, { id: payment.name + ' ' + payment.currency, label: payment.name, value: payment.usedCount }];\r\n            }, []);\r\n\r\n            setChartData((prevState) => ({ ...prevState, payment: payment_chart_data }));\r\n\r\n            let top_sell_chart_data = reportDetails.top_sell_products.reduce((acc, product) => {\r\n                return [...acc, { id: product.product, label: product.product, value: product.totalSold }];\r\n            }, []);\r\n\r\n            setChartData((prevState) => ({ ...prevState, top_sell: top_sell_chart_data }));\r\n\r\n            let hourly_sales_chart_data = reportDetails.hourly_sales_report.reduce((acc, hour) => {\r\n                return [...acc, { id: hour.hour, label: hour.hour, value: hour.total }];\r\n            }, []);\r\n\r\n            setChartData((prevState) => ({ ...prevState, hourly_sales: hourly_sales_chart_data }));\r\n        }\r\n    }, [reportDetails]);\r\n\r\n    console.log(chartData);\r\n    return (\r\n        <Wrapper>\r\n            <SeparatorWrapper>\r\n                <ContentContainer>\r\n                    <L.ControlsWrapper>\r\n                        <L.ControlsContainer>\r\n                            <span>Fecha: </span>\r\n                            <input type='date' onChange={(event) => setDates({ ...dates, from: event.target.value })} value={dates.from} />\r\n                            <input type='date' onChange={(event) => setDates({ ...dates, to: event.target.value })} value={dates.to} />\r\n                            <Button loading={loading} onClick={handleClick} background='green' color='white'>\r\n                                Enviar\r\n                            </Button>\r\n                        </L.ControlsContainer>\r\n                    </L.ControlsWrapper>\r\n                    {reportDetails && (\r\n                        <L.ContentWrapper>\r\n                            <L.LeftWrapper>\r\n                                <L.SalesContainer>\r\n                                    <L.CardContainer>\r\n                                        <L.CardHeader>\r\n                                            <h3>Ventas</h3>\r\n                                        </L.CardHeader>\r\n                                        <L.CardBody>\r\n                                            <ReportTableContainer>\r\n                                                {reportDetails.sale_report.length > 0 && (\r\n                                                    <SalesReportTable\r\n                                                        data={reportDetails.sale_report}\r\n                                                        maxHeight='300px'\r\n                                                        onFilter={() => {}}\r\n                                                    />\r\n                                                )}\r\n                                            </ReportTableContainer>\r\n                                        </L.CardBody>\r\n                                    </L.CardContainer>\r\n                                </L.SalesContainer>\r\n                                <L.PaymentsContainer>\r\n                                    <L.CardContainer>\r\n                                        <L.CardHeader>\r\n                                            <h3>Pagos</h3>\r\n                                        </L.CardHeader>\r\n                                        <L.CardBody>\r\n                                            <ReportTableContainer>\r\n                                                {reportDetails.payment_report.length > 0 && (\r\n                                                    <PaymentsReportTable data={reportDetails.payment_report} maxHeight='200px' />\r\n                                                )}\r\n                                            </ReportTableContainer>\r\n                                        </L.CardBody>\r\n                                    </L.CardContainer>\r\n                                    <L.CardContainer>\r\n                                        <L.CardHeader>\r\n                                            <h3>Deudas</h3>\r\n                                        </L.CardHeader>\r\n                                        <L.CardBody>\r\n                                            <ReportTableContainer>\r\n                                                {reportDetails.debt_report.length > 0 && (\r\n                                                    <DebtsReportTable data={reportDetails.debt_report} maxHeight='200px' />\r\n                                                )}\r\n                                            </ReportTableContainer>\r\n                                        </L.CardBody>\r\n                                    </L.CardContainer>\r\n                                </L.PaymentsContainer>\r\n                                <div>\r\n                                    <L.CardContainer>\r\n                                        <L.CardHeader>\r\n                                            <h3>Pagos de deudas</h3>\r\n                                        </L.CardHeader>\r\n                                        <L.CardBody>\r\n                                            <ReportTableContainer>\r\n                                                {reportDetails.debt_payment_report.length > 0 && (\r\n                                                    <DebtPaymentsTable data={reportDetails.debt_payment_report} maxHeight='200px' />\r\n                                                )}\r\n                                            </ReportTableContainer>\r\n                                        </L.CardBody>\r\n                                    </L.CardContainer>\r\n                                </div>\r\n                                <L.DebtsContainer></L.DebtsContainer>\r\n                            </L.LeftWrapper>\r\n                            <L.RightWrapper>\r\n                                <div>\r\n                                    <L.CardContainer>\r\n                                        <L.CardHeader>\r\n                                            <h3>Métodos de pago más usados</h3>\r\n                                        </L.CardHeader>\r\n                                        <L.CardBody>\r\n                                            {chartData && chartData.payment && (\r\n                                                <div style={{ height: '200px' }}>\r\n                                                    <ResponsivePie\r\n                                                        data={chartData.payment}\r\n                                                        margin={{ top: 20, bottom: 20, right: 100 }}\r\n                                                        enableArcLinkLabels={true}\r\n                                                        legends={[\r\n                                                            {\r\n                                                                anchor: 'right',\r\n                                                                direction: 'column',\r\n                                                                translateX: 30,\r\n                                                                translateY: 0,\r\n                                                                itemsSpacing: 30,\r\n                                                                itemWidth: 0,\r\n                                                                itemHeight: 0,\r\n                                                                itemTextColor: '#999',\r\n                                                            },\r\n                                                        ]}\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </L.CardBody>\r\n                                    </L.CardContainer>\r\n                                </div>\r\n                                <div>\r\n                                    <L.CardContainer>\r\n                                        <L.CardHeader>\r\n                                            <h3>Horas más activas</h3>\r\n                                        </L.CardHeader>\r\n                                        <L.CardBody>\r\n                                            {chartData && chartData.hourly_sales && (\r\n                                                <div style={{ height: '200px' }}>\r\n                                                    <ResponsiveBar\r\n                                                        data={chartData.hourly_sales}\r\n                                                        margin={{ bottom: 45, top: 10 }}\r\n                                                        valueFormat={(value) => (value > 0 ? value : '')}\r\n                                                        axisBottom={{\r\n                                                            tickSize: 10,\r\n                                                            tickPadding: 5,\r\n                                                            tickRotation: 0,\r\n                                                            legend: 'Reloj 24 horas',\r\n                                                            legendPosition: 'middle',\r\n                                                            legendOffset: 35,\r\n                                                        }}\r\n                                                        enableGridX\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </L.CardBody>\r\n                                    </L.CardContainer>\r\n                                </div>\r\n                                <L.TopContainer>\r\n                                    <L.CardContainer>\r\n                                        <L.CardHeader>\r\n                                            <h3>Productos más vendidos</h3>\r\n                                        </L.CardHeader>\r\n                                        <L.CardBody>\r\n                                            {chartData && chartData.top_sell && (\r\n                                                <div style={{ height: '200px' }}>\r\n                                                    <ResponsiveBar\r\n                                                        data={chartData.top_sell.reverse()}\r\n                                                        layout='horizontal'\r\n                                                        margin={{ left: 150, right: 10 }}\r\n                                                        padding={0.7}\r\n                                                        enableGridX\r\n                                                        enableGridY\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                        </L.CardBody>\r\n                                    </L.CardContainer>\r\n                                </L.TopContainer>\r\n                            </L.RightWrapper>\r\n                        </L.ContentWrapper>\r\n                    )}\r\n                </ContentContainer>\r\n            </SeparatorWrapper>\r\n            {notification && <Notification type={notification.type}>{notification.message}</Notification>}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default ReportsPage;\r\n","import { HeaderTitleContainer, Heading, DolarValueContainer } from './layout.styles';\r\n\r\nimport * as L from './new-layout.styles';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from 'components/Navbar';\r\nimport Notification from 'components/Notification';\r\n\r\nimport ClientsPage from 'pages/Clients';\r\nimport UsersPage from 'pages/Users';\r\nimport SuppliersPage from 'pages/Suppliers';\r\nimport CategoriesPage from 'pages/Categories';\r\nimport ProductsPage from 'pages/Products';\r\nimport SupplyingsPage from 'pages/Supplyings';\r\nimport SalesControl from 'pages/SalesControl';\r\nimport CurrenciesPage from 'pages/Currencies';\r\nimport SalesPage from 'pages/Sales';\r\nimport DebtsPage from 'pages/Debts';\r\nimport ReportsPage from 'pages/Reports';\r\n\r\nimport { useRedirectToActiveLocation } from 'hooks/redirect';\r\nimport { useCurrencyRates } from 'hooks/useCurrencyRates';\r\n\r\nconst HomePage = () => {\r\n    useRedirectToActiveLocation();\r\n\r\n    const { currencyRates, notification } = useCurrencyRates(true);\r\n\r\n    return (\r\n        <L.Wrapper>\r\n            <L.Header>\r\n                <Navbar />\r\n            </L.Header>\r\n            <L.MainWrapper>\r\n                <L.Main>\r\n                    <Switch>\r\n                        <Route path='/control-de-ventas' component={SalesControl}></Route>\r\n                        <Route path='/inventario'>Hola</Route>\r\n                        <Route path='/reportes' component={ReportsPage} />\r\n                        <Route path='/deudas' component={DebtsPage} />\r\n                        <Route path='/categorias' component={CategoriesPage} />\r\n                        <Route path='/clientes' component={ClientsPage} />\r\n                        <Route path='/productos' component={ProductsPage} />\r\n                        <Route path='/ventas' component={SalesPage} />\r\n                        <Route path='/abastecimientos' component={SupplyingsPage} />\r\n                        <Route path='/proveedores' component={SuppliersPage} />\r\n                        <Route path='/usuarios' component={UsersPage} />\r\n                        <Route path='/tasas-de-cambio' component={CurrenciesPage} />\r\n                        <Route path='/dinero' />\r\n                    </Switch>\r\n                </L.Main>\r\n                <L.MainHeader>\r\n                    <HeaderTitleContainer>\r\n                        <Heading>{localStorage.getItem('activeLocation')}</Heading>\r\n                    </HeaderTitleContainer>\r\n                    <DolarValueContainer>\r\n                        <h3>Tasa del dolar:</h3>\r\n                        <span>\r\n                            {(currencyRates &&\r\n                                currencyRates['PAYMENT_VES'] &&\r\n                                currencyRates['PAYMENT_VES'].value.toLocaleString() + ' Bs') ||\r\n                                'No hay valor asignado'}\r\n                        </span>\r\n                    </DolarValueContainer>\r\n                </L.MainHeader>\r\n            </L.MainWrapper>\r\n            {notification && <Notification type={notification.type}>{notification.text}</Notification>}\r\n        </L.Wrapper>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nexport const useRedirectToActiveLocation = () => {\r\n    const activeLocation = localStorage.getItem(\"activeLocation\") || \"\";\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const currentLocation = location.pathname;\r\n\r\n    if (currentLocation !== activeLocation) {\r\n        localStorage.setItem(\"activeLocation\", currentLocation);\r\n        if (currentLocation === \"/\") history.push(activeLocation);\r\n    }\r\n\r\n    return { activeLocation };\r\n};\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport LoginPage from 'pages/Login';\r\nimport HomePage from 'pages/Home';\r\n\r\nimport DolarContextProvider from 'context/dolar';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/login' component={LoginPage} />\r\n                <DolarContextProvider>\r\n                    <Route path='/' component={HomePage} />\r\n                </DolarContextProvider>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\n\r\naxios.interceptors.response.use(\r\n    (res) => res,\r\n    (error) => {\r\n        if (error.response.data.error) {\r\n            return error.response;\r\n        } else if (error.response.status === 500) {\r\n            return {\r\n                data: {\r\n                    error: {\r\n                        message: 'El servidor se encuentra offline',\r\n                    },\r\n                },\r\n            };\r\n        } else {\r\n            return {\r\n                data: error.response.data,\r\n            };\r\n        }\r\n    }\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'api/errorHandling';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}