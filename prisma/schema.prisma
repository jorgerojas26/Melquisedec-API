generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model client {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  cedula      String    @unique @db.VarChar(255)
  phoneNumber String?   @db.VarChar(11)
  createdAt   DateTime? @db.Timestamp(0)
  sale        sale[]
}

model user {
  id          Int       @id @default(autoincrement())
  username    String    @unique @db.VarChar(255)
  password    String    @db.VarChar(255)
  permissions Int       @db.TinyInt
  createdAt   DateTime? @db.Timestamp(0)
}

model supplier {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  rif         String      @db.VarChar(15)
  address     String      @db.VarChar(255)
  phoneNumber String      @db.VarChar(11)
  createdAt   DateTime?   @db.Timestamp(0)
  supplying   supplying[]
}

model category {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime? @db.Timestamp(0)
}

model product {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(255)
  brand     String    @db.VarChar(255)
  createdAt DateTime? @db.Timestamp(0)

  product_variant                                                product_variant[]
  product_variant_log_productToproduct_variant_log_old_productId product_variant_log[] @relation("productToproduct_variant_log_old_productId")
  product_variant_log                                            product_variant_log[]
}

model product_variant {
  id            Int       @id @default(autoincrement())
  productId     Int
  name          String    @db.VarChar(255)
  price         Decimal   @db.Decimal(19, 4)
  profitPercent Decimal   @default(30) @db.Decimal(10, 4)
  unitValue     Float     @default(1) @db.Float
  stock         Decimal?  @default(0) @db.Decimal(10, 4)
  imagePath     String?   @db.VarChar(255)
  createdAt     DateTime? @db.Timestamp(0)
  product       product   @relation(fields: [productId], references: [id])

  supplying    supplying[]
  sale_product sale_product[]
  arbitrary_stock_change arbitrary_stock_change[]
}

model product_variant_log {
  id                                                 Int       @id @default(autoincrement())
  old_productId                                      Int?
  productId                                          Int
  old_name                                           String?   @db.VarChar(255)
  name                                               String    @db.VarChar(255)
  old_price                                          Decimal?  @db.Decimal(19, 4)
  price                                              Decimal   @db.Decimal(19, 4)
  old_profitPercent                                  Float?    @db.Float
  profitPercent                                      Float     @db.Float
  old_unitValue                                      Float?    @db.Float
  unitValue                                          Float     @db.Float
  old_stock                                          Decimal?  @db.Decimal(10, 4)
  stock                                              Decimal   @db.Decimal(10, 4)
  imagePath                                          String?   @db.VarChar(255)
  action                                             String    @db.VarChar(255)
  createdAt                                          DateTime? @db.Timestamp(0)
  product_productToproduct_variant_log_old_productId product?  @relation("productToproduct_variant_log_old_productId", fields: [old_productId], references: [id])
  product                                            product   @relation(fields: [productId], references: [id])
}

model supplying {
  id                 Int       @id @default(autoincrement())
  product_variant_id Int
  supplierId         Int
  buyPrice           Decimal   @db.Decimal(19, 4)
  quantity           Decimal   @db.Decimal(10, 4)
  createdAt          DateTime? @db.Timestamp(0)

  supplier        supplier        @relation(fields: [supplierId], references: [id])
  product_variant product_variant @relation(fields: [product_variant_id], references: [id])
}

model currency_rate {
  id       Int     @id @default(autoincrement())
  currency String  @unique @db.VarChar(20)
  value    Decimal @db.Decimal(19, 4)
  rounding Float?    
}

model sale {
  id            Int                  @id @default(autoincrement())
  clientId      Int?
  totalAmount   Decimal              @db.Decimal(65, 30)
  status        Int                  @default(1) @db.TinyInt
  createdAt     DateTime?            @db.Timestamp(0)
  currencyRates sale_currency_rate[]
  products      sale_product[]

  client  client?   @relation(fields: [clientId], references: [id])
  debt    debt?
  payment payment[]
}

model sale_currency_rate {
  id        Int       @id @default(autoincrement())
  saleId    Int
  currency  String    @db.VarChar(20)
  value     Decimal   @db.Decimal(19, 4)
  rounding  Float?       
  createdAt DateTime? @db.Timestamp(0)

  sale sale @relation(fields: [saleId], references: [id])
}

model sale_product {
  id                 Int       @id @default(autoincrement())
  saleId             Int
  product_variant_id Int
  price              Decimal   @db.Decimal(19, 4)
  quantity           Decimal   @db.Decimal(10, 4)
  profitPercent      Decimal   @db.Decimal(10, 4)
  createdAt          DateTime? @db.Timestamp(0)

  sale            sale            @relation(fields: [saleId], references: [id])
  product_variant product_variant @relation(fields: [product_variant_id], references: [id])

}

model arbitrary_stock_change {
  id                 Int       @id @default(autoincrement())
  product_variant_id Int
  old_stock          Decimal   @db.Decimal(10, 4)
  new_stock          Decimal   @db.Decimal(10, 4)
  reasons            String    @db.VarChar(255)
  createdAt          DateTime? @db.Timestamp(0)

  product_variant product_variant @relation(fields: [product_variant_id], references: [id])
}

model debt {
  id              Int       @id @default(autoincrement())
  saleId          Int
  original_amount Decimal   @db.Decimal(65, 30)
  current_amount  Decimal   @db.Decimal(65, 30)
  paid            Int       @default(0) @db.TinyInt
  paid_date       DateTime?
  createdAt       DateTime? @db.Timestamp(0)

  sale sale @relation(fields: [saleId], references: [id])
}

model bank {
  id                 Int       @id @default(autoincrement())
  bank_name          String    @db.VarChar(255)
  number             String    @db.VarChar(25)
  type               String    @db.VarChar(50)
  owner_name         String    @db.VarChar(255)
  owner_cedula       String    @db.VarChar(255)
  owner_phone_number String    @db.VarChar(11)
  createdAt          DateTime? @db.Timestamp(0)

  payment payment[]
}

model payment_method {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  status    Int       @default(1) @db.TinyInt
  createdAt DateTime? @db.Timestamp(0)
  payment   payment[]
}

model payment {
  id                Int       @id @default(autoincrement())
  payment_method_id Int
  sale_id           Int
  amount            Decimal   @db.Decimal(65, 30)
  currency          String    @db.VarChar(20)
  transaction_code  String?   @db.VarChar(255)
  bank_id           Int?
  createdAt         DateTime? @db.Timestamp(0)

  sale           sale?           @relation(fields: [sale_id], references: [id])
  payment_method payment_method? @relation(fields: [payment_method_id], references: [id])
  bank           bank?           @relation(fields: [bank_id], references: [id])
}

